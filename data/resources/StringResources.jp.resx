<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddInManager.About" xml:space="preserve">
    <value>アバウト</value>
  </data>
  <data name="AddInManager.ActionCancelDeinstallation" xml:space="preserve">
    <value>アンインストールの中止</value>
  </data>
  <data name="AddInManager.ActionCancelInstallation" xml:space="preserve">
    <value>インストールの中止</value>
  </data>
  <data name="AddInManager.ActionCancelUpdate" xml:space="preserve">
    <value>アップデートの中止</value>
  </data>
  <data name="AddInManager.ActionDisable" xml:space="preserve">
    <value>無効</value>
  </data>
  <data name="AddInManager.ActionEnable" xml:space="preserve">
    <value>有効</value>
  </data>
  <data name="AddInManager.ActionInstall" xml:space="preserve">
    <value>インストール</value>
  </data>
  <data name="AddInManager.ActionUninstall" xml:space="preserve">
    <value>アンインストール</value>
  </data>
  <data name="AddInManager.ActionUpdate" xml:space="preserve">
    <value>アップデート</value>
  </data>
  <data name="AddInManager.AddInDependencyFailed" xml:space="preserve">
    <value>依存するアドインが見つかりません。このアドインを有効にするために依存アドインをインストールしてください</value>
  </data>
  <data name="AddInManager.AddInDisabled" xml:space="preserve">
    <value>無効</value>
  </data>
  <data name="AddInManager.AddInEnabled" xml:space="preserve">
    <value>アドインはSharpDevelopの再起動後に有効になります</value>
  </data>
  <data name="AddInManager.AddInInstalled" xml:space="preserve">
    <value>アドインはSharpDevelopの再起動後にインストールされます</value>
  </data>
  <data name="AddInManager.AddInInstalledTwice" xml:space="preserve">
    <value>このアドインは2度インストールされました。1つをアンインストールしてください</value>
  </data>
  <data name="AddInManager.AddInMustHaveIdentity" xml:space="preserve">
    <value>アドインマネージャで利用するために、アドインは&lt;識別子&gt;を持たなければなりません</value>
  </data>
  <data name="AddInManager.AddInRemoved" xml:space="preserve">
    <value>アドインはSharpDevelopの再起動後に削除されます</value>
  </data>
  <data name="AddInManager.AddInUpdated" xml:space="preserve">
    <value>アドインはSharpDevelopの再起動後にアップデートされます</value>
  </data>
  <data name="AddInManager.AddInWillBeDisabled" xml:space="preserve">
    <value>アドインはSharpDevelopの再起動後に無効になります</value>
  </data>
  <data name="AddInManager.CannotDisableAddInManager" xml:space="preserve">
    <value>アドインマネージャは無効にできません。アドインを再度有効にするのに必要です！</value>
  </data>
  <data name="AddInManager.CannotInstallIntoApplicationDirectory" xml:space="preserve">
    <value>アドインを${ProductName}ディレクトリにインストールできません。インストール前に自動的に設定されます</value>
  </data>
  <data name="AddInManager.DescriptionCancelDeinstallation" xml:space="preserve">
    <value>選択したアドインのアンインストールを中断します。</value>
  </data>
  <data name="AddInManager.DescriptionCancelInstall" xml:space="preserve">
    <value>選択したアドインのインストールを中断します。</value>
  </data>
  <data name="AddInManager.DescriptionCancelUpdate" xml:space="preserve">
    <value>選択したアドインのアップデートを中断します。</value>
  </data>
  <data name="AddInManager.DescriptionDisable" xml:space="preserve">
    <value>選択したアドインを無効</value>
  </data>
  <data name="AddInManager.DescriptionEnable" xml:space="preserve">
    <value>選択したアドインを有効</value>
  </data>
  <data name="AddInManager.DescriptionInconsistentSelection" xml:space="preserve">
    <value>矛盾した選択です。同じ状態のアドインのみ選択してください</value>
  </data>
  <data name="AddInManager.FileAssociation" xml:space="preserve">
    <value>アドイン インストール パッケージ</value>
  </data>
  <data name="AddInManager.FileFilter" xml:space="preserve">
    <value>SharpDevelop アドイン|*.addin;*.sdaddin|すべてのファイル|*.*</value>
  </data>
  <data name="AddInManager.InstallButton" xml:space="preserve">
    <value>アドインのインストール(&amp;I)</value>
  </data>
  <data name="AddInManager.NoAddInsInstalled" xml:space="preserve">
    <value>アドインがインストールされていません。インターネットからアドインをダウンロードし、「アドインのインストール」をクリックして、ダウンロードしたファイルを選択すれば、インストールできます。</value>
  </data>
  <data name="AddInManager.OpenWebsite" xml:space="preserve">
    <value>Webサイトを開く</value>
  </data>
  <data name="AddInManager.Options" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="AddInManager.RequiredBy" xml:space="preserve">
    <value>アドイン被依存：</value>
  </data>
  <data name="AddInManager.RequiredDependencies" xml:space="preserve">
    <value>必要な依存関係：</value>
  </data>
  <data name="AddInManager.ShowPreinstalledAddIns" xml:space="preserve">
    <value>プレインストールのアドインを表示</value>
  </data>
  <data name="AddInManager.Title" xml:space="preserve">
    <value>アドインマネージャ</value>
  </data>
  <data name="AddInManager.UnknownFileFormat" xml:space="preserve">
    <value>不明なファイル形式</value>
  </data>
  <data name="AddInManager2.AddInsView.InstallFromArchive" xml:space="preserve">
    <value>圧縮ファイルからインストール...</value>
  </data>
  <data name="AddInManager2.AddInsView.Repository" xml:space="preserve">
    <value>リポジトリ：</value>
  </data>
  <data name="AddInManager2.AddInsView.Search" xml:space="preserve">
    <value>検索：</value>
  </data>
  <data name="AddInManager2.AddInsView.ShowPreinstalledAddIns" xml:space="preserve">
    <value>プレインストールのアドインを表示</value>
  </data>
  <data name="AddInManager2.AddInsView.ShowPrereleaseAddIns" xml:space="preserve">
    <value>リリース前バージョンを表示</value>
  </data>
  <data name="AddInManager2.CannotRemoveAddInManager" xml:space="preserve">
    <value>アドインマネージャはアンインストールできません。アドインを再インストールするのに必要です！</value>
  </data>
  <data name="AddInManager2.DefaultRepository" xml:space="preserve">
    <value>SharpDevelop アドイン リポジトリ</value>
  </data>
  <data name="AddInManager2.Details.CreatedBy" xml:space="preserve">
    <value>作成：</value>
  </data>
  <data name="AddInManager2.Details.Dependencies" xml:space="preserve">
    <value>依存関係：</value>
  </data>
  <data name="AddInManager2.Details.DownloadCount" xml:space="preserve">
    <value>ダウンロード：</value>
  </data>
  <data name="AddInManager2.Details.FileName" xml:space="preserve">
    <value>ファイル名：</value>
  </data>
  <data name="AddInManager2.Details.InstalledVersion" xml:space="preserve">
    <value>インストール済みバージョン：</value>
  </data>
  <data name="AddInManager2.Details.LastUpdated" xml:space="preserve">
    <value>最終更新：</value>
  </data>
  <data name="AddInManager2.Details.MoreInformation" xml:space="preserve">
    <value>詳細</value>
  </data>
  <data name="AddInManager2.Details.NewVersion" xml:space="preserve">
    <value>新バージョン：</value>
  </data>
  <data name="AddInManager2.Details.Rating" xml:space="preserve">
    <value>評価：</value>
  </data>
  <data name="AddInManager2.Details.ReportAbuse" xml:space="preserve">
    <value>違反を報告</value>
  </data>
  <data name="AddInManager2.Details.Version" xml:space="preserve">
    <value>バージョン：</value>
  </data>
  <data name="AddInManager2.Details.ViewLicenseTerms" xml:space="preserve">
    <value>ライセンス条項の表示</value>
  </data>
  <data name="AddInManager2.DisableDependentWarning" xml:space="preserve">
    <value>以下のインストール済みアドインが {0} に依存しています：

{1}

アドインを無効にすると、これらのアドインも動作しなくなります！本当に続行しますか？</value>
  </data>
  <data name="AddInManager2.InstallDependentMessage" xml:space="preserve">
    <value>パッケージ "{0}" は1つ以上の追加パッケージが必要です：

{1}

これらのパッケージをダウンロードしてインストールします。続行しますか？</value>
  </data>
  <data name="AddInManager2.InvalidPackage" xml:space="preserve">
    <value>選択されたパッケージには有効なSharpDevelopアドインが含まれていません。</value>
  </data>
  <data name="AddInManager2.LicenseAcceptance.AcceptButton" xml:space="preserve">
    <value>承諾(&amp;A)</value>
  </data>
  <data name="AddInManager2.LicenseAcceptance.DeclineButton" xml:space="preserve">
    <value>拒否(&amp;D)</value>
  </data>
  <data name="AddInManager2.LicenseAcceptance.Explanation.Package" xml:space="preserve">
    <value>"承諾" をクリックすると、上記のパッケージのライセンス契約に同意します。
ライセンス契約に同意しない場合は "拒否" をクリックしてください。</value>
  </data>
  <data name="AddInManager2.LicenseAcceptance.Explanation.Packages" xml:space="preserve">
    <value>"承諾" をクリックすると、上記のパッケージのライセンス契約に同意します。
ライセンス契約に同意しない場合は "拒否" をクリックしてください。</value>
  </data>
  <data name="AddInManager2.LicenseAcceptance.Introduction.Package" xml:space="preserve">
    <value>次のパッケージはクリックによるライセンスの同意が必要です：</value>
  </data>
  <data name="AddInManager2.LicenseAcceptance.Introduction.Packages" xml:space="preserve">
    <value>次のパッケージはクリックによるライセンスの同意が必要です：</value>
  </data>
  <data name="AddInManager2.LicenseAcceptance.Title" xml:space="preserve">
    <value>ライセンス契約</value>
  </data>
  <data name="AddInManager2.OptionPanel.Add" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="AddInManager2.OptionPanel.AutoCheckForUpdates" xml:space="preserve">
    <value>更新を自動的にチェックする</value>
  </data>
  <data name="AddInManager2.OptionPanel.MoveDown" xml:space="preserve">
    <value>下に移動</value>
  </data>
  <data name="AddInManager2.OptionPanel.MoveUp" xml:space="preserve">
    <value>上に移動</value>
  </data>
  <data name="AddInManager2.OptionPanel.Name" xml:space="preserve">
    <value>名前：</value>
  </data>
  <data name="AddInManager2.OptionPanel.Remove" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="AddInManager2.OptionPanel.Source" xml:space="preserve">
    <value>ソース：</value>
  </data>
  <data name="AddInManager2.OptionPanel.Tree.AddIns" xml:space="preserve">
    <value>アドイン</value>
  </data>
  <data name="AddInManager2.OptionPanel.Tree.General" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="AddInManager2.OptionPanel.Tree.Repositories" xml:space="preserve">
    <value>リポジトリ</value>
  </data>
  <data name="AddInManager2.RemoveDependentWarning" xml:space="preserve">
    <value>以下のインストール済みアドインが {0} に依存しています：

{1}

アドインを削除すると、これらのアドインも動作しなくなります！本当に続行しますか？</value>
  </data>
  <data name="AddInManager2.SDAddInFileFilter" xml:space="preserve">
    <value>SharpDevelop アドイン|*.sdaddin;*.addin|すべてのファイル|*.*</value>
  </data>
  <data name="AddInManager2.UpdateNotifier.BubbleText" xml:space="preserve">
    <value>ここをクリックしてアップデートを確認します。</value>
  </data>
  <data name="AddInManager2.UpdateNotifier.BubbleTitle" xml:space="preserve">
    <value>SharpDevelopのアップデートが利用可能です</value>
  </data>
  <data name="AddInManager2.Views.Available" xml:space="preserve">
    <value>利用可能</value>
  </data>
  <data name="AddInManager2.Views.Installed" xml:space="preserve">
    <value>インストール済み</value>
  </data>
  <data name="AddInManager2.Views.Updates" xml:space="preserve">
    <value>アップデート</value>
  </data>
  <data name="AddIns.AvalonEdit.InconsistentNewlines.Description" xml:space="preserve">
    <value>不明なファイル形式</value>
  </data>
  <data name="AddIns.AvalonEdit.InconsistentNewlines.Header" xml:space="preserve">
    <value>新しい行の不整合</value>
  </data>
  <data name="AddIns.AvalonEdit.InconsistentNewlines.Normalize" xml:space="preserve">
    <value>正規化</value>
  </data>
  <data name="AddIns.AvalonEdit.SearchPanel.ErrorText" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="AddIns.AvalonEdit.SearchPanel.FindNextText" xml:space="preserve">
    <value>次を探す</value>
  </data>
  <data name="AddIns.AvalonEdit.SearchPanel.FindPreviousText" xml:space="preserve">
    <value>前を探す</value>
  </data>
  <data name="AddIns.AvalonEdit.SearchPanel.UseRegexText" xml:space="preserve">
    <value>正規表現を使用</value>
  </data>
  <data name="AddIns.ClassDiagram.ShowClassDiagram" xml:space="preserve">
    <value>クラスダイアグラムを表示</value>
  </data>
  <data name="AddIns.Git.TortoiseGitRequired" xml:space="preserve">
    <value>この操作にはTortoiseGitのインストールが必要です</value>
  </data>
  <data name="AddIns.HelpViewer.ContentsPadTitle" xml:space="preserve">
    <value>コンテンツ</value>
  </data>
  <data name="AddIns.HelpViewer.DisplayContentsCommand" xml:space="preserve">
    <value>コンテンツ表示</value>
  </data>
  <data name="AddIns.HelpViewer.DisplaySearchCommand" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="AddIns.HelpViewer.HelpLibraryRootTitle" xml:space="preserve">
    <value>ヘルプライブラリ</value>
  </data>
  <data name="AddIns.HelpViewer.HelpModeLabel" xml:space="preserve">
    <value>ヘルプモード</value>
  </data>
  <data name="AddIns.HelpViewer.HLMNoActiveCatalogError" xml:space="preserve">
    <value>ヘルプライブラリマネージャを起動できません。正しくインストール、設定されているか確認してください。(参照：ツール &gt; オプション &gt; ツール &gt; Microsoft Help Viewer)</value>
  </data>
  <data name="AddIns.HelpViewer.HLMNotAvailableDownloadWinSDK" xml:space="preserve">
    <value>ヘルプライブラリマネージャが見つかりません。SharpDevelopのヘルプ機能を利用するには、MicrosoftのWindows SDK 7.1をダウンロードしてインストールしてください。</value>
  </data>
  <data name="AddIns.HelpViewer.HLMNotFound" xml:space="preserve">
    <value>ヘルプライブラリマネージャが見つかりません。正しくインストールされているか確認してください。</value>
  </data>
  <data name="AddIns.HelpViewer.InstalledHelpCatalogsLabel" xml:space="preserve">
    <value>インストールされたヘルプカタログ</value>
  </data>
  <data name="AddIns.HelpViewer.LaunchHelpLibraryManagerCommand" xml:space="preserve">
    <value>ヘルプライブラリマネージャを起動</value>
  </data>
  <data name="AddIns.HelpViewer.MicrosoftHelpViewerTitle" xml:space="preserve">
    <value>Microsoftヘルプビューアー</value>
  </data>
  <data name="AddIns.HelpViewer.OfflineFeatureRequestMsg" xml:space="preserve">
    <value>オンラインヘルプモードにて、オフラインの機能を要求しています。この機能を利用するにはモードを変更してください。</value>
  </data>
  <data name="AddIns.HelpViewer.SearchDoSearchButton" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="AddIns.HelpViewer.SearchLookForLabel" xml:space="preserve">
    <value>次を探す：</value>
  </data>
  <data name="AddIns.HelpViewer.SearchPadTitle" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="AddIns.HelpViewer.ShowErrorHelpTitle" xml:space="preserve">
    <value>ヘルプを表示</value>
  </data>
  <data name="AddIns.HelpViewer.UseExternalHelp" xml:space="preserve">
    <value>外部ヘルプを利用</value>
  </data>
  <data name="AddIns.HelpViewer.UseOfflineHelpLabel" xml:space="preserve">
    <value>ローカル環境のヘルプを使用</value>
  </data>
  <data name="AddIns.HelpViewer.UseOnlineHelpLabel" xml:space="preserve">
    <value>オンラインのヘルプを使用</value>
  </data>
  <data name="AddIns.HexEditor.DefaultBytesPerLine" xml:space="preserve">
    <value>行当たりのバイト数</value>
  </data>
  <data name="AddIns.HexEditor.Display" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="AddIns.HexEditor.Display.Elements.Data" xml:space="preserve">
    <value>データ</value>
  </data>
  <data name="AddIns.HexEditor.Display.Elements.Offset" xml:space="preserve">
    <value>オフセット</value>
  </data>
  <data name="AddIns.HexEditor.NumeralSystem" xml:space="preserve">
    <value>番号</value>
  </data>
  <data name="AddIns.HexEditor.NumeralSystem.Decimal" xml:space="preserve">
    <value>10進数</value>
  </data>
  <data name="AddIns.HexEditor.NumeralSystem.Hexadecimal" xml:space="preserve">
    <value>16進数</value>
  </data>
  <data name="AddIns.HexEditor.NumeralSystem.Octal" xml:space="preserve">
    <value>8進数</value>
  </data>
  <data name="AddIns.HexEditor.SizeToFit" xml:space="preserve">
    <value>正しい幅にフィット</value>
  </data>
  <data name="AddIns.HtmlHelp2.Back" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="AddIns.HtmlHelp2.Contents" xml:space="preserve">
    <value>コンテンツ</value>
  </data>
  <data name="AddIns.HtmlHelp2.EnterURL" xml:space="preserve">
    <value>URL入力</value>
  </data>
  <data name="AddIns.HtmlHelp2.Forward" xml:space="preserve">
    <value>進む</value>
  </data>
  <data name="AddIns.HtmlHelp2.Homepage" xml:space="preserve">
    <value>ホームページ</value>
  </data>
  <data name="AddIns.HtmlHelp2.Location" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="AddIns.HtmlHelp2.NewWindow" xml:space="preserve">
    <value>新しいウィンドウ</value>
  </data>
  <data name="AddIns.HtmlHelp2.Search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="AddIns.HtmlHelp2.Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="AddIns.HtmlHelp2.Title" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="AddIns.Profiler.Commands.FindCallsOfSelected.TabTitle" xml:space="preserve">
    <value>結果</value>
  </data>
  <data name="AddIns.Profiler.Commands.SetAsRoot.TabTitle" xml:space="preserve">
    <value>マージされたノード</value>
  </data>
  <data name="AddIns.Profiler.Commands.ShowFunctions.TabTitle" xml:space="preserve">
    <value>{0} の全機能</value>
  </data>
  <data name="AddIns.Profiler.DatabaseTooNewError" xml:space="preserve">
    <value>選択されたSharpDevelopのプロファイリングセッションは、新バージョンのSharpDevelopによって作られたため開くことができません</value>
  </data>
  <data name="AddIns.Profiler.FileExtensionDescription" xml:space="preserve">
    <value>SharpDevelopのプロファイリングセッション</value>
  </data>
  <data name="AddIns.Profiler.Messages.FileNotFound" xml:space="preserve">
    <value>実行ファイルが見つからないため、このプロジェクトは開始できません。正しくビルドするためにプロジェクトと依存する全てを設定してください
</value>
  </data>
  <data name="AddIns.Profiler.Messages.NoStartableProjectFound" xml:space="preserve">
    <value>開始可能なプロジェクトが見つかりません...</value>
  </data>
  <data name="AddIns.Profiler.Messages.NoStartableProjectWantToProfileStartupProject" xml:space="preserve">
    <value>このプロジェクトは開始できません。代わりにスタートアッププロジェクトをプロファイルしますか？</value>
  </data>
  <data name="AddIns.Profiler.Messages.PreparingForAnalysis" xml:space="preserve">
    <value>分析の準備中...</value>
  </data>
  <data name="AddIns.Profiler.Messages.RegisterFailed" xml:space="preserve">
    <value>COMレジストリにプロファイラ―を登録できません。プロファイリングを開始できません！</value>
  </data>
  <data name="AddIns.Profiler.Messages.UnregisterFailed" xml:space="preserve">
    <value>COMレジストリからプロファイラ―を削除できません！</value>
  </data>
  <data name="AddIns.Profiler.MessageViewCategory" xml:space="preserve">
    <value>プロファイル</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.CombineRecursiveCalls" xml:space="preserve">
    <value>再帰呼び出し結合</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.DoNotProfileNetInternals" xml:space="preserve">
    <value>.NET内部呼び出しをプロファイルしない</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.EnableDC" xml:space="preserve">
    <value>セッションの最後のデータのみ収集</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.EnableDCAtStartup" xml:space="preserve">
    <value>セッション開始直後にデータを収集</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.Header" xml:space="preserve">
    <value>データコレクション</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.SizeOfStorageDescription" xml:space="preserve">
    <value>一時ストレージファイルのサイズ</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.TrackEvents" xml:space="preserve">
    <value>イベントをトレース</value>
  </data>
  <data name="AddIns.Profiler.Options.Title" xml:space="preserve">
    <value>プロファイリング</value>
  </data>
  <data name="AddIns.Profiler.ProfileCurrentProject" xml:space="preserve">
    <value>現在のプロジェクトをプロファイル</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutable" xml:space="preserve">
    <value>実行プロファイルを選択</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutable.ErrorMessage" xml:space="preserve">
    <value>不当なデータ。再実行してください！</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.CmdLineArgsText" xml:space="preserve">
    <value>コマンドライン引数：</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.DescriptionText" xml:space="preserve">
    <value>プロファイルしたい実行パスを選択します
作業フォルダとコマンドライン引数をオプション定義できます
</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.ExePathText" xml:space="preserve">
    <value>実行パス：</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.StartText" xml:space="preserve">
    <value>プロファイリング開始</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.Title" xml:space="preserve">
    <value>実行可能プロファイル</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.WorkingDirText" xml:space="preserve">
    <value>作業フォルダ：</value>
  </data>
  <data name="AddIns.Profiler.ProfilerControlWindow.CollectData" xml:space="preserve">
    <value>データ収集</value>
  </data>
  <data name="AddIns.Profiler.ProfilerControlWindow.Shutdown" xml:space="preserve">
    <value>シャットダウン</value>
  </data>
  <data name="AddIns.Profiler.ProfilerControlWindow.Title" xml:space="preserve">
    <value>コントロールウィンドウプロファイラ―</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.CallCountColumnText" xml:space="preserve">
    <value>呼び出しカウント</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.CallsText" xml:space="preserve">
    <value>呼び出し数：</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ClearQueryHistoryText" xml:space="preserve">
    <value>クエリ履歴をクリア</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.CopySelectedData" xml:space="preserve">
    <value>選択されたデータをコピー</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.CopyStacktrace" xml:space="preserve">
    <value>スタックトレースをコピー</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.FindCallsOfSelected" xml:space="preserve">
    <value>選択ファンクションの呼び出しを検索</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.GoToDefinition" xml:space="preserve">
    <value>定義に移動</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.SetAsRoot" xml:space="preserve">
    <value>ルートをセット/マージ</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.ShowFunctions" xml:space="preserve">
    <value>ファンクションを表示</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.CpuCyclesText" xml:space="preserve">
    <value>CPUサイクル：</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ExecuteQueryText" xml:space="preserve">
    <value>実行クエリ</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ExpandHotPathSubtreeText" xml:space="preserve">
    <value>選択パスを拡張</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.NameColumnText" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.OverviewTabText" xml:space="preserve">
    <value>概要</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.QueryHistoryText" xml:space="preserve">
    <value>クエリ履歴</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.SearchLabelText" xml:space="preserve">
    <value>検索：</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ShowQueryBarText" xml:space="preserve">
    <value>クエリーバーを表示</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimePercentageOfParentColumnText" xml:space="preserve">
    <value>% パーセント</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeSpentColumnText" xml:space="preserve">
    <value>作業時間</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeSpentPerCallColumnText" xml:space="preserve">
    <value>作業時間 / 呼び出し</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeSpentSelfColumnText" xml:space="preserve">
    <value>作業時間（自己）</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeSpentSelfPerCallColumnText" xml:space="preserve">
    <value>作業時間（自己） / 呼び出し</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeText" xml:space="preserve">
    <value>時間：</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.Title" xml:space="preserve">
    <value>セッション分析をプロファイリング</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.Top20TabText" xml:space="preserve">
    <value>トップ20</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.WaitBarText" xml:space="preserve">
    <value>表示をリフレッシュ。お待ちください...</value>
  </data>
  <data name="AddIns.Profiler.UnitTests.RunWithProfiler" xml:space="preserve">
    <value>プロファイラ―で実行</value>
  </data>
  <data name="AddIns.SearchReplace.SearchProgressTitle" xml:space="preserve">
    <value>検索...</value>
  </data>
  <data name="AddIns.SharpRefactoring.CreateProperties.AddSetterLabel" xml:space="preserve">
    <value>セッターを追加</value>
  </data>
  <data name="AddIns.SharpRefactoring.CreateProperties.Description" xml:space="preserve">
    <value>プロパティを作成する対象フィールドを選択：</value>
  </data>
  <data name="AddIns.SharpRefactoring.CreateProperties.Description.ImplementINotifyPropertyChanged" xml:space="preserve">
    <value>INotifyPropertyChangedを実装</value>
  </data>
  <data name="AddIns.SharpRefactoring.CreateProperties.Title" xml:space="preserve">
    <value>プロパティを生成</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod" xml:space="preserve">
    <value>メソッドの抽出</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.ContainsBreakError" xml:space="preserve">
    <value>選択されたコードはbreakステートメントを含んでいますが、ループで囲まれていません。選択範囲を変更してください。</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.ContainsContinueError" xml:space="preserve">
    <value>選択されたコードはcontinueステートメントを含んでいますが、ループで囲まれていません。選択範囲を変更してください。</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.ContainsGotoError" xml:space="preserve">
    <value>選択されたコードはgotoステートメントを含んでいますが、ラベルが存在しません。選択範囲を変更してください。</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.EnterName" xml:space="preserve">
    <value>新しいメソッドの名前を入力</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.InvalidSelection" xml:space="preserve">
    <value>不正な選択！正しい範囲を選択してください</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.ParseErrors" xml:space="preserve">
    <value>パース時にエラーが発生しました。新しいメソッドの抽出ができません</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethodNotSupported" xml:space="preserve">
    <value>{0}の中のメソッドの抽出は現在サポートされていません</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor" xml:space="preserve">
    <value>コンストラクタを挿入</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor.AddCheckForNullLabel" xml:space="preserve">
    <value>NULLチェックを追加</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor.AddRangeCheckLabel" xml:space="preserve">
    <value>範囲チェックを追加</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor.Description" xml:space="preserve">
    <value>コンストラクタを生成したいフィールドを選択</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor.VariableLabel" xml:space="preserve">
    <value>変数</value>
  </data>
  <data name="AddIns.SharpRefactoring.IntroduceMethod" xml:space="preserve">
    <value>{1} に メソッド{0} を挿入</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods" xml:space="preserve">
    <value>Equals()とGetHashCode()をオーバーライド</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods.AddInterface" xml:space="preserve">
    <value>インターフェース {0} を追加</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods.AddOperatorOverloads" xml:space="preserve">
    <value>演算子のオーバーロードを追加</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods.AddOtherMethod" xml:space="preserve">
    <value>${otherMethod} のオーバーライドを追加</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods.SurroundWithRegion" xml:space="preserve">
    <value>#regionで囲む</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideToStringMethod" xml:space="preserve">
    <value>ToString()をオーバーライド</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideToStringMethod.Description" xml:space="preserve">
    <value>ToString()で使用したいフィールドの選択</value>
  </data>
  <data name="AddIns.SharpRefactoring.ResolveAttribute" xml:space="preserve">
    <value>属性の解決：{0}</value>
  </data>
  <data name="AddIns.SharpRefactoring.ResolveExtensionMethod" xml:space="preserve">
    <value>拡張メソッドの解決：{0}</value>
  </data>
  <data name="AddIns.SourceAnalysis.CheckProjectWithStyleCop" xml:space="preserve">
    <value>プロジェクトをStyleCopでチェック</value>
  </data>
  <data name="AddIns.SourceAnalysis.CheckWithStyleCop" xml:space="preserve">
    <value>StyleCopでチェック</value>
  </data>
  <data name="AddIns.SourceAnalysis.Title" xml:space="preserve">
    <value>ソース分析</value>
  </data>
  <data name="AddIns.Subversion.AddToIgnoreList" xml:space="preserve">
    <value>無視リストの追加</value>
  </data>
  <data name="AddIns.Subversion.Blame" xml:space="preserve">
    <value>Blame</value>
  </data>
  <data name="AddIns.Subversion.BranchOrTag" xml:space="preserve">
    <value>ブランチ／タグ</value>
  </data>
  <data name="AddIns.Subversion.CannotCopyError" xml:space="preserve">
    <value>Subversionのステータスが'{0}'のため、ファイル/ディレクトリをコピーできません。</value>
  </data>
  <data name="AddIns.Subversion.CannotMoveError" xml:space="preserve">
    <value>Subversionのステータスが'{0}'のため、ファイル/ディレクトリを移動できません。</value>
  </data>
  <data name="AddIns.Subversion.CannotRemoveError" xml:space="preserve">
    <value>Subversionのステータスが'{0}'のため、ファイル/ディレクトリを削除できません。</value>
  </data>
  <data name="AddIns.Subversion.CheckForModifications" xml:space="preserve">
    <value>変更内容を確認</value>
  </data>
  <data name="AddIns.Subversion.Checkout" xml:space="preserve">
    <value>チェックアウト</value>
  </data>
  <data name="AddIns.Subversion.CleanUp" xml:space="preserve">
    <value>クリーンアップ</value>
  </data>
  <data name="AddIns.Subversion.Commit" xml:space="preserve">
    <value>コミット</value>
  </data>
  <data name="AddIns.Subversion.CreatePatch" xml:space="preserve">
    <value>パッチの作成</value>
  </data>
  <data name="AddIns.Subversion.DeleteDirectory" xml:space="preserve">
    <value>ディレクトリを削除</value>
  </data>
  <data name="AddIns.Subversion.Diff" xml:space="preserve">
    <value>Diff</value>
  </data>
  <data name="AddIns.Subversion.EditConflicts" xml:space="preserve">
    <value>コンフリクトの編集</value>
  </data>
  <data name="AddIns.Subversion.ErrorDelete" xml:space="preserve">
    <value>${File} 削除中エラー</value>
  </data>
  <data name="AddIns.Subversion.Export" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="AddIns.Subversion.ForceDelete" xml:space="preserve">
    <value>強制削除</value>
  </data>
  <data name="AddIns.Subversion.History" xml:space="preserve">
    <value>ヒストリー</value>
  </data>
  <data name="AddIns.Subversion.ItemRemovedFromIgnoreList" xml:space="preserve">
    <value>{0}' は無視リストから削除されました</value>
  </data>
  <data name="AddIns.Subversion.Lock" xml:space="preserve">
    <value>ロックする</value>
  </data>
  <data name="AddIns.Subversion.MarkConflictsAsResolved" xml:space="preserve">
    <value>衝突を解決済みでマーク</value>
  </data>
  <data name="AddIns.Subversion.Merge" xml:space="preserve">
    <value>マージ</value>
  </data>
  <data name="AddIns.Subversion.Options.AutoAdd" xml:space="preserve">
    <value>自動的に新しいファイルを追加(&amp;A)</value>
  </data>
  <data name="AddIns.Subversion.Options.AutoDelete" xml:space="preserve">
    <value>自動的に削除ファイルを除去(&amp;D)</value>
  </data>
  <data name="AddIns.Subversion.Options.ReloadProjectAfterChanges" xml:space="preserve">
    <value>プロジェクトファイルの変更後にプロジェクトをリロード(&amp;R)</value>
  </data>
  <data name="AddIns.Subversion.Options.RenameInsideSubversion" xml:space="preserve">
    <value>Subversion内でファイルをリネーム（履歴を保持）(&amp;R)</value>
  </data>
  <data name="AddIns.Subversion.Options.Title" xml:space="preserve">
    <value>Subversionオプション</value>
  </data>
  <data name="AddIns.Subversion.Options.UseHistoryDisplayBinding" xml:space="preserve">
    <value>バージョンコントロールされたファイルの履歴タブの表示(&amp;H)</value>
  </data>
  <data name="AddIns.Subversion.Relocate" xml:space="preserve">
    <value>再配置</value>
  </data>
  <data name="AddIns.Subversion.RemoveFromIgnoreList" xml:space="preserve">
    <value>無視リストから削除</value>
  </data>
  <data name="AddIns.Subversion.RemoveMovedFile" xml:space="preserve">
    <value>ファイルはこの場所に移動されました。本当に削除しますか？</value>
  </data>
  <data name="AddIns.Subversion.RepositoryBrowser" xml:space="preserve">
    <value>リポジトリブラウザ</value>
  </data>
  <data name="AddIns.Subversion.Revert" xml:space="preserve">
    <value>元に戻す</value>
  </data>
  <data name="AddIns.Subversion.RevertLocalModifications" xml:space="preserve">
    <value>ファイルはローカルで更新されています。本当に削除しますか？</value>
  </data>
  <data name="AddIns.Subversion.RevisionGraph" xml:space="preserve">
    <value>リビジョングラフ</value>
  </data>
  <data name="AddIns.Subversion.SaveFiles" xml:space="preserve">
    <value>ファイル保存</value>
  </data>
  <data name="AddIns.Subversion.ShowLog" xml:space="preserve">
    <value>ログを表示</value>
  </data>
  <data name="AddIns.Subversion.SVNRequiresSavingFiles" xml:space="preserve">
    <value>バージョンコントロール操作は変更があり未保存のファイルに影響を与えます。
この操作を行う前にこれらのファイルを保存する必要があります。</value>
  </data>
  <data name="AddIns.Subversion.Switch" xml:space="preserve">
    <value>スイッチ</value>
  </data>
  <data name="AddIns.Subversion.TortoiseSVNRequired" xml:space="preserve">
    <value>この操作を行うにはTortoiseSVNがインストールされている必要があります</value>
  </data>
  <data name="AddIns.Subversion.Update" xml:space="preserve">
    <value>アップデート</value>
  </data>
  <data name="AddIns.Subversion.UpdateToRevision" xml:space="preserve">
    <value>Update to revision</value>
  </data>
  <data name="AddIns.UsageDataCollector.AcceptConfirmation" xml:space="preserve">
    <value>参加ありがとうございます！後でSharpDevelopのオプションから外すことも可能です</value>
  </data>
  <data name="AddIns.UsageDataCollector.AcceptRadioButton" xml:space="preserve">
    <value>参加したい - 使用データを収集しアップロードする</value>
  </data>
  <data name="AddIns.UsageDataCollector.DeclineConfirmation" xml:space="preserve">
    <value>後からSharpDevelopのオプションで参加することも可能です</value>
  </data>
  <data name="AddIns.UsageDataCollector.DeclineRadioButton" xml:space="preserve">
    <value>参加しません</value>
  </data>
  <data name="AddIns.UsageDataCollector.Introduction" xml:space="preserve">
    <value>私たちは皆様の助けを必要としています。SharpDevelopの機能を改善するため、どの機能がもっとも使われているかを知りたいと考えています。
SharpDevelopはこの情報を自動的に収集しアップロードします。</value>
  </data>
  <data name="AddIns.UsageDataCollector.PrivacyStatement" xml:space="preserve">
    <value>プライバシーについて</value>
  </data>
  <data name="AddIns.UsageDataCollector.ShowCollectedData" xml:space="preserve">
    <value>収集したデータを表示</value>
  </data>
  <data name="AddIns.UsageDataCollector.Title" xml:space="preserve">
    <value>データコレクターの使用</value>
  </data>
  <data name="AddIns.VBNetBinding.CodeCompletion.QuestionmarkEqualsItem.Description" xml:space="preserve">
    <value>初期化子をベースとした型をSharpDevelopに解決させる。</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.EditGridColumnsAndRows" xml:space="preserve">
    <value>行列グリッドの編集</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle" xml:space="preserve">
    <value>スタイルとしてプロパティを抽出</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.ErrorNoSelection" xml:space="preserve">
    <value>妥当な要素が選択されていません！</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.PropertyColumn" xml:space="preserve">
    <value>プロパティ/イベント名</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.ReplaceQuestion" xml:space="preserve">
    <value>選択したコントロールは既にスタイルが割り当てられています。新しく作成したスタイルにて置き換えますか？</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.StyleName" xml:space="preserve">
    <value>スタイル名：</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.ValueColumn" xml:space="preserve">
    <value>プロパティ値</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.GroupInto" xml:space="preserve">
    <value>グループの中へ</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.RemoveMargin" xml:space="preserve">
    <value>マージンを削除</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.RemoveUnnecessaryAttributes" xml:space="preserve">
    <value>不必要な属性を削除</value>
  </data>
  <data name="AddIns.XamlBinding.NewEventHandlerItem" xml:space="preserve">
    <value>&lt;新しいイベントハンドラ&gt;</value>
  </data>
  <data name="AddIns.XamlBinding.Options.CodeCompletionGroupLabel" xml:space="preserve">
    <value>コード補完</value>
  </data>
  <data name="AddIns.XamlBinding.Options.EventColor" xml:space="preserve">
    <value>イベントカラー：</value>
  </data>
  <data name="AddIns.XamlBinding.Options.EventHandlerNamePattern" xml:space="preserve">
    <value>イベントハンドラの名前パターン</value>
  </data>
  <data name="AddIns.XamlBinding.Options.HighlightingDescription" xml:space="preserve">
    <value>XAMLハイライトで使用する色を選択</value>
  </data>
  <data name="AddIns.XamlBinding.Options.HighlightingGroupLabel" xml:space="preserve">
    <value>ハイライト</value>
  </data>
  <data name="AddIns.XamlBinding.Options.IgnoredElementColor" xml:space="preserve">
    <value>要素の色を無視</value>
  </data>
  <data name="AddIns.XamlBinding.Options.NamespaceDeclarationColor" xml:space="preserve">
    <value>XML名前空間宣言カラー：</value>
  </data>
  <data name="AddIns.XamlBinding.Options.PropertyColor" xml:space="preserve">
    <value>プロパティカラー：</value>
  </data>
  <data name="AddIns.XamlBinding.Options.SwitchToCodeViewAfterInsertion" xml:space="preserve">
    <value>新しいイベントハンドの追加後にコードに切り替え</value>
  </data>
  <data name="AddIns.XamlBinding.Options.Title" xml:space="preserve">
    <value>XAML</value>
  </data>
  <data name="AddIns.XamlBinding.Options.UseExtensionCompletion" xml:space="preserve">
    <value>マークアップ拡張補完を使用</value>
  </data>
  <data name="AddIns.XamlBinding.Options.UseHighlighting" xml:space="preserve">
    <value>拡張ハイライトを使用</value>
  </data>
  <data name="AvalonEdit.FileEncoding.EncodingCausesDataLoss" xml:space="preserve">
    <value>現在の${encoding}エンコーディングでは保存時にデータが失われてしまいます</value>
  </data>
  <data name="AvalonEdit.FileEncoding.EncodingCausesDataLoss.Continue" xml:space="preserve">
    <value>続ける</value>
  </data>
  <data name="AvalonEdit.FileEncoding.EncodingCausesDataLoss.UseUTF8" xml:space="preserve">
    <value>UTF-8で保存</value>
  </data>
  <data name="BackendBindings.ExecutionManager.CantExecuteDLLError" xml:space="preserve">
    <value>プロジェクトは実行可能コマンドではなくdllとして定義されます。プロジェクトオプションで実行可能コマンドとして指定することができます。</value>
  </data>
  <data name="BackendBindings.ExecutionManager.NoSingleFileCompilation" xml:space="preserve">
    <value>単一ファイルコンパイルはサポートされていません。プロジェクト作成してください</value>
  </data>
  <data name="CompilerResultView.DescriptionText" xml:space="preserve">
    <value>説明</value>
  </data>
  <data name="CompilerResultView.FileText" xml:space="preserve">
    <value>ファイル名</value>
  </data>
  <data name="ComponentInspector.AboutDialog.Title" xml:space="preserve">
    <value>アバウト</value>
  </data>
  <data name="ComponentInspector.AboutDialog.VersionLabel" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CastMenuItem" xml:space="preserve">
    <value>キャスト</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CopyObjectMenuItem" xml:space="preserve">
    <value>オブジェクトのコピー(&amp;O)</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CopyTextMenuItem" xml:space="preserve">
    <value>テキストのコピー(&amp;C)</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CopyValueTextMenuItem" xml:space="preserve">
    <value>変数のテキストのコピー(&amp;V)</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CutObjectMenuItem" xml:space="preserve">
    <value>オブジェクトの切り取り(&amp;T)</value>
  </data>
  <data name="ComponentInspector.ActionMenu.EventLoggingMenuItem" xml:space="preserve">
    <value>イベントログ(&amp;E)</value>
  </data>
  <data name="ComponentInspector.ActionMenu.OnDesignSurfaceMenuItem" xml:space="preserve">
    <value>デザイン サーフェイス</value>
  </data>
  <data name="ComponentInspector.ActionMenu.PasteObjectMenuItem" xml:space="preserve">
    <value>オブジェクトの貼り付け(&amp;P)</value>
  </data>
  <data name="ComponentInspector.ActionMenu.RefreshRunningComObjectsMenuItem" xml:space="preserve">
    <value>実行中COMオブジェクトの更新</value>
  </data>
  <data name="ComponentInspector.ActionMenu.RegisterTypeLibMenuItem" xml:space="preserve">
    <value>TypeLibの更新</value>
  </data>
  <data name="ComponentInspector.ActionMenu.RemoveFromFavouritesMenuItem" xml:space="preserve">
    <value>お気に入りから削除</value>
  </data>
  <data name="ComponentInspector.ActionMenu.UnregisterTypeLibMenuItem" xml:space="preserve">
    <value>TypeLibから削除</value>
  </data>
  <data name="ComponentInspector.AssemblyTreeNode.Text" xml:space="preserve">
    <value>開かれたアセンブリ</value>
  </data>
  <data name="ComponentInspector.AttachDialog.AttachFailedMessage" xml:space="preserve">
    <value>プロセス{0}へのアタッチエラー</value>
  </data>
  <data name="ComponentInspector.AttachDialog.ProcessLabel" xml:space="preserve">
    <value>プロセス</value>
  </data>
  <data name="ComponentInspector.AttachDialog.Title" xml:space="preserve">
    <value>アタッチ</value>
  </data>
  <data name="ComponentInspector.CastDialog.CannotFindType" xml:space="preserve">
    <value>型が見つかりません</value>
  </data>
  <data name="ComponentInspector.CastDialog.CannotFindTypeInAssembliesMessage" xml:space="preserve">
    <value>現在開かれているアセンブリには、型 {0} が見つかりません</value>
  </data>
  <data name="ComponentInspector.CastDialog.CastForTitle" xml:space="preserve">
    <value>キャスト for</value>
  </data>
  <data name="ComponentInspector.CastDialog.CastTitle" xml:space="preserve">
    <value>キャスト</value>
  </data>
  <data name="ComponentInspector.CastDialog.CastToLabel" xml:space="preserve">
    <value>キャスト to</value>
  </data>
  <data name="ComponentInspector.CastDialog.DetermineTypeOfCastFailedMessage" xml:space="preserve">
    <value>型キャストの確認エラー</value>
  </data>
  <data name="ComponentInspector.CastDialog.RememberCastCheckBox" xml:space="preserve">
    <value>セッションを通じたキャストの記憶</value>
  </data>
  <data name="ComponentInspector.CastDialog.TypeIncompatibleMessage" xml:space="preserve">
    <value>互換性のないオブジェクト型のキャスト</value>
  </data>
  <data name="ComponentInspector.ComCategoryRootTreeNode.Text" xml:space="preserve">
    <value>コンポーネントカテゴリー</value>
  </data>
  <data name="ComponentInspector.ComClassRootTreeNode.Text" xml:space="preserve">
    <value>クラス</value>
  </data>
  <data name="ComponentInspector.ComInterfaceRootTreeNode.Text" xml:space="preserve">
    <value>インターフェイス</value>
  </data>
  <data name="ComponentInspector.ComRunningObjectsTreeNode.Text" xml:space="preserve">
    <value>COM実行オブジェクト</value>
  </data>
  <data name="ComponentInspector.ComTreeNode.Text" xml:space="preserve">
    <value>お気に入り/最近アクセスしたタイプ ライブラリ</value>
  </data>
  <data name="ComponentInspector.ComTypeLibraryRootTreeNode.Text" xml:space="preserve">
    <value>タイプ ライブラリ</value>
  </data>
  <data name="ComponentInspector.ConstructorDialog.Information" xml:space="preserve">
    <value>引数ありコンストラクタを選択した場合、OKを押した後、引数を入力し、作りたい場所に選んだコンストラクタをドラッグしてください。</value>
  </data>
  <data name="ComponentInspector.ConstructorDialog.Title" xml:space="preserve">
    <value>コンストラクタを選択</value>
  </data>
  <data name="ComponentInspector.ControlsTab" xml:space="preserve">
    <value>コントロール</value>
  </data>
  <data name="ComponentInspector.CreateObjectMenuItem" xml:space="preserve">
    <value>オブジェクトを作成(&amp;C)</value>
  </data>
  <data name="ComponentInspector.CustDirectoriesPanel.ApplicationWorkingFolder" xml:space="preserve">
    <value>アプリケーション作業ディレクトリ</value>
  </data>
  <data name="ComponentInspector.CustDirectoriesPanel.ConvertedAssembliesFolder" xml:space="preserve">
    <value>ActiveXから変換されたアセンブリ</value>
  </data>
  <data name="ComponentInspector.CustDirectoriesPanel.Title" xml:space="preserve">
    <value>ディレクトリ</value>
  </data>
  <data name="ComponentInspector.CustomActiveXPanel.AutomaticallyGetPropertiesCheckBox" xml:space="preserve">
    <value>自動的なCOMプロパティの取得</value>
  </data>
  <data name="ComponentInspector.CustomActiveXPanel.GetRunningComObjectsCheckBox" xml:space="preserve">
    <value>起動時にCOM実行オブジェクトを取得</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.OtherLabel" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.ShowBaseClassNamesCheckBox" xml:space="preserve">
    <value>基本クラスの名前を表示</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.ShowLabel" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.ShowObjectAsBaseCheckBox" xml:space="preserve">
    <value>基本クラス部のオブジェクトメンバーを表示</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.ShowPublicMembersCheckBox" xml:space="preserve">
    <value>Publicメンバのみ</value>
  </data>
  <data name="ComponentInspector.ErrorDialog.LessInformationButton" xml:space="preserve">
    <value>詳細を非表示</value>
  </data>
  <data name="ComponentInspector.ErrorDialog.MoreInformationButton" xml:space="preserve">
    <value>詳細を表示</value>
  </data>
  <data name="ComponentInspector.ErrorDialog.ReportAsBugButton" xml:space="preserve">
    <value>バグとして報告する</value>
  </data>
  <data name="ComponentInspector.EventLogList.ClearAllMenuItem" xml:space="preserve">
    <value>全てクリア(&amp;A)</value>
  </data>
  <data name="ComponentInspector.EventLogList.ClearMenuItem" xml:space="preserve">
    <value>クリア(&amp;C)</value>
  </data>
  <data name="ComponentInspector.EventLogList.EventColumnHeader" xml:space="preserve">
    <value>イベント</value>
  </data>
  <data name="ComponentInspector.EventLogList.EventsBeingLoggedTab" xml:space="preserve">
    <value>記録されているイベント</value>
  </data>
  <data name="ComponentInspector.EventLogList.EventsTab" xml:space="preserve">
    <value>イベントログ(&amp;E)</value>
  </data>
  <data name="ComponentInspector.EventLogList.IncrementColumnHeader" xml:space="preserve">
    <value>Inc</value>
  </data>
  <data name="ComponentInspector.EventLogList.NoEventsBeingLoggedMessage" xml:space="preserve">
    <value>イベントは何もロギングされていません
ロギングを開始するには、オブジェクトパネルでオブジェクトかイベントを選択して、右クリックかアクションメニューからイベントログを有効にしてください</value>
  </data>
  <data name="ComponentInspector.EventLogList.ParametersColumnHeader" xml:space="preserve">
    <value>引数</value>
  </data>
  <data name="ComponentInspector.EventLogList.StopAllLoggingMenuItem" xml:space="preserve">
    <value>全てのロギングを停止(&amp;A)</value>
  </data>
  <data name="ComponentInspector.EventLogList.StopLoggingMenuItem" xml:space="preserve">
    <value>ロギングを停止(&amp;S)</value>
  </data>
  <data name="ComponentInspector.EventLogList.TimeColumnHeader" xml:space="preserve">
    <value>時刻</value>
  </data>
  <data name="ComponentInspector.FindDialog.AllLevelsLabel" xml:space="preserve">
    <value>全レベル</value>
  </data>
  <data name="ComponentInspector.FindDialog.AssembliesRadioButton" xml:space="preserve">
    <value>アセンブリ/型</value>
  </data>
  <data name="ComponentInspector.FindDialog.ContainsRadioButton" xml:space="preserve">
    <value>次を含む</value>
  </data>
  <data name="ComponentInspector.FindDialog.FindButton" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="ComponentInspector.FindDialog.FindIn" xml:space="preserve">
    <value>次から検索</value>
  </data>
  <data name="ComponentInspector.FindDialog.FindWhatLabel" xml:space="preserve">
    <value>何の検索：</value>
  </data>
  <data name="ComponentInspector.FindDialog.FoundListColumnHeader" xml:space="preserve">
    <value>項目</value>
  </data>
  <data name="ComponentInspector.FindDialog.FullNameLabel" xml:space="preserve">
    <value>フルネーム</value>
  </data>
  <data name="ComponentInspector.FindDialog.LevelSelectOnlyDownLabel" xml:space="preserve">
    <value>下のみ</value>
  </data>
  <data name="ComponentInspector.FindDialog.LevelsLabel" xml:space="preserve">
    <value>レベル</value>
  </data>
  <data name="ComponentInspector.FindDialog.LookingAtLabel" xml:space="preserve">
    <value>見る：</value>
  </data>
  <data name="ComponentInspector.FindDialog.MatchLabel" xml:space="preserve">
    <value>マッチ</value>
  </data>
  <data name="ComponentInspector.FindDialog.NoItemsFoundMessage" xml:space="preserve">
    <value>見つかりません</value>
  </data>
  <data name="ComponentInspector.FindDialog.NoTreeNodeSelectedDialogTitle" xml:space="preserve">
    <value>ツリーノードを選択してください</value>
  </data>
  <data name="ComponentInspector.FindDialog.NoTreeNodeSelectedMessage" xml:space="preserve">
    <value>ツリーでノードを選択する必要があります;検索はそのノードから始まります</value>
  </data>
  <data name="ComponentInspector.FindDialog.ObjectTreeNameCheckBox" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="ComponentInspector.FindDialog.ObjectTreeRadioButtonText" xml:space="preserve">
    <value>オブジェクトツリー</value>
  </data>
  <data name="ComponentInspector.FindDialog.ObjectTreeValueCheckBox" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="ComponentInspector.FindDialog.SelectNameOrValueDialogTitle" xml:space="preserve">
    <value>名前/値を選んでください</value>
  </data>
  <data name="ComponentInspector.FindDialog.SelectNameOrValueMessage" xml:space="preserve">
    <value>オブジェクトツリーを検索する時、1つもしくは、名前と値の両方を選んでください。</value>
  </data>
  <data name="ComponentInspector.FindDialog.SelectNodeInTreeNameMessage" xml:space="preserve">
    <value>{0} ツリーでノードを選択する必要があります;検索はそのノードから始まります</value>
  </data>
  <data name="ComponentInspector.FindDialog.ShowItemMenuItem" xml:space="preserve">
    <value>項目を表示</value>
  </data>
  <data name="ComponentInspector.FindDialog.StartingWithLabel" xml:space="preserve">
    <value>次から開始：</value>
  </data>
  <data name="ComponentInspector.FindDialog.StartsWithRadioButton" xml:space="preserve">
    <value>から始める</value>
  </data>
  <data name="ComponentInspector.FindDialog.Title" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="ComponentInspector.GacList.CultureColumn" xml:space="preserve">
    <value>カルチャ</value>
  </data>
  <data name="ComponentInspector.GacList.GlobalAssemblyNameColumn" xml:space="preserve">
    <value>グローバルアセンブリ名</value>
  </data>
  <data name="ComponentInspector.GacList.OpenMenuItem" xml:space="preserve">
    <value>開く(&amp;O)</value>
  </data>
  <data name="ComponentInspector.GacList.PublicKeyTokenColumn" xml:space="preserve">
    <value>公開キートークン</value>
  </data>
  <data name="ComponentInspector.GacList.VersionColumn" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.AutomaticallyGetComPropertiesCheckBox" xml:space="preserve">
    <value>自動的なCOMプロパティの取得</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.GetRunningComObjectsAtStartupCheckBox" xml:space="preserve">
    <value>起動時にCOM実行オブジェクトを取得</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.PanelsGroupBox" xml:space="preserve">
    <value>パネル</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.ShowAssemblyPanelCheckBox" xml:space="preserve">
    <value>アセンブリパネルの表示</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.ShowControlsPanelCheckBox" xml:space="preserve">
    <value>コントロールパネルの表示</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.ShowGacPanelCheckBox" xml:space="preserve">
    <value>GACパネルの表示</value>
  </data>
  <data name="ComponentInspector.GetPropertyMenuItem" xml:space="preserve">
    <value>プロパティの取得(&amp;G)</value>
  </data>
  <data name="ComponentInspector.GettingStartedDialog.Information" xml:space="preserve">
    <value>インスペクタはActiveX/COMオブジェクトを見て操作できます。

左のオブジェクトツリーを使ってCOM実行オブジェクトをブラウズします。メソッドを呼び出すオブジェクトツリーのメンバを右クリックします。

ActiveX/COMタブにてインストール済みCOMコンポーネントをブラウズします。

開くメニューを使ってタイプライブラリかコントロールファイルを開きます。

 ActiveX/COMオブジェクトを作成/操作するためにクラスをオブジェクトツリーかデザインサーフェースのタイプライブラリ/コントロールにドラッグします。</value>
  </data>
  <data name="ComponentInspector.GettingStartedDialog.ShowThisDialogCheckBox" xml:space="preserve">
    <value>ダイアログの表示</value>
  </data>
  <data name="ComponentInspector.GettingStartedDialog.Title" xml:space="preserve">
    <value>はじめに</value>
  </data>
  <data name="ComponentInspector.ImagePanel.ControlDesignSurfaceLabel" xml:space="preserve">
    <value>コントロールデザイン サーフェイス</value>
  </data>
  <data name="ComponentInspector.ImagePanel.DesignModeLabel" xml:space="preserve">
    <value>デザインモード</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.CloseAssembly" xml:space="preserve">
    <value>アセンブリを閉じる(&amp;A)...</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.Find" xml:space="preserve">
    <value>検索(&amp;F)...</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.ObjectTreeOptionsPanel.Title" xml:space="preserve">
    <value>オブジェクトツリー</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.OpenAssembly" xml:space="preserve">
    <value>アセンブリを開く(&amp;O)...</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.TypeHandlerOptionsPanel.Title" xml:space="preserve">
    <value>タイプハンドラ</value>
  </data>
  <data name="ComponentInspector.InvokeMethodMenuItem" xml:space="preserve">
    <value>メソッドの実行(&amp;M)</value>
  </data>
  <data name="ComponentInspector.MainMenu.InspectorMenu" xml:space="preserve">
    <value>インスペクタ(&amp;I)</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.ObjectsTreePanel" xml:space="preserve">
    <value>オブジェクト</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.OutputTab" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.ParametersPanel" xml:space="preserve">
    <value>引数</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.TopLevelObjects" xml:space="preserve">
    <value>トップレベルオブジェクト</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.ValueColumnHeader" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.ActionMenuItem" xml:space="preserve">
    <value>アクション(&amp;A)</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.ActiveXFilesFilterName" xml:space="preserve">
    <value>ActiveXファイル</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.AssemblyFilesFilterName" xml:space="preserve">
    <value>アセンブリファイル</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.AttachMenuItem" xml:space="preserve">
    <value>トレース中(&amp;T)...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.DirectoriesMenuItem" xml:space="preserve">
    <value>ディレクトリ(&amp;D)...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.ObjectTreeMenuItem" xml:space="preserve">
    <value>オブジェクトツリー(&amp;O)...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.OpenFileDialogTitle" xml:space="preserve">
    <value>開くファイルを選択</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.OptionsMenuItem" xml:space="preserve">
    <value>オプション(&amp;O)</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.PanelsMenuItem" xml:space="preserve">
    <value>パネル(&amp;P)...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.ShowHelpMenuItem" xml:space="preserve">
    <value>ヘルプ(&amp;H)...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.TracingMenuItem" xml:space="preserve">
    <value>トレース中(&amp;T)...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.TypeHandlersMenuItem" xml:space="preserve">
    <value>タイプハンドラ(&amp;T)...</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.CategoriesGroupBox" xml:space="preserve">
    <value>カテゴリ</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.CategoryCountLabel" xml:space="preserve">
    <value>メンバ数を超えた場合</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.DisplayIntegersInHexCheckBox" xml:space="preserve">
    <value>16 進数の数値</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowBaseClassCategoryCheckBox" xml:space="preserve">
    <value>基本クラス部を表示</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowBaseClassMembersCheckBox" xml:space="preserve">
    <value>基本クラスのメンバ</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowBaseClassNamesCheckBox" xml:space="preserve">
    <value>基本クラスの名前</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowEventsCheckBox" xml:space="preserve">
    <value>イベント</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowFieldsCheckBox" xml:space="preserve">
    <value>フィールド</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowGroupBox" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowMemberCategoriesCheckBox" xml:space="preserve">
    <value>メンバカテゴリを表示</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowMembersGroupBox" xml:space="preserve">
    <value>メンバを表示</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowMethodsCheckBox" xml:space="preserve">
    <value>メソッド</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowObjectAsBaseClassCheckBox" xml:space="preserve">
    <value>基本クラス部のオブジェクトメンバーを表示</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowPropertiesCheckBox" xml:space="preserve">
    <value>プロパティ</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowPropertyAccessorsMethodsCheckBox" xml:space="preserve">
    <value>プロパティ/イベント アクセサメソッド</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowPublicMembersOnlyCheckBox" xml:space="preserve">
    <value>Publicメンバのみ</value>
  </data>
  <data name="ComponentInspector.OutputList.OutputColumnHeader" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="ComponentInspector.ParamControlInfo.SelectObjectLabel" xml:space="preserve">
    <value>オブジェクト選択</value>
  </data>
  <data name="ComponentInspector.ParamControlInfo.SeparateStringsWithSpaces" xml:space="preserve">
    <value>(空白で文字列を分割)</value>
  </data>
  <data name="ComponentInspector.ParamControlInfo.ValueLabel" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.AddingRunningComObjectsDialogTitle" xml:space="preserve">
    <value>COM実行オブジェクトの追加中</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.AddingRunningComObjectsMessage" xml:space="preserve">
    <value>COM実行オブジェクトを追加している間、お待ちください</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.GettingInformationDialogTitle" xml:space="preserve">
    <value>{0}の情報を取得中</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.GettingInformationMessage" xml:space="preserve">
    <value>{0}の情報を取得している間、お待ちください</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.LoadingPreviouslyOpenedAssembliesDialogTitle" xml:space="preserve">
    <value>記憶されているアセンブリをロード中です</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.LoadingPreviouslyOpenedAssembliesMessage" xml:space="preserve">
    <value>記憶されているアセンブリをロードいしている間、お待ちください</value>
  </data>
  <data name="ComponentInspector.Registry.Text" xml:space="preserve">
    <value>レジストリ</value>
  </data>
  <data name="ComponentInspector.SetFieldMenuItem" xml:space="preserve">
    <value>フィールドを設定(&amp;F)</value>
  </data>
  <data name="ComponentInspector.SetPropertyMenuItem" xml:space="preserve">
    <value>プロパティを設定(&amp;S)</value>
  </data>
  <data name="ComponentInspector.ToolsMenu.ShowComponentInspectorMenuItem" xml:space="preserve">
    <value>コンポーネントインスペクタ</value>
  </data>
  <data name="ComponentInspector.TracingDialog.Title" xml:space="preserve">
    <value>トレースレベルを設定</value>
  </data>
  <data name="ComponentInspector.TracingDialog.TraceLevelLabel" xml:space="preserve">
    <value>トレースレベル</value>
  </data>
  <data name="ComponentInspector.TreeListPanel.HeaderPanel" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="ComponentInspector.TypeHandlerOptionsPanel.InformationLabel" xml:space="preserve">
    <value>タイプハンドラは以下の不要な詳細を隠した便利な方法ににてマークされたクラスを表します</value>
  </data>
  <data name="ComponentInspector.WaitingForAppDialog.Information" xml:space="preserve">
    <value>アプリケーション開始の待機中。アプリケーションのスタートに失敗したら（もしくは待つのに疲れたら）、キャンセルボタンでキャンセルもできます。</value>
  </data>
  <data name="ComponentInspector.WaitingForAppDialog.Title" xml:space="preserve">
    <value>アプリケーション開始の待機中。</value>
  </data>
  <data name="CQA.MainWindow.FormTitle" xml:space="preserve">
    <value>コード品質分析</value>
  </data>
  <data name="CSharpBinding.Formatting.AutoFormat" xml:space="preserve">
    <value>自動的にコードをフォーマットする</value>
  </data>
  <data name="CSharpBinding.Formatting.DefaultOptionReference" xml:space="preserve">
    <value>(既定)</value>
  </data>
  <data name="CSharpBinding.Formatting.GlobalOptionReference" xml:space="preserve">
    <value>(グローバル)</value>
  </data>
  <data name="CSharpBinding.Formatting.NoPresetSelectedMessage" xml:space="preserve">
    <value>フォーマットのプリセットが選択されていません！</value>
  </data>
  <data name="CSharpBinding.Formatting.PresetOverwriteQuestion" xml:space="preserve">
    <value>本当にこれまで設定したフォーマットオプションをすべてリセットしますか？</value>
  </data>
  <data name="CSharpBinding.Formatting.ProjectOptionReference" xml:space="preserve">
    <value>(プロジェクト)</value>
  </data>
  <data name="CSharpBinding.Formatting.ResetTo" xml:space="preserve">
    <value>次の値にリセットする：</value>
  </data>
  <data name="CSharpBinding.Formatting.SolutionOptionReference" xml:space="preserve">
    <value>(ソリューション)</value>
  </data>
  <data name="CSharpBinding.GenerateNewHandlerInstructions" xml:space="preserve">
    <value>明示的なメソッドへの参照の追加;タブを押すか、再び新しいメソッドスタブを追加します</value>
  </data>
  <data name="CSharpBinding.InsertAnonymousMethod" xml:space="preserve">
    <value>引数なし匿名メソッドの追加</value>
  </data>
  <data name="CSharpBinding.InsertAnonymousMethodWithParameters" xml:space="preserve">
    <value>引数あり匿名メソッドの追加</value>
  </data>
  <data name="Dialog.About.DialogName" xml:space="preserve">
    <value>SharpDevelopのバージョン情報</value>
  </data>
  <data name="Dialog.About.label1Text" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="Dialog.About.label2Text" xml:space="preserve">
    <value>ビルド</value>
  </data>
  <data name="Dialog.About.License" xml:space="preserve">
    <value>${License}.条項下でのリリース</value>
  </data>
  <data name="Dialog.About.VersionInfoTabName" xml:space="preserve">
    <value>バージョン情報</value>
  </data>
  <data name="Dialog.About.VersionInfoTabName.CopyButton" xml:space="preserve">
    <value>コピー(&amp;C)</value>
  </data>
  <data name="Dialog.About.VersionInfoTabName.VersionColumn" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="Dialog.Componnents.RichMenuItem.NoRecentFilesString" xml:space="preserve">
    <value>最近使ったファイル</value>
  </data>
  <data name="Dialog.Componnents.RichMenuItem.NoRecentProjectsString" xml:space="preserve">
    <value>最近使ったプロジェクト</value>
  </data>
  <data name="Dialog.DirtyFiles.DiscardAllButton" xml:space="preserve">
    <value>すべて破棄(&amp;D)</value>
  </data>
  <data name="Dialog.DirtyFiles.SaveAllButton" xml:space="preserve">
    <value>すべて保存(&amp;A)</value>
  </data>
  <data name="Dialog.DirtyFiles.SaveButton" xml:space="preserve">
    <value>保存(&amp;S)</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.AddProjectConfiguration" xml:space="preserve">
    <value>プロジェクト構成の追加</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.AddProjectPlatform" xml:space="preserve">
    <value>プロジェクトプラットフォームの追加</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.AddSolutionConfiguration" xml:space="preserve">
    <value>ソリューション構成の追加</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.AddSolutionPlatform" xml:space="preserve">
    <value>ソリューションプラットフォームの追加</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.CannotDeleteAllConfigurationsOrPlatforms" xml:space="preserve">
    <value>すべての構成/プラットフォームを削除できません</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.ConfirmRemoveConfigurationOrPlatform" xml:space="preserve">
    <value>本当に '{0}' を削除します</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.CopySettingsFrom" xml:space="preserve">
    <value>次から設定をコピー(&amp;S)：</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.CreateConfigurationInAllProjects" xml:space="preserve">
    <value>すべてのプロジェクトでこの設定を作成(&amp;C)</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.DuplicateName" xml:space="preserve">
    <value>名前の重複</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EditProjectConfigurations" xml:space="preserve">
    <value>プロジェクト構成の編集</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EditProjectPlatforms" xml:space="preserve">
    <value>プロジェクトプラットフォームの編集</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EditSolutionConfigurations" xml:space="preserve">
    <value>ソリューション構成の編集</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EditSolutionPlatforms" xml:space="preserve">
    <value>ソリューションプラットフォームの編集</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EmptyItem" xml:space="preserve">
    <value>&lt;空白&gt;</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EnterNewName" xml:space="preserve">
    <value>新しい名前を入力：</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.InvalidName" xml:space="preserve">
    <value>不正な名前</value>
  </data>
  <data name="Dialog.Goto.DialogName" xml:space="preserve">
    <value>移動</value>
  </data>
  <data name="Dialog.Goto.GotoLine" xml:space="preserve">
    <value>行へ移動</value>
  </data>
  <data name="Dialog.Goto.IntroText" xml:space="preserve">
    <value>移動先の式を入力してください。
行ナンバー、クラス名、ファイル名を入力できます。
例： "120", "MainClass", "Main.cs, 120"</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Background" xml:space="preserve">
    <value>背景色</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Bold" xml:space="preserve">
    <value>太字</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Foreground" xml:space="preserve">
    <value>前景色</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Italic" xml:space="preserve">
    <value>斜体</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Underline" xml:space="preserve">
    <value>下線</value>
  </data>
  <data name="Dialog.HighlightingEditor.Export" xml:space="preserve">
    <value>ハイライトカラーをエクスポート</value>
  </data>
  <data name="Dialog.HighlightingEditor.Import" xml:space="preserve">
    <value>ハイライトカラーをインポート</value>
  </data>
  <data name="Dialog.HighlightingEditor.NotSupportedMessage" xml:space="preserve">
    <value>設定バージョンはサポートされません！</value>
  </data>
  <data name="Dialog.HighlightingEditor.OverwriteCustomizationsMessage" xml:space="preserve">
    <value>選択したファイルをインポートすると既存のカスタマイズ設定はリセットされます。よろしいですか？</value>
  </data>
  <data name="Dialog.HighlightingEditor.Properties.Value" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="Dialog.HighlightingEditor.ResetAll" xml:space="preserve">
    <value>すべてをリセットしデフォルトに戻す</value>
  </data>
  <data name="Dialog.HighlightingEditor.SampleText" xml:space="preserve">
    <value>サンプル文字列</value>
  </data>
  <data name="Dialog.NewFile.AddToProjectQuestion" xml:space="preserve">
    <value>もし現プロジェクトで新しいファイルを使いたい場合はそれをプロジェクトに追加する必要があります。
新しいをファイルをプロジェクト ${CurrentProjectName} に追加しますか？</value>
  </data>
  <data name="Dialog.NewFile.AddToProjectQuestionProject" xml:space="preserve">
    <value>プロジェクト内にファイルを作成</value>
  </data>
  <data name="Dialog.NewFile.AddToProjectQuestionStandalone" xml:space="preserve">
    <value>スタンドアロンファイルを作成</value>
  </data>
  <data name="Dialog.NewFile.AddToProjectQuestionTitle" xml:space="preserve">
    <value>プロジェクトにファイルを追加</value>
  </data>
  <data name="Dialog.NewFile.CategoryText" xml:space="preserve">
    <value>カテゴリ(&amp;C)：</value>
  </data>
  <data name="Dialog.NewFile.DialogName" xml:space="preserve">
    <value>新しいファイル</value>
  </data>
  <data name="Dialog.NewFile.FileNameLabel" xml:space="preserve">
    <value>ファイル名(&amp;F)</value>
  </data>
  <data name="Dialog.NewFile.FillOutFirstCaption" xml:space="preserve">
    <value>プロパティを入力してください</value>
  </data>
  <data name="Dialog.NewFile.FillOutFirstMessage" xml:space="preserve">
    <value>ファイルを作成する前にプロパティを指定してください。</value>
  </data>
  <data name="Dialog.NewFile.ReadOnlyProjectWarning" xml:space="preserve">
    <value>現在選択されているプロジェクトファイル {0} は読み取り専用属性が設定されています。プロジェクトに新しいファイルを追加できません</value>
  </data>
  <data name="Dialog.NewFile.TemplateText" xml:space="preserve">
    <value>テンプレート(&amp;T)：</value>
  </data>
  <data name="Dialog.NewProject.CreateDirectoryForSolution" xml:space="preserve">
    <value>ソリューション用のディレクトリを作成(&amp;D)</value>
  </data>
  <data name="Dialog.NewProject.DialogName" xml:space="preserve">
    <value>新しいプロジェクト</value>
  </data>
  <data name="Dialog.NewProject.LocationLabelText" xml:space="preserve">
    <value>場所(&amp;L)：</value>
  </data>
  <data name="Dialog.NewProject.NameLabelText" xml:space="preserve">
    <value>名前(&amp;N)：</value>
  </data>
  <data name="Dialog.NewProject.ProjectAtDescription" xml:space="preserve">
    <value>プロジェクトは次の位置に作成されます：</value>
  </data>
  <data name="Dialog.NewProject.ProjectTypeLabelText" xml:space="preserve">
    <value>カテゴリ(&amp;C)：</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ErrorParsingRegex" xml:space="preserve">
    <value>正規表現エラーパース：</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindAll" xml:space="preserve">
    <value>すべてを検索(&amp;A)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindButton" xml:space="preserve">
    <value>検索(&amp;F)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindDialogName" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindNextButton" xml:space="preserve">
    <value>次を検索(&amp;F)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindWhat" xml:space="preserve">
    <value>検索文字列：</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.IncludeSubFolders" xml:space="preserve">
    <value>サブフォルダーを含む(&amp;S)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookAtFileTypes" xml:space="preserve">
    <value>これらのファイルタイプを見る(&amp;T)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.AllOpenDocuments" xml:space="preserve">
    <value>すべてのドキュメントを開く</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.CurrentDocument" xml:space="preserve">
    <value>現在のドキュメント</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.CurrentSelection" xml:space="preserve">
    <value>現在の選択</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.DirectoryNotFound" xml:space="preserve">
    <value>ディレクトリ '{0}' は存在しません</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.SelectDirectory" xml:space="preserve">
    <value>検索ディレクトリの選択</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.WholeProject" xml:space="preserve">
    <value>すべてのプロジェクト</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.WholeSolution" xml:space="preserve">
    <value>すべてののソリューション</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.MarkAllButton" xml:space="preserve">
    <value>すべてをマーク</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.MatchCase" xml:space="preserve">
    <value>大文字と小文字を区別する(&amp;C)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.MatchWholeWord" xml:space="preserve">
    <value>単語単位で探す(&amp;W)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ReplaceAllButton" xml:space="preserve">
    <value>すべて置換(&amp;A)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ReplaceButton" xml:space="preserve">
    <value>置換(&amp;R)</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ReplaceDialogName" xml:space="preserve">
    <value>置換</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ReplaceWith" xml:space="preserve">
    <value>置換後の文字列：</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchIn" xml:space="preserve">
    <value>検索対象：</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStrategy.RegexSearch" xml:space="preserve">
    <value>正規表現</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStrategy.Standard" xml:space="preserve">
    <value>標準の検索</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStrategy.WildcardSearch" xml:space="preserve">
    <value>ワイルドカード</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStringNotFound" xml:space="preserve">
    <value>指定されたテキストは見つかりませんでした。</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStringNotFound.Title" xml:space="preserve">
    <value>見つかりません</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.Title" xml:space="preserve">
    <value>検索と置換</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.UseMethodLabel" xml:space="preserve">
    <value>オプション：</value>
  </data>
  <data name="Dialog.NewProject.SelectDirectoryForProject" xml:space="preserve">
    <value>作成されるプロジェクトのディレクトリを選択</value>
  </data>
  <data name="Dialog.NewProject.SolutionName" xml:space="preserve">
    <value>ソリューション名(&amp;M)：</value>
  </data>
  <data name="Dialog.NewProject.TemplateLabelText" xml:space="preserve">
    <value>テンプレート(&amp;T)：</value>
  </data>
  <data name="Dialog.Options.BufferOptions" xml:space="preserve">
    <value>バッファの設定</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.AddGroupLabel" xml:space="preserve">
    <value>新しいグループを追加(&amp;D)</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.Description" xml:space="preserve">
    <value>説明</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditGroupDialog.Text" xml:space="preserve">
    <value>セミコロン区切りで拡張子のリストを入力してください(例： .h;.c;.cpp)。</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditGroupLabel" xml:space="preserve">
    <value>拡張子を編集(&amp;E)</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditTemplateDialog.DescriptionLabel" xml:space="preserve">
    <value>説明(&amp;D)</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditTemplateDialog.DialogName" xml:space="preserve">
    <value>テンプレートを編集</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditTemplateDialog.TemplateLabel" xml:space="preserve">
    <value>テンプレート(&amp;T)</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.ExtensionsLabel" xml:space="preserve">
    <value>拡張(&amp;X)</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.Keyword" xml:space="preserve">
    <value>キーワードマッピング</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.PressTabToInsertTemplate" xml:space="preserve">
    <value>このコードテンプレートを挿入するタブを押す</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.RemoveGroupLabel" xml:space="preserve">
    <value>グループを削除(&amp;M)</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.Template" xml:space="preserve">
    <value>テンプレート</value>
  </data>
  <data name="Dialog.Options.CodeTemplatesText" xml:space="preserve">
    <value>コードテンプレート</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.ConfigurationColumnHeader" xml:space="preserve">
    <value>構成</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.ConfigurationEditor" xml:space="preserve">
    <value>構成エディタ</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.ConfigurationEditor.EditItem" xml:space="preserve">
    <value>&lt;編集&gt;</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.PlatformColumnHeader" xml:space="preserve">
    <value>プラットフォーム</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.SolutionConfiguration" xml:space="preserve">
    <value>ソリューション構成(&amp;S)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.ArgumentLabel" xml:space="preserve">
    <value>引数(&amp;A)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.CommandLabel" xml:space="preserve">
    <value>コマンド(&amp;C)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.PromptForArgsCheckBox" xml:space="preserve">
    <value>引数のプロンプト(&amp;P)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CombineDirectory" xml:space="preserve">
    <value>ソリューションディレクトリ(&amp;C)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CombineFileName" xml:space="preserve">
    <value>ソリューションファイル名</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CurrentColumn" xml:space="preserve">
    <value>カレント列</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CurrentLine" xml:space="preserve">
    <value>カレント行</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CurrentText" xml:space="preserve">
    <value>カレント文字列</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.FullItemDirectory" xml:space="preserve">
    <value>アイテムディレクトリ(&amp;I)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.FullItemPath" xml:space="preserve">
    <value>アイテムパス</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.FullTargetPath" xml:space="preserve">
    <value>ターゲットパス</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.ItemExtension" xml:space="preserve">
    <value>アイテム拡張子</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.ItemFileName" xml:space="preserve">
    <value>アイテムファイル名</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.ProjectDirectory" xml:space="preserve">
    <value>プロジェクトディレクトリ(&amp;P)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.ProjectFileName" xml:space="preserve">
    <value>プロジェクトファイル名</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.SharpDevelopStartupPath" xml:space="preserve">
    <value>#Developスタートアップディレクトリ</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.TargetDirectory" xml:space="preserve">
    <value>ターゲットディレクトリ(&amp;T)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.TargetExtension" xml:space="preserve">
    <value>ターゲット拡張子</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.TargetName" xml:space="preserve">
    <value>ターゲット名</value>
  </data>
  <data name="Dialog.Options.ExternalTool.TitleLabel" xml:space="preserve">
    <value>タイトル(&amp;T)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.ToolsLabel" xml:space="preserve">
    <value>ツール(&amp;T)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.UseOutputWindow" xml:space="preserve">
    <value>アウトプットウィンドウを使用(&amp;O)</value>
  </data>
  <data name="Dialog.Options.ExternalTool.WorkingDirLabel" xml:space="preserve">
    <value>作業ディレクトリ(&amp;W)</value>
  </data>
  <data name="Dialog.Options.ExternalToolsText" xml:space="preserve">
    <value>外部ツール</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.ClearCache" xml:space="preserve">
    <value>キャッシュをクリア</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.CompleteWhenTyping" xml:space="preserve">
    <value>文字入力後にコード補完を表示</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.DetailSettings" xml:space="preserve">
    <value>コード補完の詳細設定</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.LanguageDependend" xml:space="preserve">
    <value>以下のオプションは言語依存です。いくつかのオプションは特定の言語では動作しません</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.MainOption" xml:space="preserve">
    <value>コード補完を無効にするには以下のオプションを使います</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.RefreshInsightOnComma" xml:space="preserve">
    <value>コンマを入力したときによりよいオーバーロードのツールチップを再び開く</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.SaveItemCountAfterNumber" xml:space="preserve">
    <value>項目</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.SaveItemCountBeforeNumber" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.TooltipLinkTarget" xml:space="preserve">
    <value>ツールチップのリンク先</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.TooltipLinkTargetDefinition" xml:space="preserve">
    <value>コードの定義</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.TooltipLinkTargetDocumentation" xml:space="preserve">
    <value>ドキュメント (存在する場合)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseDataUsageCache" xml:space="preserve">
    <value>最近利用されたメンバを事前選択</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseDebugTooltipsOnly" xml:space="preserve">
    <value>デバッグモードのみ</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseInsight" xml:space="preserve">
    <value>メソッド呼び出し記述時にツールチップを表示</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseKeywordCompletion" xml:space="preserve">
    <value>キーワード後のコード補完トリガー</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseTooltips" xml:space="preserve">
    <value>マウスオーバー式移動時にツールチップを表示</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.BlankLinesBetweenMembersCheckBox" xml:space="preserve">
    <value>メンバの間に空行を挿入(&amp;I)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.CodeGenerationOptionsGroupBox" xml:space="preserve">
    <value>コード生成設定</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.CommentGenerationOptionsGroupBox" xml:space="preserve">
    <value>コメント生成オプション</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.ElseOnClosingCheckBox" xml:space="preserve">
    <value>elseを閉じ括弧と同じ行に挿入(&amp;E)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.GenerateAdditionalCommentsCheckBox" xml:space="preserve">
    <value>追加のコメントを生成(&amp;A)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.GenerateDocCommentsCheckBox" xml:space="preserve">
    <value>ドキュメント用コメントを生成(&amp;D)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.StartBlockOnTheSameLineCheckBox" xml:space="preserve">
    <value>同じ行からコードをスタート(&amp;S)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.Title" xml:space="preserve">
    <value>コード生成</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.UseFullTypeNamesCheckBox" xml:space="preserve">
    <value>すべての型名を使用(&amp;U)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodingOptionsText" xml:space="preserve">
    <value>コーディング</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging" xml:space="preserve">
    <value>デバッグ</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.AskForArguments" xml:space="preserve">
    <value>実行ファイルの起動時に起動引数と作業ディレクトリを確認</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.BreakAtBeginning" xml:space="preserve">
    <value>先頭行の実行時にブレーク</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.EnableDecompiler" xml:space="preserve">
    <value>デコンパイラを有効</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.EnableEditAndContinue" xml:space="preserve">
    <value>エディットアンドコンティニューを有効</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Exceptions" xml:space="preserve">
    <value>例外</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.PauseOnHandledExceptions" xml:space="preserve">
    <value>ハンドリングされている例外て停止</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping" xml:space="preserve">
    <value>ステップ実行</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.DecompileCodeWithoutSymbols" xml:space="preserve">
    <value>シンボルなしにコードをデコンパイル</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.EnableJustMyCode" xml:space="preserve">
    <value>ステップ実行のため 'Just My Code'機能を使用</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverAllProperties" xml:space="preserve">
    <value>すべてのプロパティをステップオーバー</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverDebuggerAttributes" xml:space="preserve">
    <value>デバッガ属性がマークされたコードのみステップオーバー</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverFieldAccessProperties" xml:space="preserve">
    <value>フィールドアクセスプロパティをステップオーバー</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverNoSymbols" xml:space="preserve">
    <value>シンボルがないコードをステップオーバー</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverSingleLineProperties" xml:space="preserve">
    <value>単一行プロパティをステップオーバー</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.SuppressJITOptimization" xml:space="preserve">
    <value>JIT最適化の抑制</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.SuppressNGENOptimization" xml:space="preserve">
    <value>NGEN最適化の抑制</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Symbols" xml:space="preserve">
    <value>シンボル</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Symbols.ListCaption" xml:space="preserve">
    <value>シンボルとソースコードのパス：</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.WithoutSource" xml:space="preserve">
    <value>ソースコードなしでデバッグする</value>
  </data>
  <data name="Dialog.Options.IDEOptions.EditStandardHeaderPanel.HeaderLabel" xml:space="preserve">
    <value>ヘッダー(&amp;H)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.EditStandardHeaderPanel.LanguageLabel" xml:space="preserve">
    <value>言語(&amp;L)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.EditStandardHeaderPanel.Title" xml:space="preserve">
    <value>標準ヘッダの編集</value>
  </data>
  <data name="Dialog.Options.IDEOptions.General" xml:space="preserve">
    <value>全般</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.AutoLoadExternalChanges" xml:space="preserve">
    <value>保存時に変更を自動ロード(&amp;A)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.CreateBackupCopyCheckBox" xml:space="preserve">
    <value>バックアップを常に生成(&amp;A)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.DefaultFileEncoding" xml:space="preserve">
    <value>デフォルトファイルエンコーディング（&amp;E)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.DetectExternalChanges" xml:space="preserve">
    <value>ファイルの外部変更を検知(&amp;D)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.LoadLabel" xml:space="preserve">
    <value>読み込み</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.LoadUserDataCheckBox" xml:space="preserve">
    <value>ユーザ定義の設定をロード(&amp;L)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.PanelName" xml:space="preserve">
    <value>読み込み/保存</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.SaveLabel" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.UnixRadioButton" xml:space="preserve">
    <value>Unix</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.UseRecycleBin" xml:space="preserve">
    <value>ファイル削除時にゴミ箱を利用(&amp;R)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.WindowsRadioButton" xml:space="preserve">
    <value>Windows</value>
  </data>
  <data name="Dialog.Options.IDEOptions.OutputPanel.Format" xml:space="preserve">
    <value>フォーマット</value>
  </data>
  <data name="Dialog.Options.IDEOptions.OutputPanel.Title" xml:space="preserve">
    <value>ウィンドウに出力</value>
  </data>
  <data name="Dialog.Options.IDEOptions.OutputPanel.WordWrap" xml:space="preserve">
    <value>ワードラップ</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.BuildAndRunGroupBox" xml:space="preserve">
    <value>ビルドと実行オプション</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.InvalidProjectPathSpecified" xml:space="preserve">
    <value>不正なプロジェクトパス</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.LoadPrevProjectCheckBox" xml:space="preserve">
    <value>スタートアップ時に前のソリューションをロード</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.PanelName" xml:space="preserve">
    <value>プロジェクトとソリューション</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.ParallelBuild" xml:space="preserve">
    <value>並列ビルドするプロジェクトの数</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.ProjectLocationLabel" xml:space="preserve">
    <value>デフォルトプロジェクトの場所</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.SelectDefaultProjectLocationDialog.Title" xml:space="preserve">
    <value>デフォルトプロジェクトの場所を選択</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.SettingsGroupBox" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.ShowErrorListPadCheckBox" xml:space="preserve">
    <value>エラーでビルドを中断したときエラーをリストパッドに表示</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning" xml:space="preserve">
    <value>実行中：</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning.BuildModifiedAndDependent" xml:space="preserve">
    <value>プロジェクトと依存プロジェクトの変更をビルド</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning.BuildOnlyModified" xml:space="preserve">
    <value>変更プロジェクトのみビルド</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning.DoNotBuild" xml:space="preserve">
    <value>ビルドしない</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning.RegularBuild" xml:space="preserve">
    <value>すべてのプロジェクトをビルド</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectCulture.CurrentUILanguageLabel" xml:space="preserve">
    <value>現在のUI用言語設定：</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectCulture.DescriptionText" xml:space="preserve">
    <value>言語を選択するにはアイコンをクリックしてください。</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectCulture.PanelName" xml:space="preserve">
    <value>UI用言語設定</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.SelectAmbienceLabel" xml:space="preserve">
    <value>好みの外観を選択してください(&amp;A)：</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.ShowExtensionsCheckBox" xml:space="preserve">
    <value>プロジェクトビューでファイルの拡張子を表示(&amp;E)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.ShowStatusBarCheckBox" xml:space="preserve">
    <value>ステータスバーを表示(&amp;S)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.ShowToolBarCheckBox" xml:space="preserve">
    <value>ツールバーを表示(&amp;T)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.UseProfessionalStyleCheckBox" xml:space="preserve">
    <value>メニューとツールバーにブルースタイル(Office 2003風)を使用</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.UseProjectAmbience" xml:space="preserve">
    <value>可能であればプロジェクトのアンビエンスを好む</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.VisualStyleGroupBox" xml:space="preserve">
    <value>表示スタイル</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectVisualStyle.PanelName" xml:space="preserve">
    <value>スタイル</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TaskListOptions.CommentTagsGroupBox" xml:space="preserve">
    <value>コメントタグ</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TaskListOptions.NameLabel" xml:space="preserve">
    <value>名前(&amp;N)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TaskListOptions.PanelName" xml:space="preserve">
    <value>タスクリスト</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TaskListOptions.TokenListLabel" xml:space="preserve">
    <value>トークンリスト(&amp;T)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.BehaviourGroupBox" xml:space="preserve">
    <value>動作</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.BehindEOLCheckBox" xml:space="preserve">
    <value>EOLを超えてカーソルを移動(&amp;C)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.ConvertTabsToSpacesCheckBox" xml:space="preserve">
    <value>タブをスペースに変換(&amp;O)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.CtrlClickGotoDefinition" xml:space="preserve">
    <value>Ctrl+クリックで「定義へ移動」を使用</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.CurlyBracketCheckBox" xml:space="preserve">
    <value>自動的に中括弧を挿入(&amp;U)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.CutCopyWholeLine" xml:space="preserve">
    <value>未選択時は行全体を切り取りまたはコピー</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.EnableVirtualSpace" xml:space="preserve">
    <value>バーチャルスペースを有効</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.HideMouseCheckBox" xml:space="preserve">
    <value>文字入力中はマウスカーソルを隠す(&amp;H)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentLabel" xml:space="preserve">
    <value>インデント(&amp;N)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentSizeLabel" xml:space="preserve">
    <value>インデントサイズ(&amp;I)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentStyle.Automatic" xml:space="preserve">
    <value>自動</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentStyle.None" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentStyle.Smart" xml:space="preserve">
    <value>スマート</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.MouseWhellGroupBox" xml:space="preserve">
    <value>マウスホイールの方向(&amp;M)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.NormalMouseDirectionRadioButton" xml:space="preserve">
    <value>標準</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.PanelName" xml:space="preserve">
    <value>動作</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.ReverseMouseDirectionRadioButton" xml:space="preserve">
    <value>反転</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.TabsGroupBox" xml:space="preserve">
    <value>タブ</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.TabSizeLabel" xml:space="preserve">
    <value>タブサイズ(&amp;T)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.TemplateInsertCheckBox" xml:space="preserve">
    <value>テンプレートの自動挿入(&amp;A)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.UseSmartIndent" xml:space="preserve">
    <value>スマートインデントを使用</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.CodeCompletion.PanelName" xml:space="preserve">
    <value>コード補完</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.AntialiasedFontCheckBox" xml:space="preserve">
    <value>アンチエイリアスを有効(&amp;R)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.ChangeMarkerMarginCheckBox" xml:space="preserve">
    <value>マーカーの余白を変更可能</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.CodeCompletionCheckBox" xml:space="preserve">
    <value>コードの補完を有効(&amp;C)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.DoubleBufferCheckBox" xml:space="preserve">
    <value>ダブルバッファリングを有効(&amp;D)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FoldingCheckBox" xml:space="preserve">
    <value>コードの折りたたみを有効(&amp;F)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FontGroupBox" xml:space="preserve">
    <value>フォント</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FontGroupBox.FileEncodingGroupBox" xml:space="preserve">
    <value>ファイルエンコーディング</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FontGroupBox.FileEncodingLabel" xml:space="preserve">
    <value>エンコーディング(&amp;E)：</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FontSizeLabel" xml:space="preserve">
    <value>サイズ：</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.GeneralOptionsGroupBox" xml:space="preserve">
    <value>エディタ</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.MouseWheelZoomCheckBoxCheckBox" xml:space="preserve">
    <value>マウスホイールでズーム</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.ShowQuickClassBrowserCheckBox" xml:space="preserve">
    <value>クイッククラスブラウザパネルを表示(&amp;Q)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.TextfontLabel" xml:space="preserve">
    <value>テキストフォント：</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.AtRowLabel" xml:space="preserve">
    <value>列(&amp;N)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.BracketMatchingStyle.AfterCaret" xml:space="preserve">
    <value>キャレット後</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.BracketMatchingStyle.BeforeCaret" xml:space="preserve">
    <value>カーソル前</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.CaretCheckBox" xml:space="preserve">
    <value>カーソルの表示</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.EnableAnimationsCheckBox" xml:space="preserve">
    <value>アニメーションを有効化</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.EOLMarkersCheckBox" xml:space="preserve">
    <value>EOLマーカを表示(&amp;E)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.HighlightBracketCheckBox" xml:space="preserve">
    <value>一致するかっこをハイライト(&amp;M)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.HighlightCurrentLineCheckBox" xml:space="preserve">
    <value>現在行をハイライト</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.HighlightSymbolCheckBox" xml:space="preserve">
    <value>ハイライトシンボル</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.HorizontalRulerCheckBox" xml:space="preserve">
    <value>水平ルーラを表示(&amp;H)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.InvalidLinesCheckBox" xml:space="preserve">
    <value>無効な行を表示(&amp;I)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.LineMarkerLabel" xml:space="preserve">
    <value>ラインマーカスタイル(&amp;A)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.LineNumberCheckBox" xml:space="preserve">
    <value>行番号を表示(&amp;L)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.LineViewerStyle.FullRow" xml:space="preserve">
    <value>1行</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.LineViewerStyle.None" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.MarkersGroupBox" xml:space="preserve">
    <value>マーカとルール</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.PanelName" xml:space="preserve">
    <value>マーカとルール</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.RulersGroupBox" xml:space="preserve">
    <value>ルーラー</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.ShowHiddenDefinitionsCheckBox" xml:space="preserve">
    <value>非表示の定義を表示(かっこのみ) (&amp;H)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.SpacesCheckBox" xml:space="preserve">
    <value>スペースを表示(&amp;S)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.TabsCheckBox" xml:space="preserve">
    <value>タブを表示(&amp;T)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.UnderLineErrorsCheckBox" xml:space="preserve">
    <value>エラーに下線を表示(&amp;U)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.VerticalRulerCheckBox" xml:space="preserve">
    <value>行ルーラを表示(&amp;C)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.VB.EnableCasingCheckBox" xml:space="preserve">
    <value>キーワードを自動的に囲みます</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.VB.EnableEndConstructsCheckBox" xml:space="preserve">
    <value>自動的にコンストラクタの終了を挿入</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.VB.FormattingGroupBox" xml:space="preserve">
    <value>フォーマットオプション</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.VB.PanelName" xml:space="preserve">
    <value>VBの詳細なオプション</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditorOptionsText" xml:space="preserve">
    <value>テキストエディタ</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ToolsOptionsText" xml:space="preserve">
    <value>ツール</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.CompileTarget.Exe" xml:space="preserve">
    <value>コンソールアプリケーション</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.CompileTarget.Library" xml:space="preserve">
    <value>ライブラリ</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.CompileTarget.Module" xml:space="preserve">
    <value>モジュール</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.CompileTarget.WinExe" xml:space="preserve">
    <value>Windowsアプリケーション</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.FolderBrowserDescription" xml:space="preserve">
    <value>アセンブリを生成するディレクトリを選択してください。</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.Title" xml:space="preserve">
    <value>ハイライト</value>
  </data>
  <data name="Dialog.Options.TreeViewOptions.DialogName" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="Dialog.Options.TreeViewOptions.SharpDevelopOptionsText" xml:space="preserve">
    <value>SharpDevelopの設定</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings" xml:space="preserve">
    <value>アプリケーション</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.ApplicationIcon" xml:space="preserve">
    <value>アプリケーションアイコン(&amp;C)</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.AssemblyName" xml:space="preserve">
    <value>アセンブリ名(&amp;N)</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.InvalidIconFile" xml:space="preserve">
    <value>{0}はアイコンファイルではありません</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Manifest" xml:space="preserve">
    <value>アプリケーションマニフェスト(&amp;M)</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Manifest.DoNotEmbedManifest" xml:space="preserve">
    <value>マニフェストを埋め込まない</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Manifest.EmbedDefault" xml:space="preserve">
    <value>デフォルトマニフェストを埋め込む</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Manifest.ManifestFiles" xml:space="preserve">
    <value>マニフェストファイル</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.OutputName" xml:space="preserve">
    <value>出力の名前：</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.OutputType" xml:space="preserve">
    <value>出力の型：</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.ProjectFile" xml:space="preserve">
    <value>プロジェクトファイル(&amp;F)</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.ProjectFolder" xml:space="preserve">
    <value>プロジェクトフォルダ</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.ProjectInformation" xml:space="preserve">
    <value>プロジェクト情報</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.RootNamespace" xml:space="preserve">
    <value>ルート名前空間(&amp;R)</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.StartupObject" xml:space="preserve">
    <value>スタートアップオブジェクト(&amp;S)</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Win32Resource" xml:space="preserve">
    <value>Win32リソースファイル(&amp;R)</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.Advanced" xml:space="preserve">
    <value>高度</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.Auto" xml:space="preserve">
    <value>自動</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.BaseIntermediateOutputPath" xml:space="preserve">
    <value>中間出力の基本パス：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.DebugInfo" xml:space="preserve">
    <value>デバッグ情報(&amp;I)</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.DLLBaseAddress" xml:space="preserve">
    <value>DLLベースアドレス：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.ErrorsAndWarnings" xml:space="preserve">
    <value>エラーと警告</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.FileAlignment" xml:space="preserve">
    <value>ファイル配置：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.GenerateSerializationAssembly" xml:space="preserve">
    <value>シリアル化アセンブリの生成：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.IntermediateOutputPath" xml:space="preserve">
    <value>中間出力パス：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.Off" xml:space="preserve">
    <value>オフ</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.On" xml:space="preserve">
    <value>オン</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.Output" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.OutputPath" xml:space="preserve">
    <value>出力パス(&amp;O)：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.RegisterForCOM" xml:space="preserve">
    <value>COM の相互運用機能の登録(&amp;R)</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.SuppressWarnings" xml:space="preserve">
    <value>警告の抑制(&amp;S)</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU" xml:space="preserve">
    <value>ターゲットCPU(&amp;T)：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.Any" xml:space="preserve">
    <value>あらゆるプロセッサ</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.Any32" xml:space="preserve">
    <value>あらゆるプロセッサ(32bit優先)</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.Any64" xml:space="preserve">
    <value>あらゆるプロセッサ(64bit優先)</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.Itanium" xml:space="preserve">
    <value>Intel 64-bit Itaniumプロセッサ</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.x64" xml:space="preserve">
    <value>AMD 64-bitプロセッサ</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.x86" xml:space="preserve">
    <value>32-bit Intel互換プロセッサ</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetFramework" xml:space="preserve">
    <value>ターゲットフレームワーク：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TreatWarningsAsErrors" xml:space="preserve">
    <value>エラーとみなす警告</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TreatWarningsAsErrors.All" xml:space="preserve">
    <value>すべて(&amp;A)</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TreatWarningsAsErrors.None" xml:space="preserve">
    <value>なし(&amp;N)</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TreatWarningsAsErrors.Specific" xml:space="preserve">
    <value>特定の警告(&amp;S)：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.WarningLevel" xml:space="preserve">
    <value>警告レベル(&amp;W)：</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.XmlDocumentationFile" xml:space="preserve">
    <value>XMLドキュメント(&amp;X)：</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildEvents" xml:space="preserve">
    <value>ビルドイベント</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildEvents.PostBuild" xml:space="preserve">
    <value>ビルド後イベントのコマンドライン(&amp;P)：</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildEvents.PreBuild" xml:space="preserve">
    <value>ビルド前イベントのコマンドライン(&amp;P)：</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildEvents.RunPostBuild" xml:space="preserve">
    <value>ビルド後に実行するイベント(&amp;R)</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions" xml:space="preserve">
    <value>コンパイル</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.AllowUnsafeCode" xml:space="preserve">
    <value>アンセーフコードを許可する</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.CheckForOverflow" xml:space="preserve">
    <value>演算のオーバーフローおよびアンダーフローのチェック(&amp;C)</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.ConditionalSymbols" xml:space="preserve">
    <value>条件付きコンパイル シンボル：</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.General" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.NoCorlib" xml:space="preserve">
    <value>mscorlib.dllを参照しない(&amp;M)</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.OptimizeCode" xml:space="preserve">
    <value>最適化コード</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.RemoveOverflowChecks" xml:space="preserve">
    <value>整数オーバーフローのチェックを解除(&amp;C)</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.VBOptionsDefaultValues" xml:space="preserve">
    <value>VBオプションの初期値：</value>
  </data>
  <data name="Dialog.ProjectOptions.CodeFormatting" xml:space="preserve">
    <value>コードフォーマット</value>
  </data>
  <data name="Dialog.ProjectOptions.Configuration" xml:space="preserve">
    <value>構成</value>
  </data>
  <data name="Dialog.ProjectOptions.ConfigurationSpecific" xml:space="preserve">
    <value>構成-詳細</value>
  </data>
  <data name="Dialog.ProjectOptions.ContinueSwitchConfiguration" xml:space="preserve">
    <value>構成の変更を現在の値で保存します。続けますか？</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions" xml:space="preserve">
    <value>デバッグ</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.Arguments" xml:space="preserve">
    <value>コマンドライン引数(&amp;M)</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartAction" xml:space="preserve">
    <value>スタートアクション</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartBrowser" xml:space="preserve">
    <value>ブラウザのスタートURL</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartOptions" xml:space="preserve">
    <value>スタートオプション</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartProgram" xml:space="preserve">
    <value>外部プログラムのスタート(&amp;X)</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartProject" xml:space="preserve">
    <value>スタートプロジェクト(&amp;S)</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.WorkingDir" xml:space="preserve">
    <value>作業ディレクトリ(&amp;W)：</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugSymbolType.Full" xml:space="preserve">
    <value>フルデバッグ情報</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugSymbolType.None" xml:space="preserve">
    <value>デバッグ情報無し</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugSymbolType.PdbOnly" xml:space="preserve">
    <value>pdbファイルのみ</value>
  </data>
  <data name="Dialog.ProjectOptions.NoPanelsInstalledForProject" xml:space="preserve">
    <value>このプロジェクトタイプ用にインストールされたプロジェクトオプションパネルがありません</value>
  </data>
  <data name="Dialog.ProjectOptions.Platform" xml:space="preserve">
    <value>プラットフォーム</value>
  </data>
  <data name="Dialog.ProjectOptions.PlatformSpecific" xml:space="preserve">
    <value>フラットフォーム-詳細</value>
  </data>
  <data name="Dialog.ProjectOptions.PleaseEnterValidNumber" xml:space="preserve">
    <value>正しい数字を入力します</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports" xml:space="preserve">
    <value>インポート</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports.AddImport" xml:space="preserve">
    <value>インポートの追加(&amp;A)</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports.Namespace" xml:space="preserve">
    <value>名前空間(&amp;N)</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports.RemoveImport" xml:space="preserve">
    <value>インポートの削除(&amp;R)</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports.Title" xml:space="preserve">
    <value>プロジェクトワイド インポート</value>
  </data>
  <data name="Dialog.ProjectOptions.Publish" xml:space="preserve">
    <value>発行</value>
  </data>
  <data name="Dialog.ProjectOptions.ReferencePaths" xml:space="preserve">
    <value>参照パス</value>
  </data>
  <data name="Dialog.ProjectOptions.ReferencePaths.AddPath" xml:space="preserve">
    <value>追加パス(&amp;A)</value>
  </data>
  <data name="Dialog.ProjectOptions.RunPostBuildEvent.Always" xml:space="preserve">
    <value>常時</value>
  </data>
  <data name="Dialog.ProjectOptions.RunPostBuildEvent.OnOutputUpdated" xml:space="preserve">
    <value>ビルド時にプロジェクト出力を更新</value>
  </data>
  <data name="Dialog.ProjectOptions.RunPostBuildEvent.OnSuccessfulBuild" xml:space="preserve">
    <value>ビルド成功時</value>
  </data>
  <data name="Dialog.ProjectOptions.SelectFolderTitle" xml:space="preserve">
    <value>フォルダ選択</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing" xml:space="preserve">
    <value>署名</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ChangePassword" xml:space="preserve">
    <value>パスワードの変更(&amp;W)</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ChooseKeyFile" xml:space="preserve">
    <value>厳密な名前のキー ファイルを選択：</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ClickOnce" xml:space="preserve">
    <value>ClickOnce署名</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ClickOnceNotSupported" xml:space="preserve">
    <value>ClickOnce署名が現在サポートされていません</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.ConfirmPassword" xml:space="preserve">
    <value>パスワードの確認(&amp;F)</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.EnterPassword" xml:space="preserve">
    <value>パスワードの入力(&amp;E)</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.KeyName" xml:space="preserve">
    <value>キーファイルの名前(&amp;N)</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.Title" xml:space="preserve">
    <value>厳密な名前のキー ファイルを作成</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.UsePassword" xml:space="preserve">
    <value>キーファイルをパスワードで保護(&amp;P)</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.DelaySignOnly" xml:space="preserve">
    <value>遅延署名のみ</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.DelaySignWarning" xml:space="preserve">
    <value>遅延署名時、プロジェクトは実行、デバッグできません</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.EnterKeyName" xml:space="preserve">
    <value>キーネームを入力しなければいけません</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ErrorCreatingKey" xml:space="preserve">
    <value>キーファイル作成時にエラーが発生しました</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.PasswordsDontMatch" xml:space="preserve">
    <value>入力されたパスワードが一致しません</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.PasswordTooShort" xml:space="preserve">
    <value>パスワードは少なくとも6文字以上にすべきです</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.SignAssembly" xml:space="preserve">
    <value>アセンブリ署名(&amp;A)</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.SNnotFound" xml:space="preserve">
    <value>sn.exeが見つかりません。.NET Framework SDKを確実にコンピュータにインストールします。</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.StrongName" xml:space="preserve">
    <value>厳密な名前の署名</value>
  </data>
  <data name="Dialog.ProjectOptions.StorageLocationHelp" xml:space="preserve">
    <value>個々の構成設定の前の小さいボタン、保存された設定の場所を選べます。
構成-詳細は構成毎(Debug/Relase)別に異なる設定ができます。
プラットフォーム-詳細はプラットフォーム別の設定ができます。
設定をプロジェクトファイルに保存する代わりに.user-fileファイルに保存することができます。すべての開発者はソース管理システムでの衝突を行うことなく異なる設定を使うことができます。</value>
  </data>
  <data name="Dialog.ProjectOptions.StoreInUserFile" xml:space="preserve">
    <value>.user-fileに保存</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.AddInterfaceToClass" xml:space="preserve">
    <value>クラスにインターフェイスを追加</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.GeneratedName" xml:space="preserve">
    <value>生成された名前</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.IncludeComments" xml:space="preserve">
    <value>コメントを含む</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.InterfaceName" xml:space="preserve">
    <value>インターフェイスの名前</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.NewFileName" xml:space="preserve">
    <value>新しいファイルの名前</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.SelectPublicMembers" xml:space="preserve">
    <value>パブリックメンバーを選択</value>
  </data>
  <data name="Dialog.Refactoring.IntroduceMethod.CreateNew" xml:space="preserve">
    <value>新クラスを作成：</value>
  </data>
  <data name="Dialog.Refactoring.IntroduceMethod.Description" xml:space="preserve">
    <value>クラスのソースコードが利用できないため、メソッド直接作成できません。拡張メソッドとして作成できる静的クラスを選択してください。</value>
  </data>
  <data name="Dialog.Refactoring.IntroduceMethod.Title" xml:space="preserve">
    <value>メソッドの挿入</value>
  </data>
  <data name="Dialog.Refactoring.IntroduceMethod.UseExisting" xml:space="preserve">
    <value>既存クラスを使用：</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.BrowserTabPage" xml:space="preserve">
    <value>.NETアセンブリブラウザ</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.DialogName" xml:space="preserve">
    <value>参照を追加</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.GacReferencePanel.ChooseSpecificAssemblyVersion" xml:space="preserve">
    <value>特定のアセンブリのバージョンを選択</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.GacReferencePanel.ReferenceHeader" xml:space="preserve">
    <value>参照名</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.GacReferencePanel.VersionHeader" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.GacTabPage" xml:space="preserve">
    <value>GAC</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.LocationHeader" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ProjectReferencePanel.DirectoryHeader" xml:space="preserve">
    <value>プロジェクトディレクトリ</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ProjectReferencePanel.NameHeader" xml:space="preserve">
    <value>プロジェクト名</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ProjectTabPage" xml:space="preserve">
    <value>プロジェクト</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ReferenceHeader" xml:space="preserve">
    <value>参照名</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ReferencesLabel" xml:space="preserve">
    <value>選択された参照</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.SelectButton" xml:space="preserve">
    <value>選択(&amp;E)</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.TypeHeader" xml:space="preserve">
    <value>型</value>
  </data>
  <data name="Dialog.WizardDialog.FinishButton" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="Dialog.WordCountDialog.CharsText" xml:space="preserve">
    <value>文字数</value>
  </data>
  <data name="Dialog.WordCountDialog.DialogName" xml:space="preserve">
    <value>文字数カウント</value>
  </data>
  <data name="Dialog.WordCountDialog.FileText" xml:space="preserve">
    <value>ファイル名</value>
  </data>
  <data name="Dialog.WordCountDialog.IsNotTextFile" xml:space="preserve">
    <value>現在のファイルはテキストファイルではないため、カウントできません</value>
  </data>
  <data name="Dialog.WordCountDialog.Label1Text" xml:space="preserve">
    <value>対象(&amp;C)</value>
  </data>
  <data name="Dialog.WordCountDialog.LinesText" xml:space="preserve">
    <value>行数</value>
  </data>
  <data name="Dialog.WordCountDialog.MustBeInProtectedModeWarning" xml:space="preserve">
    <value>プロジェクトモードで行う必要があります</value>
  </data>
  <data name="Dialog.WordCountDialog.StartButton" xml:space="preserve">
    <value>開始(&amp;S)</value>
  </data>
  <data name="Dialog.WordCountDialog.TotalText" xml:space="preserve">
    <value>合計</value>
  </data>
  <data name="Dialog.WordCountDialog.WordsText" xml:space="preserve">
    <value>単語数</value>
  </data>
  <data name="Fileutility.CantFindExecutableError" xml:space="preserve">
    <value>あらゆるSDK binフォルダに${Executable} が見つかりません</value>
  </data>
  <data name="Fileutility.CantFindFileError" xml:space="preserve">
    <value>${File}を読み込めませんでした。ファイルが見つかりません。</value>
  </data>
  <data name="FileUtilityService.ErrorWhileLoading" xml:space="preserve">
    <value>ロード時のエラー</value>
  </data>
  <data name="FileUtilityService.ErrorWhileSaving" xml:space="preserve">
    <value>保存時のエラー</value>
  </data>
  <data name="FileUtilityService.FileSizeTooBig" xml:space="preserve">
    <value>ファイルを開くには大きすぎます</value>
  </data>
  <data name="FormsDesigner.DesignErrorPanel.ErrorText" xml:space="preserve">
    <value>デザインの前にソースコードのエラーを全て修正してください</value>
  </data>
  <data name="FormsDesigner.DesignTabPages.DesignTabPage" xml:space="preserve">
    <value>デザイン</value>
  </data>
  <data name="FormsDesigner.DesignTabPages.SourceTabPage" xml:space="preserve">
    <value>ソース</value>
  </data>
  <data name="Global.AbortButtonText" xml:space="preserve">
    <value>アバウト</value>
  </data>
  <data name="Global.AddButtonText" xml:space="preserve">
    <value>追加(&amp;A)</value>
  </data>
  <data name="Global.Advanced" xml:space="preserve">
    <value>高度</value>
  </data>
  <data name="Global.BackButtonText" xml:space="preserve">
    <value>&lt; 戻る</value>
  </data>
  <data name="Global.BrowseButtonText" xml:space="preserve">
    <value>参照(&amp;B)</value>
  </data>
  <data name="Global.BrowseText" xml:space="preserve">
    <value>参照</value>
  </data>
  <data name="Global.CancelButtonText" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Global.ChangeButtonText" xml:space="preserve">
    <value>変更(&amp;C)</value>
  </data>
  <data name="Global.ChooseLocationButtonText" xml:space="preserve">
    <value>保存先を選択</value>
  </data>
  <data name="Global.CloseButtonText" xml:space="preserve">
    <value>閉じる(&amp;C)</value>
  </data>
  <data name="Global.CreateButtonText" xml:space="preserve">
    <value>新規</value>
  </data>
  <data name="Global.Delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Global.DeleteButtonText" xml:space="preserve">
    <value>削除(&amp;D)</value>
  </data>
  <data name="Global.DeselectAllButtonText" xml:space="preserve">
    <value>すべて未選択</value>
  </data>
  <data name="Global.EditButtonText" xml:space="preserve">
    <value>編集(&amp;E)</value>
  </data>
  <data name="Global.ErrorText" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="Global.FileAlreadyExists" xml:space="preserve">
    <value>{0}'というファイルはすでに存在します</value>
  </data>
  <data name="Global.FileName" xml:space="preserve">
    <value>ファイル名</value>
  </data>
  <data name="Global.FinishButtonText" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="Global.FinishedCaptionText" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="Global.Folder" xml:space="preserve">
    <value>フォルダ</value>
  </data>
  <data name="Global.FontStyle" xml:space="preserve">
    <value>フォントスタイル</value>
  </data>
  <data name="Global.FontStyle.CustomColor" xml:space="preserve">
    <value>カスタム</value>
  </data>
  <data name="Global.FontStyle.SelectFont" xml:space="preserve">
    <value>フォント選択</value>
  </data>
  <data name="Global.FontStyle.Underline" xml:space="preserve">
    <value>下線</value>
  </data>
  <data name="Global.HelpButtonText" xml:space="preserve">
    <value>ヘルプ(&amp;H)</value>
  </data>
  <data name="Global.ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Global.IgnoreButtonText" xml:space="preserve">
    <value>無視</value>
  </data>
  <data name="Global.LargeIconToolTip" xml:space="preserve">
    <value>大きいアイコン</value>
  </data>
  <data name="Global.Location.allopenfiles" xml:space="preserve">
    <value>すべてのオープン済みファイル</value>
  </data>
  <data name="Global.Location.currentfile" xml:space="preserve">
    <value>現在のファイル</value>
  </data>
  <data name="Global.Location.directories" xml:space="preserve">
    <value>ディレクトリ</value>
  </data>
  <data name="Global.Location.wholeproject" xml:space="preserve">
    <value>すべてのプロジェクト</value>
  </data>
  <data name="Global.MoveDown" xml:space="preserve">
    <value>下へ移動(&amp;D)</value>
  </data>
  <data name="Global.MoveUp" xml:space="preserve">
    <value>上に移動(&amp;U)</value>
  </data>
  <data name="Global.NA" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="Global.Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="Global.NextButtonText" xml:space="preserve">
    <value>次へ &gt;</value>
  </data>
  <data name="Global.No" xml:space="preserve">
    <value>いいえ</value>
  </data>
  <data name="Global.OKButtonText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Global.OpenButtonText" xml:space="preserve">
    <value>開く(&amp;O)</value>
  </data>
  <data name="Global.OptionsLabelText" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="Global.Path" xml:space="preserve">
    <value>パス</value>
  </data>
  <data name="Global.PleaseWait" xml:space="preserve">
    <value>お待ちください...</value>
  </data>
  <data name="Global.Preview" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="Global.QuestionText" xml:space="preserve">
    <value>質問</value>
  </data>
  <data name="Global.ReadOnly" xml:space="preserve">
    <value>読み取り専用</value>
  </data>
  <data name="Global.Refresh" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="Global.RemoveButtonText" xml:space="preserve">
    <value>取り除く(&amp;R)</value>
  </data>
  <data name="Global.RenameButtonText" xml:space="preserve">
    <value>名前の変更(&amp;N)</value>
  </data>
  <data name="Global.ReplaceButtonText" xml:space="preserve">
    <value>置換</value>
  </data>
  <data name="Global.RetryButtonText" xml:space="preserve">
    <value>再試行</value>
  </data>
  <data name="Global.SelectAllButtonText" xml:space="preserve">
    <value>全てを選択</value>
  </data>
  <data name="Global.SmallIconToolTip" xml:space="preserve">
    <value>小さいアイコン</value>
  </data>
  <data name="Global.StartButtonText" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="Global.TextLine" xml:space="preserve">
    <value>行</value>
  </data>
  <data name="Global.UpdateButtonText" xml:space="preserve">
    <value>更新(&amp;U)</value>
  </data>
  <data name="Global.WarningText" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="Global.Yes" xml:space="preserve">
    <value>はい</value>
  </data>
  <data name="Global.YesToAll" xml:space="preserve">
    <value>すべてはい</value>
  </data>
  <data name="Gui.ProjectBrowser.FileInUseError" xml:space="preserve">
    <value>ファイルまたはディレクトリ名が既に使われています. 異なる名前を選択してください</value>
  </data>
  <data name="Gui.ProjectBrowser.IllegalCharactersInFileNameError" xml:space="preserve">
    <value>ファイル名に無効な文字が含まれています. 異なる名前を選択してください。</value>
  </data>
  <data name="Gui.ProjectBrowser.Open" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenFolderInExplorer" xml:space="preserve">
    <value>エクスプローラでフォルダを開く</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith" xml:space="preserve">
    <value>次で開く...</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.AddProgram.DialogTitle" xml:space="preserve">
    <value>プログラムを追加</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.AddProgram.DisplayName" xml:space="preserve">
    <value>名前を表示(&amp;D)：</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.AddProgram.Program" xml:space="preserve">
    <value>プログラム(&amp;P)：</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.DefaultWindowsApplication" xml:space="preserve">
    <value>このファイル用のWindowsアプリケーションで開く</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.IconEditor" xml:space="preserve">
    <value>アイコンエディタ</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.ResourceEditor" xml:space="preserve">
    <value>リソースエディタ</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.TextEditor" xml:space="preserve">
    <value>テキストエディタ</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.TextEditorWithEncoding" xml:space="preserve">
    <value>テキストエディタ(エンコーディングを選択)</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.WebBrowser" xml:space="preserve">
    <value>組み込みWebブラウザ</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.XmlEditor" xml:space="preserve">
    <value>XMLエディタ</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.ChooseProgram" xml:space="preserve">
    <value>このファイルを開くプログラムを選択：</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Default" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.DialogTitle" xml:space="preserve">
    <value>次で開く</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.SetAsDefault" xml:space="preserve">
    <value>デフォルトで保存</value>
  </data>
  <data name="Gui.ProjectBrowser.ShowAllFiles" xml:space="preserve">
    <value>すべてのファイルを表示</value>
  </data>
  <data name="Hornung.ResourceToolkit.CodeCompletion.AddNewDescription" xml:space="preserve">
    <value>新しい文字列リソースを{0}を追加</value>
  </data>
  <data name="Hornung.ResourceToolkit.CodeCompletion.AddNewEntry" xml:space="preserve">
    <value>&lt;新しく追加&gt;</value>
  </data>
  <data name="Hornung.ResourceToolkit.DeleteAllSelectedResourceKeysQuestion" xml:space="preserve">
    <value>本当にリソースファイルから選択した全 ${Count} リソースキーと依存するローカライズリソースファイルを完全に削除しますか？</value>
  </data>
  <data name="Hornung.ResourceToolkit.DeleteSingleResourceKeyQuestion" xml:space="preserve">
    <value>本当にリソースファイル "${FileName}" からリソースキー "${Key}" を、依存するローカライズリソースを完全に削除しますか？</value>
  </data>
  <data name="Hornung.ResourceToolkit.EditStringResourceDialog.Caption" xml:space="preserve">
    <value>文字列リソースを編集</value>
  </data>
  <data name="Hornung.ResourceToolkit.EditStringResourceDialog.DuplicateKey" xml:space="preserve">
    <value>リソースキーはすでに存在します</value>
  </data>
  <data name="Hornung.ResourceToolkit.EditStringResourceDialog.KeyIsEmpty" xml:space="preserve">
    <value>空のリソースキーは許可されていません！</value>
  </data>
  <data name="Hornung.ResourceToolkit.ErrorProcessingResourceFile" xml:space="preserve">
    <value>リソースファイル '{0}' の処理中にエラーが発生しました</value>
  </data>
  <data name="Hornung.ResourceToolkit.FindMissingResourceKeys" xml:space="preserve">
    <value>足りないリソースキーを探す</value>
  </data>
  <data name="Hornung.ResourceToolkit.FindUnusedResourceKeys" xml:space="preserve">
    <value>使われていないリソースキーを探す</value>
  </data>
  <data name="Hornung.ResourceToolkit.Key" xml:space="preserve">
    <value>キー</value>
  </data>
  <data name="Hornung.ResourceToolkit.KeyLabel" xml:space="preserve">
    <value>リソースキー：</value>
  </data>
  <data name="Hornung.ResourceToolkit.KeyNotFoundWarning" xml:space="preserve">
    <value>ファイル{1}にリソースキー "{0}"が見つかりません</value>
  </data>
  <data name="Hornung.ResourceToolkit.ReferencesToMissingKeys" xml:space="preserve">
    <value>存在しないリソースキーへの参照</value>
  </data>
  <data name="Hornung.ResourceToolkit.ReferencesToResource" xml:space="preserve">
    <value>${ResourceKey}(${ResourceFileName}内) への参照</value>
  </data>
  <data name="Hornung.ResourceToolkit.RenameKeyDefinitionNotFoundWarning" xml:space="preserve">
    <value>リソースキーの定義が見つからず、名前を変更できません</value>
  </data>
  <data name="Hornung.ResourceToolkit.RenameResourceText" xml:space="preserve">
    <value>新しいリソースキーの名前を入力</value>
  </data>
  <data name="Hornung.ResourceToolkit.ResourceTypeNotSupported" xml:space="preserve">
    <value>選択されたリソースは文字列でないため編集できません</value>
  </data>
  <data name="Hornung.ResourceToolkit.TextEditorContextMenu.AddResource" xml:space="preserve">
    <value>このリソースを追加</value>
  </data>
  <data name="Hornung.ResourceToolkit.TextEditorContextMenu.EditResource" xml:space="preserve">
    <value>リソースを編集</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolsMenuLabel" xml:space="preserve">
    <value>リソースツールキット</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolTips.KeyNotFound" xml:space="preserve">
    <value>&lt;キーがみつかりません&gt;</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolTips.PlaceMessage" xml:space="preserve">
    <value>{0}の中のリソース：</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolTips.TypeMessage" xml:space="preserve">
    <value>型 {0} のオブジェクト：</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolTips.UnknownKey" xml:space="preserve">
    <value>&lt;不明&gt;</value>
  </data>
  <data name="Hornung.ResourceToolkit.UnusedResourceKeys.HideICSharpCodeCoreHostResourcesTitle" xml:space="preserve">
    <value>ICSharpCode.Coreホストリソースを隠す</value>
  </data>
  <data name="Hornung.ResourceToolkit.UnusedResourceKeys.HideICSharpCodeCoreHostResourcesTooltip" xml:space="preserve">
    <value>選択時、ICSharpCode.Coreアプリケーションホストを含むリソースファイルを含むリソースキーはリストされません</value>
  </data>
  <data name="Hornung.ResourceToolkit.UnusedResourceKeys.NotFound" xml:space="preserve">
    <value>利用されないリソースキーは全ソリューションにて見つかりません。</value>
  </data>
  <data name="Hornung.ResourceToolkit.UnusedResourceKeys.Title" xml:space="preserve">
    <value>未使用リソースキー</value>
  </data>
  <data name="Hornung.ResourceToolkit.Value" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="Hornung.ResourceToolkit.ValueLabel" xml:space="preserve">
    <value>リソース値：</value>
  </data>
  <data name="ICSharpCode.AvalonEdit.AddIn.SharpDevelopCompletionWindow.EmptyText" xml:space="preserve">
    <value>全ての名前空間のアイテムを表示するにはCtrl+Spaceを押してください。</value>
  </data>
  <data name="ICSharpCode.BooInterpreter" xml:space="preserve">
    <value>Booインタープリター</value>
  </data>
  <data name="ICSharpCode.Build.CannotFindFxCop" xml:space="preserve">
    <value>SharpDevelopはFxCopを見つけられません。FxCopをインストールしたディレクトリをSharpDevelopオプションにて選択してください</value>
  </data>
  <data name="ICSharpCode.Build.CannotReadFxCopLogFile" xml:space="preserve">
    <value>FxCopログファイルを読み込めません：</value>
  </data>
  <data name="ICSharpCode.Build.MonoIsNotInstalled" xml:space="preserve">
    <value>Monoがインストールされていません</value>
  </data>
  <data name="ICSharpCode.Build.RunningCodeAnalysis" xml:space="preserve">
    <value>コード分析を実行中です...</value>
  </data>
  <data name="ICSharpCode.Build.UnknownTargetMonoFrameworkVersion" xml:space="preserve">
    <value>対象Monoフレームワークのバージョンが不明：</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis" xml:space="preserve">
    <value>コード分析</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.CheckProjectWithFxCop" xml:space="preserve">
    <value>プロジェクトをFxCopでチェック</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.CheckWithFxCop" xml:space="preserve">
    <value>FxCopでチェック</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.DirectoryDoesNotContainFxCop" xml:space="preserve">
    <value>選択されたディレクトリが完全なFxCopインストールを含んでいません</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.FindFxCopPath" xml:space="preserve">
    <value>FxCopのパスを選択</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.FxCopFoundInPath" xml:space="preserve">
    <value>FxCopが以下のディレクトリに見つかりました：</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.FxCopNotFound" xml:space="preserve">
    <value>FxCopが見つかりません。FxCopをインストールし、場所をSharpDevelopに伝えるため'FxCopのパスを選択'をクリックしてください。</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.FxCopPath" xml:space="preserve">
    <value>FxCopパス</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.AddRemoveRuleAssembly" xml:space="preserve">
    <value>ルールアセンブリの追加/削除</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.CannotFindFxCop" xml:space="preserve">
    <value>FxCopを見つけられません - 確実にFxCopをインストールしてください</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.ChooseRuleAssemblyDirectory" xml:space="preserve">
    <value>ルールアセンブリが含まれるディレクトを選択</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.Enable" xml:space="preserve">
    <value>コード分析を有効(CODE_ANALYSIS定数の定義) (&amp;E)</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.LoadingRules" xml:space="preserve">
    <value>利用可能なルールをロード中...</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.RunOnBuild" xml:space="preserve">
    <value>コンパイル時のコード分析を実行(CODE_ANALYSIS定数の定義) (&amp;R)</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.SpecifyFxCopPath" xml:space="preserve">
    <value>SharpDevelopのオプションにてFxCopのパスを定義できます</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.WarningErrorMixed" xml:space="preserve">
    <value>Mixed</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.WarningOrError" xml:space="preserve">
    <value>警告またはエラー</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.Rule" xml:space="preserve">
    <value>ルール</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.RunningFxCopOn" xml:space="preserve">
    <value>次でFxCopを実行</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.SuppressMessage" xml:space="preserve">
    <value>メッセージの抑制</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.CodeCovered" xml:space="preserve">
    <value>カバーされたコード</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.CodeNotCovered" xml:space="preserve">
    <value>カバーされていないコード</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.CodePartCovered" xml:space="preserve">
    <value>部分的にカバーされたコード</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.Column" xml:space="preserve">
    <value>カラム</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.Content" xml:space="preserve">
    <value>内容</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.DisplayOptions" xml:space="preserve">
    <value>表示オプション</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.EndColumn" xml:space="preserve">
    <value>終了カラム</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.EndLine" xml:space="preserve">
    <value>終了行</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.NoCodeCoverageResultsGenerated" xml:space="preserve">
    <value>コードカバレッジの結果ファイルが生成しません：</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.CodeCoverageColoursGroupBoxText" xml:space="preserve">
    <value>コードカバレッジの色</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.DisplayItemsLabel" xml:space="preserve">
    <value>表示項目(&amp;D)：</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.ItemBackgroundLabel" xml:space="preserve">
    <value>項目の背景(&amp;K)</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.ItemForegroundLabel" xml:space="preserve">
    <value>項目の前景(&amp;R)</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.SampleText" xml:space="preserve">
    <value>AaBbCcXxYyZz</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ProjectOptionsPanel.ExcludeListLabel" xml:space="preserve">
    <value>除外</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ProjectOptionsPanel.IncludeListLabel" xml:space="preserve">
    <value>含む</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.RunningCodeCoverage" xml:space="preserve">
    <value>コードカバレッジ実行中...</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ShowCoverage" xml:space="preserve">
    <value>コードカバレッジを表示(&amp;V)</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ShowSourceCode" xml:space="preserve">
    <value>ソースコードを表示</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ShowVisitCount" xml:space="preserve">
    <value>訪問カウントを表示</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ToggleCodeCoverage" xml:space="preserve">
    <value>コードカバレッジを切り替える</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.VisitCount" xml:space="preserve">
    <value>訪問カウント</value>
  </data>
  <data name="ICSharpCode.Core.Services.ErrorDialogs.DescriptionLabel" xml:space="preserve">
    <value>説明</value>
  </data>
  <data name="ICSharpCode.Core.Services.ErrorDialogs.ExceptionGotDescription" xml:space="preserve">
    <value>例外発生</value>
  </data>
  <data name="ICSharpCode.Core.Services.ErrorDialogs.ShowExceptionButton" xml:space="preserve">
    <value>例外を表示</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.AdditionalOptions" xml:space="preserve">
    <value>追加オプション</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker" xml:space="preserve">
    <value>リンカー</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.AdditionalLibs" xml:space="preserve">
    <value>追加ファイルをリンク</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.AddModule" xml:space="preserve">
    <value>特定の.NETモジュールをリンク</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.GenerateDebugInfo" xml:space="preserve">
    <value>デバッグ情報を生成</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.Library" xml:space="preserve">
    <value>ライブラリファイルの場所</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.ManagedResourceFile" xml:space="preserve">
    <value>.NETリソースファイルの埋込み</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor" xml:space="preserve">
    <value>プリプロセッサ</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor.Definitions" xml:space="preserve">
    <value>以下のプリプロセッサのシンボルを定義</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor.Includes" xml:space="preserve">
    <value>ヘッダファイルの場所</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor.UndefineAll" xml:space="preserve">
    <value>定義されたプリプロセッサのシンボルを未定義化</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor.Undefinitions" xml:space="preserve">
    <value>以下のプリプロセッサのシンボルを未定義化</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.SymbolLabel" xml:space="preserve">
    <value>シンボル</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.BinaryResourceFilesFileAssozisation" xml:space="preserve">
    <value>.NETリソースファイル(バイナリ)</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.CSharpSourceFileAssozisation" xml:space="preserve">
    <value>C#ソースファイル</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.JavaSourceFileAssozisation" xml:space="preserve">
    <value>Javaソースファイル</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.Project" xml:space="preserve">
    <value>プロジェクト</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.ResXResourceFilesFileAssozisation" xml:space="preserve">
    <value>.NETリソースファイル</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.SolutionFileAssozisation" xml:space="preserve">
    <value>SharpDevelopソリューション</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.VBNetSourceFileAssozisation" xml:space="preserve">
    <value>VB.NETソースファイル</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.XmlFileAssozisation" xml:space="preserve">
    <value>XMLドキュメント</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.NAntExeNotFoundMessage" xml:space="preserve">
    <value>NAnt '{0}' を発見できません

SharpDevelopのオプションでNAntの実行ファイルの場所を設定してください</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.NAntStoppedMessage" xml:space="preserve">
    <value>NAntビルドが停止しました</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.NoBuildFileErrorText" xml:space="preserve">
    <value>プロジェクトは.buildファイルを含んでいません</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.RunningNAntMessage" xml:space="preserve">
    <value>NAntを実行中</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.TerminateNAntQuestion" xml:space="preserve">
    <value>NAntプロセスを中断します。よろしいですか？</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.CreateBuildFileMenuLabel" xml:space="preserve">
    <value>ビルドファイルの作成(&amp;B)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.GotoDefinitionMenuLabel" xml:space="preserve">
    <value>定義へ移動(&amp;G)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.GotoErrorMenuLabel" xml:space="preserve">
    <value>エラーへ移動(&amp;G)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.ArgumentsLabel" xml:space="preserve">
    <value>引数(&amp;A)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.BuildFileGenerationGroupBoxName" xml:space="preserve">
    <value>ファイル生成をビルド</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.CommandLabel" xml:space="preserve">
    <value>コマンド(&amp;C)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.DebugLabel" xml:space="preserve">
    <value>デバッグ(&amp;D)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.NAntConfigGroupBoxName" xml:space="preserve">
    <value>NAnt設定</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.NAntVersionLabel" xml:space="preserve">
    <value>NAntバージョン(&amp;V)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.QuietLabel" xml:space="preserve">
    <value>終了(&amp;Q)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.ShowLogoLabel" xml:space="preserve">
    <value>ロゴを表示(&amp;L)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.VerboseLabel" xml:space="preserve">
    <value>詳細(&amp;B)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntPadContent.NAntPropertiesToolTip" xml:space="preserve">
    <value>NAntプロパティを入力</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntPadContent.RefreshCommandBarButtonText" xml:space="preserve">
    <value>ビルドファイルをリロード</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntPadContent.RunCommandBarButtonText" xml:space="preserve">
    <value>選択されたターゲットを実行</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntPadContent.StopCommandBarButtonText" xml:space="preserve">
    <value>現在のビルドを停止</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.ProcessRunner.NoProcessRunningErrorText" xml:space="preserve">
    <value>実行中のプロセスはありません</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.RunCleanTargetMenuLabel" xml:space="preserve">
    <value>クリーンターゲットを実行(&amp;C)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.RunDefaultTargetMenuLabel" xml:space="preserve">
    <value>デフォルトターゲットを実行(&amp;T)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.RunTargetMenuLabel" xml:space="preserve">
    <value>ターゲットを実行(&amp;T)</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.StopNAntMenuLabel" xml:space="preserve">
    <value>NAntを停止(&amp;S)</value>
  </data>
  <data name="ICSharpCode.NoStartupProject" xml:space="preserve">
    <value>デバッグするすアートアッププロジェクトが存在しません。</value>
  </data>
  <data name="ICSharpCode.NUnitPad.NUnitPadContent.PadName" xml:space="preserve">
    <value>ユニットテスト</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.AllLanguages" xml:space="preserve">
    <value>すべて</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.DialogName" xml:space="preserve">
    <value>PInvoke署名を挿入</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.FindButtonText" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.FunctionNameLabel" xml:space="preserve">
    <value>機能：</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.InsertButtonText" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.LanguageLabel" xml:space="preserve">
    <value>言語：</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.ModuleNameLabel" xml:space="preserve">
    <value>モジュール：</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.MoreInfoLinkLabel" xml:space="preserve">
    <value>詳細情報</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.NoSignatureFoundForLanguage" xml:space="preserve">
    <value>言語 '{0}' の書名が見つかりません</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.NoSignaturesFound" xml:space="preserve">
    <value>署名が見つかりません</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesMenuLabel" xml:space="preserve">
    <value>PInvoke署名を挿入...</value>
  </data>
  <data name="ICSharpCode.PythonBinding.ConvertCSharpProjectToPythonProject" xml:space="preserve">
    <value>C#からPython</value>
  </data>
  <data name="ICSharpCode.PythonBinding.ConvertVBNetProjectToPythonProject" xml:space="preserve">
    <value>VB.NETからPython</value>
  </data>
  <data name="ICSharpCode.PythonBinding.PythonConsole" xml:space="preserve">
    <value>Pythonコンソール</value>
  </data>
  <data name="ICSharpCode.PythonBinding.PythonFiles" xml:space="preserve">
    <value>Pythonファイル</value>
  </data>
  <data name="ICSharpCode.PythonBinding.PythonProjectFiles" xml:space="preserve">
    <value>Pythonプロジェクトファイル</value>
  </data>
  <data name="ICSharpCode.PythonBinding.SendLineToPythonConsole" xml:space="preserve">
    <value>行をPythonコンソールに送信</value>
  </data>
  <data name="ICSharpCode.PythonBinding.SendSelectedTextToPythonConsole" xml:space="preserve">
    <value>Pythonコンソールに送信</value>
  </data>
  <data name="ICSharpCode.PythonBinding.UnknownTypeName" xml:space="preserve">
    <value>{0}'という型は見つかりません。アセンブリ参照が不足していませんか？</value>
  </data>
  <data name="ICSharpCode.Refactoring.NoClassOrOverridableSymbolUnderCursorError" xml:space="preserve">
    <value>選択した要素はオーバーライド可能なクラスやメンバではありません。そのため派生シンボルを表示できません。</value>
  </data>
  <data name="ICSharpCode.Refactoring.NoClassUnderCursorError" xml:space="preserve">
    <value>カーソル位置の型定義 が見つかりませんでした</value>
  </data>
  <data name="ICSharpCode.Refactoring.NoClassOrMemberUnderCursorError" xml:space="preserve">
    <value>カーソル位置の型定義またはメンバーが見つかりませんでした。</value>
  </data>
  <data name="ICSharpCode.RubyBinding.SendLineToRubyConsole" xml:space="preserve">
    <value>行をRubyコンソールに送信</value>
  </data>
  <data name="ICSharpCode.RubyBinding.SendSelectedTextToRubyConsole" xml:space="preserve">
    <value>Rubyコンソールに送信</value>
  </data>
  <data name="ICSharpCode.Services.FileUtilityService.CantLoadFileStandardText" xml:space="preserve">
    <value>${Path}以下にある${FileNameWithoutPath}を読み込むことができませんでした. そのファイルが存在するか、または適切な権限があるか、確認してください。</value>
  </data>
  <data name="ICSharpCode.Services.FileUtilityService.CantSaveFileStandardText" xml:space="preserve">
    <value>${Path}以下に${FileNameWithoutPath}として保存することができませんでした. 別のファイル名にするか、ディレクトリの存在を確認しパスとファイルに書き込み権限があるか確認してください. (書き込み禁止に関する問題かも？)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.BrowserDisplayBinding.Browser" xml:space="preserve">
    <value>参照</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.CharpConvertProjectToVB" xml:space="preserve">
    <value>C#からVB.NETへ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.DebugItem" xml:space="preserve">
    <value>デバッグレイアウト</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.DefaultItem" xml:space="preserve">
    <value>デフォルトレイアウト</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.EditItem" xml:space="preserve">
    <value>&lt;編集&gt;</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.EditLayouts.AddLayout" xml:space="preserve">
    <value>レイアウト追加</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.EditLayouts.Label" xml:space="preserve">
    <value>ユーザ定義レイアウトのリストを編集</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.EditLayouts.Title" xml:space="preserve">
    <value>レイアウト編集</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.PlainItem" xml:space="preserve">
    <value>標準レイアウト</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.ResetToDefaultItem" xml:space="preserve">
    <value>&lt;デフォルトにリセット&gt;</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.ResetToDefaultsQuestion" xml:space="preserve">
    <value>本当にレイアウト設定をリセットしてかまいませんか？
注意：これは自身のカスタムレイアウトには影響ありません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert" xml:space="preserve">
    <value>変換</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ConversionComplete" xml:space="preserve">
    <value>変換完了</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ConversionResults" xml:space="preserve">
    <value>変換結果</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ConverterErrorCount" xml:space="preserve">
    <value>${FileName} 変換 ${ErrorCount} エラー：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.CorrectSourceCodeErrors" xml:space="preserve">
    <value>ソースコードのエラーを最初に修正してください(正しいコードのみ変換)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.IsNotConverted" xml:space="preserve">
    <value>${FileName} は変換されません：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ParserErrorCount" xml:space="preserve">
    <value>パーサーは${ErrorCount} 個のエラーを発見しました</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ProjectConverter" xml:space="preserve">
    <value>SharpDevelopプロジェクトコンバーター</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.SourceDirectory" xml:space="preserve">
    <value>ソースディレクトリ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.TargetAlreadyExists" xml:space="preserve">
    <value>{0} はすでに存在します。変換できません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.TargetDirectory" xml:space="preserve">
    <value>対象ディレクトリ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ConvertCSharpProjectToBoo" xml:space="preserve">
    <value>C#からBoo</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ConvertVBNetProjectToBoo" xml:space="preserve">
    <value>VB.NETからBoo</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.OpenCombine.InvalidProjectOrCombine" xml:space="preserve">
    <value>'${FileName}'ファイルを開けません。正しいソリューションまたはプロジェクトではありません。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.OpenCombine.SolutionDoesNotContainProject" xml:space="preserve">
    <value>SharpDevelopは'${SolutionName}'をロードしましたが、'${ProjectName}'が含まれていません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.OpenCombine.SolutionDoesNotContainProject.AddProjectToSolution" xml:space="preserve">
    <value>${ProjectName}' を '${SolutionName}' に追加</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.OpenCombine.SolutionDoesNotContainProject.CreateNewSolution" xml:space="preserve">
    <value>${ProjectName}' の新しいソリューションを作成</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Print.CreatePrintDocumentError" xml:space="preserve">
    <value>PrintDocumentを作成できませんでした</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.AddFilesToProject.FileIsReadOnly" xml:space="preserve">
    <value>この場所に、この名前の書き込み禁止ファイルがすでに存在します。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.NoBackendForProjectType" xml:space="preserve">
    <value>インストールされたプロジェクトタイプのバックエンドがありません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.ProjectFileNotFound" xml:space="preserve">
    <value>プロジェクトファイルが見つかりません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.ReferencesNodeText" xml:space="preserve">
    <value>参照</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.RefreshWebReference.ReadServiceDescriptionError" xml:space="preserve">
    <value>Webサービスを読めません。URL '{0}'</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.SolutionItemsNodeText" xml:space="preserve">
    <value>ソリューション項目</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.SolutionNodeText" xml:space="preserve">
    <value>ソリューション</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ReloadFile.FileDeletedMessage" xml:space="preserve">
    <value>ファイルがみつかりません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ReloadFile.ReloadFileQuestion" xml:space="preserve">
    <value>ファイルを再読み込みしますか？
(再読み込みするとすべての変更が失われます)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.RunCompile.LanguageBindingCantCompileFileError" xml:space="preserve">
    <value>言語バインディング ${LanguageBinding} は${FileName}をコンパイルできません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.SaveFile.FileSaved" xml:space="preserve">
    <value>ファイルを保存しました</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.SaveFile.InvalidFileNameError" xml:space="preserve">
    <value>ファイル名'${FileName}'は正しくありません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.SaveFileAs.FileSavedCaption" xml:space="preserve">
    <value>ファイルを保存しました</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.TabStrip.NavigateToFileInProjectBrowser" xml:space="preserve">
    <value>プロジェクトブラウザー内でファイルを移動</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.VBConvertProjectToCSharp" xml:space="preserve">
    <value>VB.NETからC#へ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.CodeCompletionData.OverloadsCounter" xml:space="preserve">
    <value>(+${NumOverloads} オーバーロード)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.InsightWindow.NumberOfText" xml:space="preserve">
    <value>${CurrentMethodNumber} / 全 ${NumberOfTotalMethods}</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.TextEditorDisplayBinding.FileAlteredMessage" xml:space="preserve">
    <value>ファイル ${File} が外部で変更されたようです。再読み込みしますか？</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.IncrementalSearch.ForwardsSearchStatusBarMessage" xml:space="preserve">
    <value>インクリメンタルサーチ：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.IncrementalSearch.NotFoundStatusBarMessage" xml:space="preserve">
    <value>(見つかりません)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.IncrementalSearch.PassedEndOfDocumentStatusBarMessage" xml:space="preserve">
    <value>(ドキュメントの最後まで検索しました)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.IncrementalSearch.ReverseSearchStatusBarMessage" xml:space="preserve">
    <value>逆インクリメンタルサーチ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Dom.AssemblyInvalid" xml:space="preserve">
    <value>{0} は正しい .NET アセンブリではありません。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Dom.AssemblyNotAccessible" xml:space="preserve">
    <value>{0} はアクセスできないか、すでに存在しません。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ErrorLoadingCodeCompletionInformation" xml:space="preserve">
    <value>${Assembly}のコード補完情報を${Filename}からロードした時のエラー：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.Continue" xml:space="preserve">
    <value>続行</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.CopyToClipboard" xml:space="preserve">
    <value>クリップボードへのコピーエラー</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.ExitSharpDevelop" xml:space="preserve">
    <value>SharpDevelopを終了</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.HelpText1" xml:space="preserve">
    <value>SharpDevelopにてハンドルされていない例外が発生しました。これは予期されておらず、SharpDevelopの改善のためにエラー内容をSharpDevelopチームにレポートしていただけると嬉しいです。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.HelpText2" xml:space="preserve">
    <value>効果的なエラーレポートの書き方：ユーザによってエラーをレポートできるWebベースのフォーラムを用意しています。
チームメンバーによる質問を減らすために、またエラーメッセージを提供するために、私たちにバグを再現させる詳細な手順を可能な限り提供してください。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.QuitWarning" xml:space="preserve">
    <value>本当にSharpDevelopを終了しますか？保存していない変更は失われます！</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.ReportError" xml:space="preserve">
    <value>SharpDevelopチームへのエラーレポート</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.ThankYouMsg" xml:space="preserve">
    <value>ご協力ありがとうございます。SharpDevelopは皆様のおかげでより良くなっています。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.Title" xml:space="preserve">
    <value>ハンドルされていない例外が発生しました</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.CantDeserializeFormError" xml:space="preserve">
    <value>フォームの逆シリアル化はできません。考えられる理由：InitializeComponentメソッドが手動で変更されました</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.DesignPanel.CantCreateRootDesignerError" xml:space="preserve">
    <value>${RootComponent}'.コンポーネントのルートデザイナーを作成できません。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.DesignPanel.RootDesignerNotWindowsFormsError" xml:space="preserve">
    <value>ルートデザイナーはWindowsフォームビュー技術をサポートしていません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.ErrorLoadingDesigner" xml:space="preserve">
    <value>デザイナーローディングエラー：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.Components.Assembly" xml:space="preserve">
    <value>アセンブリ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.Components.Location" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.Components.Namespace" xml:space="preserve">
    <value>名前空間</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.ComponentsToAddLabel" xml:space="preserve">
    <value>追加するコンポーネント(&amp;O)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.CustomTabPage" xml:space="preserve">
    <value>カスタム</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.DialogName" xml:space="preserve">
    <value>コンポーネントを追加</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.EnterValidFilename" xml:space="preserve">
    <value>正しいファイル名を入力してください</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.FileIsNotAssembly" xml:space="preserve">
    <value>正しい.NETアセンブリの名前を入力してください</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.GAC.Version" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.GACTabPage" xml:space="preserve">
    <value>GAC</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.NoComponentsFound" xml:space="preserve">
    <value>アセンブリ ${Name} はコンポーネントが全く含まれていません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponentsFileNameLabel" xml:space="preserve">
    <value>ファイル名(&amp;F)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.AddComponentsButton" xml:space="preserve">
    <value>コンポーネントを追加(&amp;A)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.Assembly" xml:space="preserve">
    <value>アセンブリ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.Categories" xml:space="preserve">
    <value>カテゴリ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.DialogName" xml:space="preserve">
    <value>サイドバーを設定</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.Namespace" xml:space="preserve">
    <value>名前空間</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.NewButton" xml:space="preserve">
    <value>新規(&amp;N)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSideBarDialog.RemoveCategoryQuestion" xml:space="preserve">
    <value>このカテゴリを本当に削除しますか？</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.RemoveComponentsButton" xml:space="preserve">
    <value>コンポーネントを削除(&amp;M)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSideBarDialog.RemoveComponentsQuestion" xml:space="preserve">
    <value>選択したコンポーネントをカテゴリから本当に削除しますか？</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.RenameButton" xml:space="preserve">
    <value>名前を変更(&amp;E)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.ImportLocalResourceButton" xml:space="preserve">
    <value>インポート...</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.LocalResourceButton" xml:space="preserve">
    <value>ローカルリソース</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.NoResourceButton" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.Preview" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.ProjectResourceButton" xml:space="preserve">
    <value>プロジェクトリソース</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.Title" xml:space="preserve">
    <value>選択リソース</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GeneralOptionsPanel.GeneratedCodeGroupBox" xml:space="preserve">
    <value>生成コード</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GeneralOptionsPanel.InitializeComponentesReadOnlyCheckBox" xml:space="preserve">
    <value>コードの初期化コンポーネントメソッドを読み取り専用としてマークする</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GeneralOptionsPanel.PanelName" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GenerateVisualStudioStyleEventHandlers" xml:space="preserve">
    <value>Visual Studioスタイルのイベントハンドラーを生成</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.GridPropertiesGroupBox" xml:space="preserve">
    <value>グリッドプロパティ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.HeightLabel" xml:space="preserve">
    <value>高さ(&amp;H)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.InPlaceEditCheckBox" xml:space="preserve">
    <value>ToolStripの組み込み編集を有効</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.OptimizedCodeGenerationCheckBox" xml:space="preserve">
    <value>最適化コード生成を使用</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.PanelName" xml:space="preserve">
    <value>グリッドオプション</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.PropertyGridGroupBox" xml:space="preserve">
    <value>プロパティビューの設定</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.PropertyGridSortCheckBox" xml:space="preserve">
    <value>プロパティをアルファベット順にソート</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.ShowGridComboBox" xml:space="preserve">
    <value>グリッドを表示(&amp;S)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SmartTagAutoShowCheckBox" xml:space="preserve">
    <value>自動的にスマートタグを開く</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SmartTagsCheckBox" xml:space="preserve">
    <value>スマートタグを使う</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SnapLinesRadioButton" xml:space="preserve">
    <value>線の位置合わせる</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SnapModeGroupBox" xml:space="preserve">
    <value>整列モード</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SnapToGridComboBox" xml:space="preserve">
    <value>グリッドに吸着(&amp;N)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SnapToGridRadioButton" xml:space="preserve">
    <value>グリッドに吸着</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.WidthLabel" xml:space="preserve">
    <value>幅(&amp;W)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.InsertTodoCommentInEventHandlers" xml:space="preserve">
    <value>新しいイベントハンドラに"TODO"コメントを挿入</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.AssignmentRadioButton" xml:space="preserve">
    <value>プロパティ割り当て(プロパティの数が小さいければ早く、大きければスケールが乏しくなります)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.DefaultLocalizationModel" xml:space="preserve">
    <value>デフォルトローカライズモデル</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.KeepModelCheckBox" xml:space="preserve">
    <value>既存のフォームのローカライズモデルから変更しない</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.PanelName" xml:space="preserve">
    <value>ローカライズモデル</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.ReflectionRadioButton" xml:space="preserve">
    <value>プロパティリフレクション(プロパティが少なければランタイムが遅く、大きければスケールが良くなります。特に多めのデフォルト値の場合)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.PanelName" xml:space="preserve">
    <value>Windowsフォームデザイナー</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.RenameCategoryDialog.CategoryNameLabel" xml:space="preserve">
    <value>カテゴリ名(&amp;C)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.RenameCategoryDialog.DuplicateNameError" xml:space="preserve">
    <value>この名前は重複しています。別の名前を選択してください。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.RenameCategoryDialog.NewCategoryDialogName" xml:space="preserve">
    <value>新しいカテゴリ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.RenameCategoryDialog.RenameCategoryDialogName" xml:space="preserve">
    <value>カテゴリ名を変更</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ShowComponentsButton" xml:space="preserve">
    <value>コンポーネントを表示(&amp;S)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Hosts.DefaultDesignerHost.CyclicDependencyError" xml:space="preserve">
    <value>依存関係が循環しているコンポーネントを追加しようとしています。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Hosts.DefaultDesignerHost.ExceptionDuringComponentCreationError" xml:space="preserve">
    <value>フォームデザイナーのコンポーネント生成時の例外(コンポーネントはコンストラクタで例外を発生させています)
これはソースコードに影響を与えません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.LoadErrorCheckSourceCodeForErrors" xml:space="preserve">
    <value>デザイナーのロードに失敗。ソースコードのシンタックスエラーと参照が正しいかをチェックしてください</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.ReportFlushErrors" xml:space="preserve">
    <value>デザイナーコンテンツをフラッシュする際に1つ以上のエラーが起こす。これはフォームやコントロールでサードパーティコンポーネントが予期せぬエラーを起こすかもしれません。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.ToolboxProvider.CantLoadSidbarComponentLibraryWarning" xml:space="preserve">
    <value>サイドバーコンポーネントライブラリをロードできません。
Windowsフォームコンポーネントが利用可能ではありません。手動でサイドバーを設定してください。
(サイドバーで右クリック→カテゴリ→サイドバーのカスタマイズ)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.ToolboxProvider.CustomComponents" xml:space="preserve">
    <value>カスタムコンポーネント</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Components.BooleanTypeConverter.FalseString" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Components.BooleanTypeConverter.TrueString" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.BackButtonTooltip" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.BindingProperty" xml:space="preserve">
    <value>バインディング</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.DialogTitle" xml:space="preserve">
    <value>Web参照の追加</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.DocumentationProperty" xml:space="preserve">
    <value>ドキュメント</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ForwardButtonTooltip" xml:space="preserve">
    <value>進む</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.GoButtonTooltip" xml:space="preserve">
    <value>移動</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.InvalidNamespaceError" xml:space="preserve">
    <value>名前空間に不正な文字が含まれています。名前空間は文字列と数字とアンダースコアのみ含みます</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.InvalidReferenceNameError" xml:space="preserve">
    <value>参照名に不正な文字が含まれています</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.NamespaceLabel" xml:space="preserve">
    <value>名前空間(&amp;N)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ParametersProperty" xml:space="preserve">
    <value>引数</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.PropertyColumnHeader" xml:space="preserve">
    <value>プロパティ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ReferenceNameLabel" xml:space="preserve">
    <value>参照名(&amp;R)：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.RefreshButtonTooltip" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.RetrievalUriProperty" xml:space="preserve">
    <value>取得URI</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ServiceNameProperty" xml:space="preserve">
    <value>サービス</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.StopButtonTooltip" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.UrlAddressLabel" xml:space="preserve">
    <value>アドレス(&amp;A)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ValueColumnHeader" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.WebServicesTabPageTitle" xml:space="preserve">
    <value>利用可能なWebサービス</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AttachToProcessForm.AttachButtonText" xml:space="preserve">
    <value>アタッチ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AttachToProcessForm.Managed" xml:space="preserve">
    <value>マネージ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AttachToProcessForm.Title" xml:space="preserve">
    <value>プロセスにアタッチ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.CantCreateDirectoryError" xml:space="preserve">
    <value>出力ファイルを作成できません。
権限があるか確認してください。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.IllegalProjectNameError" xml:space="preserve">
    <value>不正なプロジェクト名
文字、数字、空白、ピリオド、アンダースコアのみ許可されています</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.ProjectNameMustNotEndWithDot" xml:space="preserve">
    <value>不正なプロジェクト名：プロジェクト名はピリオドで終われません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.ProjectNameMustStartWithLetter" xml:space="preserve">
    <value>不正なプロジェクト名：プロジェクト名は文字列で始まらなければいけません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.SpecifyValidLocation" xml:space="preserve">
    <value>プロジェクトロケーションとして適切な絶対パスを設定してください</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.OptionPanels.RegisterFiletypesPanel.CaptionLabel" xml:space="preserve">
    <value>SharpDevelopに関連付けるファイルタイプの選択(&amp;S)：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.OptionPanels.RegisterFiletypesPanel.PanelName" xml:space="preserve">
    <value>ファイルタイプ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.OptionPanels.RegisterFiletypesPanel.RegisterCheckBox" xml:space="preserve">
    <value>アプリケーションの起動時にファイルタイプを登録する(&amp;R)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.CaseSensitiveCheckBox" xml:space="preserve">
    <value>大文字と小文字を区別する(&amp;C)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.DialogName" xml:space="preserve">
    <value>並び替えオプション</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.IgnoreTrailingWhitespacesCheckBox" xml:space="preserve">
    <value>後続の空白を無視する(&amp;I)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.RemoveDuplicateLinesCheckBox" xml:space="preserve">
    <value>重複した行の削除(&amp;R)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.SortDirectionGroupBox" xml:space="preserve">
    <value>ソート方向</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.SortDirectionGroupBox.Ascending" xml:space="preserve">
    <value>昇順(&amp;A)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.SortDirectionGroupBox.Descending" xml:space="preserve">
    <value>降順(&amp;D)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.ToolNotFoundDialog.Title" xml:space="preserve">
    <value>ツールが見つかりません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.DialogTitle" xml:space="preserve">
    <value>資格情報の検出</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.DomainLabel" xml:space="preserve">
    <value>ドメイン(&amp;D)：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.InformationLabel" xml:space="preserve">
    <value>特定のURLにアクセスするための資格情報を用意してください</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.PasswordLabel" xml:space="preserve">
    <value>パスポート(&amp;P)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.UrlLabel" xml:space="preserve">
    <value>Url：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.UserNameLabel" xml:space="preserve">
    <value>ユーザ名(&amp;U)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.OutlinePad" xml:space="preserve">
    <value>アウトライン</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.OutlinePad.NotAvailable" xml:space="preserve">
    <value>現在ドキュメントではアウトラインビューが利用できません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Pads.ClassScout.LoadingNode" xml:space="preserve">
    <value>読み込み中...</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Pads.PropertyPad.ContextMenu.Reset" xml:space="preserve">
    <value>リセット(&amp;R)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Pads.PropertyPad.ContextMenu.ShowDescription" xml:space="preserve">
    <value>説明を表示(&amp;S)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Pads.PropertyPadResetCommand" xml:space="preserve">
    <value>リセットの失敗。原因：他のプロパティの変更に伴いリセットの値が正しくないかもしれません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.ParserService.Parsing" xml:space="preserve">
    <value>パース中</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.BuildAction" xml:space="preserve">
    <value>ビルドアクション</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.BuildAction.Description" xml:space="preserve">
    <value>ファイルのビルドアクション</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CopyToOutputDirectory" xml:space="preserve">
    <value>出力フォルダにコピー</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CopyToOutputDirectory.Description" xml:space="preserve">
    <value>ファイルが出力ディレクトリにコピーされるべきかを指定</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CustomTool" xml:space="preserve">
    <value>カスタムツール</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CustomTool.Description" xml:space="preserve">
    <value>ツールを指定</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CustomToolNamespace" xml:space="preserve">
    <value>カスタムツール名前空間</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CustomToolNamespace.Description" xml:space="preserve">
    <value>カスタムツールの出力に使用する名前空間を指定</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.FileName.Description" xml:space="preserve">
    <value>ファイルへの絶対パス</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.LogicalName" xml:space="preserve">
    <value>論理名</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.LogicalName.Description" xml:space="preserve">
    <value>埋め込みリソース名。空白の場合は自動的に生成されます。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Aliases" xml:space="preserve">
    <value>エイリアス</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Aliases.Description" xml:space="preserve">
    <value>コンマで区切られたエイリアスのリスト。クラス名と名前空間名が衝突するアセンブリを参照する必要があればエイリアスを使用。例：異なるバージョンの同じアセンブリ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Culture" xml:space="preserve">
    <value>カルチャ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Culture.Description" xml:space="preserve">
    <value>参照によりカルチャーがサポート</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.EmbedInteropTypes" xml:space="preserve">
    <value>相互運用型を埋め込む</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.EmbedInteropTypes.Description" xml:space="preserve">
    <value>指定した参照アセンブリのCOM 相互運用型がターゲットアセンブリに埋め込まれます。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.LocalCopy" xml:space="preserve">
    <value>ローカルなコピー</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.LocalCopy.Description" xml:space="preserve">
    <value>もし真ならば、出力パスに参照されたアセンブリがコピーされます</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Name" xml:space="preserve">
    <value>(名前)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Name.Description" xml:space="preserve">
    <value>参照名</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.PublicKeyToken" xml:space="preserve">
    <value>公開キートークン</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.PublicKeyToken.Description" xml:space="preserve">
    <value>公開キートークン</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.ReferenceOutputAssembly" xml:space="preserve">
    <value>参照アセンブリ</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.ReferenceOutputAssembly.Description" xml:space="preserve">
    <value>もし偽に設定すれば、この参照は設定はビルド依存順のみを指定し、アセンブリが参照されることはありません。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.SpecificVersion" xml:space="preserve">
    <value>特定バージョン</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.SpecificVersion.Description" xml:space="preserve">
    <value>この参照が特定のバージョンのアセンブリを指定するかどうかを示す</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.UrlBehaviour" xml:space="preserve">
    <value>URL動作</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.UrlBehaviour.Description" xml:space="preserve">
    <value>Web参照URL動作</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Version" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Version.Description" xml:space="preserve">
    <value>参照するメジャー、マイナー、リビジョン、ビルド番号</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.WebReferenceUrl" xml:space="preserve">
    <value>Web参照URL</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.WebReferenceUrl.Description" xml:space="preserve">
    <value>Web参照URL</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.CombineDescriptor.OverwriteProjectQuestion" xml:space="preserve">
    <value>ソリューションファイル  ${combineLocation}  は既に存在します。既存のファイルを上書きしますか？</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.CantCreateProjectWithTypeError" xml:space="preserve">
    <value>型 '${type}' でプロジェクトを作成できません</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.FileCouldntBeWrittenError" xml:space="preserve">
    <value>ファイル ${fileName} に書きこみできませんでした</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.OverwriteProjectQuestion" xml:space="preserve">
    <value>プロジェクトファイル ${projectLocation} は既に存在します。既存のファイルを上書きしますか？</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.OverwriteQuestion" xml:space="preserve">
    <value>ファイル ${fileName} は既に存在します。既存のファイルを上書きしますか？</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.OverwriteQuestion.InfoName" xml:space="preserve">
    <value>ファイルは既に存在します</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.LoadingFile" xml:space="preserve">
    <value>${fileName} をロードしています...</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.CloseSolution" xml:space="preserve">
    <value>ソリューションを選択</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.KeepOldSolution" xml:space="preserve">
    <value>古いソリューションを開いたままにする</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.ReloadSolution" xml:space="preserve">
    <value>ソリューションをリロードする</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.SolutionAlteredExternallyMessage" xml:space="preserve">
    <value>ソリューションが外部にて変更されています。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.SolutionFormattingOptions.Title" xml:space="preserve">
    <value>ソリューションのフォーマットオプション</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.ChangeCompilerVersionLabel" xml:space="preserve">
    <value>選択したプロジェクトを変換(&amp;p)：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.ChangeTargetFrameworkLabel" xml:space="preserve">
    <value>ターゲットフレームワークを変更(&amp;t)：</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.ChangeVersionGroupBoxHeader" xml:space="preserve">
    <value>選択したプロジェクトのバージョンを変更</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.CompilerVersion" xml:space="preserve">
    <value>コンパイラーバージョン</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.ConvertButton" xml:space="preserve">
    <value>変換(&amp;C)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.DoNotChange" xml:space="preserve">
    <value>&lt;変更しない&gt;</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.TargetFramework" xml:space="preserve">
    <value>ターゲットフレームワーク</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.Title" xml:space="preserve">
    <value>プロジェクト アップグレード</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.UpdateOnLoadDueToMissingMSBuild" xml:space="preserve">
    <value>プロジェクト '${ProjectName}' はMSBuild ${OldToolsVersion} を対象としていますがインストールされていません。
プロジェクトのMSBuildを ${NewToolsVersion} にアップグレードしますか？
アップグレードしなければプロジェクトを開けません。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.UpdateToMSBuildButton" xml:space="preserve">
    <value>MSBuild ${NewToolsVersion} にアップグレード</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.UpgradeFromPreviousVersionDescription" xml:space="preserve">
    <value>このソリューションは以前のバージョンのSharpDevelopで作成されました。
新しい言語やFrameworkの機能を利用したければ、アップグレードすると良いでしょう。</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Services.AmbienceService.AmbienceNotFoundError" xml:space="preserve">
    <value>現在の環境が見つかりません。
'オプション-&gt;表示スタイル'を表示し、現在の言語環境を変更してください。</value>
  </data>
  <data name="ICSharpCode.TextEditor.Document.SearchReplaceManager.MarkAllDone" xml:space="preserve">
    <value>全て済みでマーク</value>
  </data>
  <data name="ICSharpCode.TextEditor.Document.SearchReplaceManager.ReplaceAllDone" xml:space="preserve">
    <value>全て済みに置き換え</value>
  </data>
  <data name="ICSharpCode.UnitTesting.AllTestsTreeNode.Text" xml:space="preserve">
    <value>全テスト</value>
  </data>
  <data name="ICSharpCode.UnitTesting.CodeCoverage" xml:space="preserve">
    <value>コードカバレッジ</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.CreateXmlOutputFile" xml:space="preserve">
    <value>XML出力ファイルを生成</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.LabelEachTest" xml:space="preserve">
    <value>個々のテストラベル</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.ShadowCopy" xml:space="preserve">
    <value>シャドウコピー</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.ShowLogo" xml:space="preserve">
    <value>ロゴを表示</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.ShowProgress" xml:space="preserve">
    <value>進捗を表示</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.Thread" xml:space="preserve">
    <value>別のスレッドでテストを実行</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunAllWithCoverage" xml:space="preserve">
    <value>コードカバレッジで全てのテストを実施</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunInTestPad" xml:space="preserve">
    <value>ユニットテストパッドで実行</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunProjectTests" xml:space="preserve">
    <value>現プロジェクトのテストを実施</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunWithCoverage" xml:space="preserve">
    <value>コードカバレッジを実行</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunWithDebugger" xml:space="preserve">
    <value>デバッガで実行</value>
  </data>
  <data name="ICSharpCode.UnitTesting.StatusBarProgressLabel" xml:space="preserve">
    <value>${Name} をテスト中...</value>
  </data>
  <data name="ICSharpCode.UnitTesting.TestMenu" xml:space="preserve">
    <value>テスト(&amp;T)</value>
  </data>
  <data name="ICSharpCode.UnitTesting.TestRunnerNotFoundMessageFormat" xml:space="preserve">
    <value>ユニットテストを実行できません。ファイル '{0}' が見つかりません。</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.ApplicationExists" xml:space="preserve">
    <value>アプリケーションが既に存在します</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.CreateVirtualDir" xml:space="preserve">
    <value>アプリケーション/仮想 ディレクトリの作成</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.DisableWebServerButton" xml:space="preserve">
    <value>Webサーバーオプションを無効</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.IISNotFound" xml:space="preserve">
    <value>ローカルIISかIIS Expressが見つかりません</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.NoIISWP" xml:space="preserve">
    <value>ASP.NET/IIS (Express) ワーカープロセス ({0}) が見つかりません。</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.NoProjectUrlOrProgramAction" xml:space="preserve">
    <value>外部プログラムか指定URLが存在しません。プロジェクトのWebタブのWebサーバを確認してください。</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.Port" xml:space="preserve">
    <value>サーバーポート：</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.ProjectUrl" xml:space="preserve">
    <value>プロジェクトUrl：</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.Server" xml:space="preserve">
    <value>Webサーバ</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.UnableToAttach" xml:space="preserve">
    <value>デバッガーはプロセスにアタッチできませんでした。</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.UseIISExpress" xml:space="preserve">
    <value>IIS Express Webサーバを使用</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.UseLocalIIS" xml:space="preserve">
    <value>ローカルIIS Webサーバを使用</value>
  </data>
  <data name="ICSharpCode.WebProjectOptionsPanel.VirtualDirCreated" xml:space="preserve">
    <value>アプリケーション/仮想 ディレクトリが作成されました。</value>
  </data>
  <data name="ICSharpCode.WixBinding.AddCompilerExtensionsDialog.Title" xml:space="preserve">
    <value>拡張機能を追加</value>
  </data>
  <data name="ICSharpCode.WixBinding.AddWixExtensionToProject.WixExtensionFileFilterName" xml:space="preserve">
    <value>WiX拡張ファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.AddWixLibraryToProject.WixLibraryFileFilterName" xml:space="preserve">
    <value>WiXライブラリファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.ApplicationSettings.OutputNameLabel" xml:space="preserve">
    <value>出力の名前：</value>
  </data>
  <data name="ICSharpCode.WixBinding.ApplicationsSettingsPanel.OutputFileNameLabel" xml:space="preserve">
    <value>出力ファイル名：</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.CompilerExtensionsGroupBox" xml:space="preserve">
    <value>拡張機能</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.CulturesLabel" xml:space="preserve">
    <value>カルチャ：</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.SuppressIces" xml:space="preserve">
    <value>ICEsの抑制：</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.TreatWarningsAsErrorsCheckBox" xml:space="preserve">
    <value>警告をエラーとして扱う</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixMSBuildExtensionsPathLabel" xml:space="preserve">
    <value>WiX MSBuild拡張パス：</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixTargetsPathLabel" xml:space="preserve">
    <value>WiXターゲットパス：</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixTasksPathLabel" xml:space="preserve">
    <value>Wixタスクパス：</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixToolPathLabel" xml:space="preserve">
    <value>WiXツールパス</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixVariablesLabel" xml:space="preserve">
    <value>Wix変数：</value>
  </data>
  <data name="ICSharpCode.WixBinding.DialogDesignerGenerator.DialogIdNotFoundMessage" xml:space="preserve">
    <value>ポータブルクラスライブラリツール が見つかりませんでした</value>
  </data>
  <data name="ICSharpCode.WixBinding.ExtensionBinding.InvalidExtension" xml:space="preserve">
    <value>拡張機能は "クラス,アセンブリ" の形式です。

例：

Microsoft.Tools.WindowsInstallerXml.Extensions.NetFxCompiler, WixNetFxExtension</value>
  </data>
  <data name="ICSharpCode.WixBinding.LibraryParametersPanel" xml:space="preserve">
    <value>ライブラリ</value>
  </data>
  <data name="ICSharpCode.WixBinding.LinkerParametersPanel" xml:space="preserve">
    <value>リンクの設定</value>
  </data>
  <data name="ICSharpCode.WixBinding.NameValueListEditor.NameColumn" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="ICSharpCode.WixBinding.NameValueListEditor.ValueColumn" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.AddDirectoryDialog.Title" xml:space="preserve">
    <value>ディレクトリの追加</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.AddFilesDialog.Title" xml:space="preserve">
    <value>ファイルを追加...</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.AllWixFilesContainErrorsMessage" xml:space="preserve">
    <value>セットアップファイルが見つかりません。WiXファイルにエラーがあります</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.NoRootDirectoryFoundMessage" xml:space="preserve">
    <value>TARGETDIR ディレクトリかDirectoryRef要素が見つかりません。これらが存在しないか、WiXドキュメントがWiX3.0用の名前空間"http://schemas.microsoft.com/wix/2006/wi"ではありません。</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.NoWixFileFoundInProjectMessage" xml:space="preserve">
    <value>{0}'プロジェクトにWiXファイル (.wxs) が見つかりません</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.Title" xml:space="preserve">
    <value>セットアップファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackagesFilesView.ContextMenu.AddDirectory" xml:space="preserve">
    <value>ディレクトリの追加...</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackagesFilesView.ContextMenu.AddFiles" xml:space="preserve">
    <value>ファイルの追加...</value>
  </data>
  <data name="ICSharpCode.WixBinding.PreprocessorVariablesPanel" xml:space="preserve">
    <value>処理中</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectBrowser.ContextMenu.AddWixExtension" xml:space="preserve">
    <value>WiX拡張の追加</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectBrowser.ContextMenu.AddWixLibrary" xml:space="preserve">
    <value>WiXライブラリの追加</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectOptions.OutputType.Installer" xml:space="preserve">
    <value>パッケージのインストール</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectOptions.OutputType.MergeModule" xml:space="preserve">
    <value>モジュールのマージ</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectOptions.OutputType.WixLibrary" xml:space="preserve">
    <value>WiXライブラリ</value>
  </data>
  <data name="ICSharpCode.WixBinding.SetupDialogListPad.Title" xml:space="preserve">
    <value>ダイアログのセットアップ</value>
  </data>
  <data name="ICSharpCode.WixBinding.ViewDialogXml.DialogIdNotFoundMessage" xml:space="preserve">
    <value>{1} にて {0} が見つかりませんでした</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixCompilerExtensionPicker.AddButton" xml:space="preserve">
    <value>追加...</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDialog.IllegalAttributeIntegerValue" xml:space="preserve">
    <value>{0} 属性の値、'{1}'が正当な数値でありません</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDialog.RequiredAttributeMissingMessage" xml:space="preserve">
    <value>要求された属性 '{0}' がありません</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDialogDesigner.NoDialogSelectedInDocumentMessage" xml:space="preserve">
    <value>WiXドキュメントで選択されたセットアップダイアログがありません。カーソルをダイアログの要素の中に移動するかダイアログを開くセットアップウィンドウを使ってください</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.AdminToolsFolder" xml:space="preserve">
    <value>管理ツール</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.AppDataFolder" xml:space="preserve">
    <value>アプリケーションデータ</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.CommonAppDataFolder" xml:space="preserve">
    <value>共通アプリケーションデータ</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.CommonFiles64Folder" xml:space="preserve">
    <value>共通ファイル64</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.CommonFilesFolder" xml:space="preserve">
    <value>共通ファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.DesktopFolder" xml:space="preserve">
    <value>デスクトップ</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.FavoritesFolder" xml:space="preserve">
    <value>お気に入り</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.FontsFolder" xml:space="preserve">
    <value>フォント</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.LocalAppDataFolder" xml:space="preserve">
    <value>ローカルアプリケーションデータ</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.MyPicturesFolder" xml:space="preserve">
    <value>マイピクチャ</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.PersonalFolder" xml:space="preserve">
    <value>個人用</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.ProgramFiles64Folder" xml:space="preserve">
    <value>プログラムファイル(x64)</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.ProgramFilesFolder" xml:space="preserve">
    <value>プログラムファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.ProgramMenuFolder" xml:space="preserve">
    <value>プログラムメニュー</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.SendToFolder" xml:space="preserve">
    <value>送る</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.StartMenuFolder" xml:space="preserve">
    <value>スタートメニュー</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.StartupFolder" xml:space="preserve">
    <value>スタートアップ</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.System16Folder" xml:space="preserve">
    <value>システム(x16)</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.System64Folder" xml:space="preserve">
    <value>システム(x64)</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.SystemFolder" xml:space="preserve">
    <value>システム</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.TempFolder" xml:space="preserve">
    <value>Temp</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.TemplateFolder" xml:space="preserve">
    <value>テンプレート</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.WindowsVolume" xml:space="preserve">
    <value>Windowsボリューム</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixExtensionsFolderNode.Text" xml:space="preserve">
    <value>Wix拡張</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixFileFilterName" xml:space="preserve">
    <value>WiXファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixLibraryFolderNode.Text" xml:space="preserve">
    <value>WiXライブラリ</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixLocalizationFileFilterName" xml:space="preserve">
    <value>WiXローカライズファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixNetFxExtensionTitle" xml:space="preserve">
    <value>.NET Framework拡張</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixNotInstalled" xml:space="preserve">
    <value>WiXがインストールされていません。http://wixtoolset.org/ からWiXをダウンロードしてください。</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixPackageFilesDiffControl.NoDiffFound" xml:space="preserve">
    <value>差異は見つかりません</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixProjectFileAssociation" xml:space="preserve">
    <value>WiXプロジェクト</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixProjectFilesFilterName" xml:space="preserve">
    <value>WiXプロジェクトファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixPubcaExtensionTitle" xml:space="preserve">
    <value>COM+とMQ拡張 (pubca)</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixTargetsFileFilterName" xml:space="preserve">
    <value>WiXターゲットファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixTasksFileFilterName" xml:space="preserve">
    <value>WiXタスクファイル</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixVisualStudioExtensionTitle" xml:space="preserve">
    <value>Visual Studio拡張</value>
  </data>
  <data name="ICSharpCode.WpfDesign.AddIn.ThumbnailViewPad" xml:space="preserve">
    <value>WPFデザイナー サムネールビュー</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Copy" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Cut" xml:space="preserve">
    <value>カット</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Outline" xml:space="preserve">
    <value>アウトライン</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Paste" xml:space="preserve">
    <value>貼り付け</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Properties" xml:space="preserve">
    <value>プロパティ</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Redo" xml:space="preserve">
    <value>やり直し</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Remove" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Tools" xml:space="preserve">
    <value>ツール</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Undo" xml:space="preserve">
    <value>元に戻す</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.ViewXAML" xml:space="preserve">
    <value>XAMLを見る</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AddAttributeDialog.CustomAttributeLabel" xml:space="preserve">
    <value>カスタム：</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AddAttributeDialog.Title" xml:space="preserve">
    <value>属性の追加</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AddElementDialog.CustomElementLabel" xml:space="preserve">
    <value>カスタム：</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AddElementDialog.Title" xml:space="preserve">
    <value>要素の追加</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AssignXSLT" xml:space="preserve">
    <value>XSLTの割り当て(&amp;A)...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AssignXSLT.Title" xml:space="preserve">
    <value>XSLTスタイルシートの割り当て</value>
  </data>
  <data name="ICSharpCode.XmlEditor.CreateSchemaMenuLabel" xml:space="preserve">
    <value>スキーマの作成(&amp;C)</value>
  </data>
  <data name="ICSharpCode.XmlEditor.HideXPathResults" xml:space="preserve">
    <value>XPath結果を隠す(&amp;X)</value>
  </data>
  <data name="ICSharpCode.XmlEditor.OpenXSLT" xml:space="preserve">
    <value>XSLTを開く(&amp;O)</value>
  </data>
  <data name="ICSharpCode.XmlEditor.RunXSLT" xml:space="preserve">
    <value>XSLTを実行(&amp;T)</value>
  </data>
  <data name="ICSharpCode.XmlEditor.SelectXmlSchema.DialogTitle" xml:space="preserve">
    <value>XMLスキーマを選択</value>
  </data>
  <data name="ICSharpCode.XmlEditor.ValidateXmlMenuLabel" xml:space="preserve">
    <value>XML整合性(&amp;V)</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.FoldingGroupLabel" xml:space="preserve">
    <value>折りたたみ</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.ShowAttributesWhenFoldedLabel" xml:space="preserve">
    <value>折り込まれた時に属性を表示(&amp;A)</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.ShowSchemaAnnotationLabel" xml:space="preserve">
    <value>スキーマアノテーションを表示(&amp;T)</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.Title" xml:space="preserve">
    <value>XMLオプション</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.XmlCompletionGroupLabel" xml:space="preserve">
    <value>XMLコンプリート</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.FileExtensionLabelText" xml:space="preserve">
    <value>拡張子(&amp;E)：</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.FileExtensionsGroupBoxText" xml:space="preserve">
    <value>ファイル拡張子</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.NamespacePrefixLabelText" xml:space="preserve">
    <value>プリフィックス(&amp;P)：</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.SchemaLabelText" xml:space="preserve">
    <value>スキーマ(&amp;S)：</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.SchemasGroupBoxText" xml:space="preserve">
    <value>スキーマ</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.NamespaceExists" xml:space="preserve">
    <value>スキーマを追加できません。'{0}'という名前空間はすでに存在します。</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.NoTargetNamespace" xml:space="preserve">
    <value>スキーマ '{0}' はターゲット名前空間を持ちません</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.Title" xml:space="preserve">
    <value>XMLスキーマ</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.UnableToAddSchema" xml:space="preserve">
    <value>スキーマを追加できません</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.UnableToSaveChanges" xml:space="preserve">
    <value>変更を保存できません</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.AddAttributeMenuLabel" xml:space="preserve">
    <value>属性を追加...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.AddChildCommentMenuLabel" xml:space="preserve">
    <value>子コメントを追加</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.AddChildElementMenuLabel" xml:space="preserve">
    <value>子要素を追加...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.AddChildTextNodeAfterMenuLabel" xml:space="preserve">
    <value>子テキストノードを追加</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertCommentAfterMenuLabel" xml:space="preserve">
    <value>後にコメントを挿入</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertCommentBeforeMenuLabel" xml:space="preserve">
    <value>前にコメントを挿入</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertElementAfterMenuLabel" xml:space="preserve">
    <value>後に要素を挿入...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertElementBeforeMenuLabel" xml:space="preserve">
    <value>前に要素を挿入...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertTextNodeAfterMenuLabel" xml:space="preserve">
    <value>後にテキストノードを挿入</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertTextNodeBeforeMenuLabel" xml:space="preserve">
    <value>前にテキストノードを挿入</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.RemoveAttributeMenuLabel" xml:space="preserve">
    <value>属性を削除</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.Title" xml:space="preserve">
    <value>XMLツリー</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.NamespaceColumnHeaderTitle" xml:space="preserve">
    <value>名前空間</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.NamespacesTab" xml:space="preserve">
    <value>名前空間</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.NoXPathResultsMessage" xml:space="preserve">
    <value>XPathクエリは0件該当しました</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.PrefixColumnHeaderTitle" xml:space="preserve">
    <value>プレフィックス</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.QueryButton" xml:space="preserve">
    <value>クエリ</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.ResultsTab" xml:space="preserve">
    <value>結果</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.Title" xml:space="preserve">
    <value>XPathクエリ</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.XPathLabel" xml:space="preserve">
    <value>XPath：</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.XPathMatchColumnHeaderTitle" xml:space="preserve">
    <value>マッチ</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XslOutputView.Title" xml:space="preserve">
    <value>XSLT出力</value>
  </data>
  <data name="ILSpyAddIn.ILSpyDoesNotExist" xml:space="preserve">
    <value>ILSpyは指定の場所を見つけられませんでした。もしくはShaprDevelopにアクセスする権限がありませんでした。</value>
  </data>
  <data name="ILSpyAddIn.ILSpyPathNotSet" xml:space="preserve">
    <value>ILSpyのパスが設定されていません。</value>
  </data>
  <data name="ILSpyAddIn.OpenILSpyCommand" xml:space="preserve">
    <value>ILSpyで開く</value>
  </data>
  <data name="ILSpyAddIn.SetILSpyPathDialog.ILSpyInfo" xml:space="preserve">
    <value>この機能はILSpyを必要とします。もしILSpyがなければ無料でダウンロードできます。</value>
  </data>
  <data name="ILSpyAddIn.SetILSpyPathDialog.PathToILSpyExe" xml:space="preserve">
    <value>ILSpy.exeの絶対パス</value>
  </data>
  <data name="ILSpyAddIn.SetILSpyPathDialogTitle" xml:space="preserve">
    <value>ILSpyのパスを設定</value>
  </data>
  <data name="Internal.ExternalTool.CantLoadToolConfigWarining" xml:space="preserve">
    <value>外部ツールの構成ファイルを読み込むことができません</value>
  </data>
  <data name="Internal.Templates.CodeTemplateLoader.CantLoadTemplatesWarning" xml:space="preserve">
    <value>テンプレート構成ファイルを読み込むことができません</value>
  </data>
  <data name="Internal.Templates.ProjectTemplate.LoadingError" xml:space="preserve">
    <value>プロジェクトテンプレート読み込みエラー：</value>
  </data>
  <data name="MainWindow.CannotCloseWithBuildInProgressMessage" xml:space="preserve">
    <value>SharpDevelopを閉じるにはビルドが終了しなければなりません</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildCancelled" xml:space="preserve">
    <value>ビルドがキャンセルされました</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildFailed" xml:space="preserve">
    <value>ビルドに失敗しました</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildFinished" xml:space="preserve">
    <value>ビルドが成功しました</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildStarted" xml:space="preserve">
    <value>ビルドを開始しました...</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildStartedOutput" xml:space="preserve">
    <value>------ ビルド開始： プロジェクト： ${Project} 構成： ${Config} ------</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildVerb" xml:space="preserve">
    <value>ビルド中</value>
  </data>
  <data name="MainWindow.CompilerMessages.CompileVerb" xml:space="preserve">
    <value>コンパイル中</value>
  </data>
  <data name="MainWindow.CompilerMessages.CreatingCOMInteropAssembly" xml:space="preserve">
    <value>COM 相互運用アセンブリのビルド中</value>
  </data>
  <data name="MainWindow.CompilerMessages.ExecuteScript" xml:space="preserve">
    <value>実行： ${Script}</value>
  </data>
  <data name="MainWindow.CompilerMessages.MSBuildAlreadyRunning" xml:space="preserve">
    <value>MSBuildは既に実行中です！</value>
  </data>
  <data name="MainWindow.CompilerMessages.PerformingMainCompilationOutput" xml:space="preserve">
    <value>コンパイル中...</value>
  </data>
  <data name="MainWindow.CompilerMessages.ProjectStatsOutput" xml:space="preserve">
    <value>ビルド完了 -- ${Errors} エラー, ${Warnings} 警告</value>
  </data>
  <data name="MainWindow.CompilerMessages.SkipProjectNoChanges" xml:space="preserve">
    <value>${Name} をスキップしました(SharpDevelopでの変更なし)</value>
  </data>
  <data name="MainWindow.DialogName" xml:space="preserve">
    <value>SharpDevelop</value>
  </data>
  <data name="MainWindow.DiscardChangesMessage" xml:space="preserve">
    <value>本当に変更を破棄しますか？</value>
  </data>
  <data name="MainWindow.Editor.Tooltip.LocalVar" xml:space="preserve">
    <value>ローカル変数</value>
  </data>
  <data name="MainWindow.Editor.Tooltip.Namespace" xml:space="preserve">
    <value>名前空間</value>
  </data>
  <data name="MainWindow.Editor.Tooltip.Parameter" xml:space="preserve">
    <value>引数</value>
  </data>
  <data name="MainWindow.Editor.Tooltip.UnresolvedOverload" xml:space="preserve">
    <value>オーバーロード </value>
  </data>
  <data name="MainWindow.SaveChangesMessage" xml:space="preserve">
    <value>変更を保存しますか？</value>
  </data>
  <data name="MainWindow.SaveChangesMessageHeader" xml:space="preserve">
    <value>変更を保存しますか？</value>
  </data>
  <data name="MainWindow.StatusBar.CompilingMessage" xml:space="preserve">
    <value>コンパイル中 ${Project}</value>
  </data>
  <data name="MainWindow.StatusBar.ReadyMessage" xml:space="preserve">
    <value>レディ</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.DeleteAllMarks.ToolTip" xml:space="preserve">
    <value>全てのバッファの全てのブックマークを削除</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.DeleteMark.ToolTip" xml:space="preserve">
    <value>ブックマークを削除</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.EnableDisableAll.ToolTip" xml:space="preserve">
    <value>全てを有効/無効</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.GotoNext.ToolTip" xml:space="preserve">
    <value>次のブックマーク</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.GotoPrev.ToolTip" xml:space="preserve">
    <value>前のブックマーク</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.LineText" xml:space="preserve">
    <value>{0} @行 {1}</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.LocationText" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="MainWindow.Windows.BookmarksLabel" xml:space="preserve">
    <value>ブックマーク</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.AddToWorkspace" xml:space="preserve">
    <value>ワークスペースに追加</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.BackButton.ToolTip" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.BaseTypes" xml:space="preserve">
    <value>基本型</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowOtherMembers.Label" xml:space="preserve">
    <value>他のメンバを表示(&amp;O)</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowPrivateMembers.Label" xml:space="preserve">
    <value>プライベートメンバを表示(&amp;R)</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowProjectReferences.Label" xml:space="preserve">
    <value>プロジェクト参照を表示(&amp;P)</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowProtectedMembers.Label" xml:space="preserve">
    <value>プロテクトメンバを表示(&amp;O)</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowPublicMembers.Label" xml:space="preserve">
    <value>パブリックメンバを表示(&amp;S)</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettingsButton.ToolTip" xml:space="preserve">
    <value>クラスビュー設定</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClearSearch.ToolTip" xml:space="preserve">
    <value>検索をクリア</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.CommitSearch.ToolTip" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.DerivedTypes" xml:space="preserve">
    <value>派生型</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ForwardButton.ToolTip" xml:space="preserve">
    <value>進む</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.NoResultsFound" xml:space="preserve">
    <value>検索結果がありません</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.OpenAssemblyButton.ToolTip" xml:space="preserve">
    <value>アセンブリを開く</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.OpenAssemblyFromFile" xml:space="preserve">
    <value>アセンブリファイルを開く...</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.OpenAssemblyFromGAC" xml:space="preserve">
    <value>GACのアセンブリを開く...</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.OpenInClassBrowser" xml:space="preserve">
    <value>クラスブラウザで開く</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.SearchButton.ToolTip" xml:space="preserve">
    <value>クラスビュー検索</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.Workspace" xml:space="preserve">
    <value>ワークスペース {0}</value>
  </data>
  <data name="MainWindow.Windows.ClassScoutLabel" xml:space="preserve">
    <value>クラス</value>
  </data>
  <data name="MainWindow.Windows.CompilerMessageView.ClearAllButton.ToolTip" xml:space="preserve">
    <value>全てクリア</value>
  </data>
  <data name="MainWindow.Windows.CompilerMessageView.ShowOutputFromComboBox.ToolTip" xml:space="preserve">
    <value>次の出力を表示：</value>
  </data>
  <data name="MainWindow.Windows.CompilerMessageView.ToggleWordWrapButton.ToolTip" xml:space="preserve">
    <value>ワードラップ切り替え</value>
  </data>
  <data name="MainWindow.Windows.Debug.AddWatchExpression" xml:space="preserve">
    <value>ウォッチ式を追加</value>
  </data>
  <data name="MainWindow.Windows.Debug.Breakpoints" xml:space="preserve">
    <value>ブレークポイント</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack" xml:space="preserve">
    <value>コールスタック</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.CannotSwitchWhileRunning" xml:space="preserve">
    <value>デバッガが実行中のため機能を切り替えることはできません</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.CannotSwitchWithoutSymbols" xml:space="preserve">
    <value>シンボルなしで機能を切り替えることはできません</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.CannotSwitchWithoutSymbolsOrDecompiledCodeOptions" xml:space="preserve">
    <value>デコンパイルコードオプションを有効にしなければ、シンボルの関数に切り替えられません。</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ExternalMethods" xml:space="preserve">
    <value>[外部メソッド]</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.FunctionSwitch" xml:space="preserve">
    <value>機能切り替え</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.Module" xml:space="preserve">
    <value>モジュールのマージ</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ShowArgumentNames" xml:space="preserve">
    <value>引数の名前を表示</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ShowArgumentValues" xml:space="preserve">
    <value>引数の値を表示</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ShowExternalMethods" xml:space="preserve">
    <value>外部メソッドを表示</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ShowLineNumber" xml:space="preserve">
    <value>行番号を表示</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ShowModuleNames" xml:space="preserve">
    <value>モジュール名を表示</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Ask" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Break" xml:space="preserve">
    <value>ブレーク</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Breakpoint" xml:space="preserve">
    <value>ブレークポイント</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.BreakpointHit" xml:space="preserve">
    <value>ブレークポイント ヒット！</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.BreakpointHitAt" xml:space="preserve">
    <value>{1} の行 {0} でブレークポイントがヒット</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.BreakpointHitAtBecause" xml:space="preserve">
    <value>{2} のため {1} の行 {0} でブレークポイントがヒット</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Condition" xml:space="preserve">
    <value>続行</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.ConditionalColumnHeader" xml:space="preserve">
    <value>条件</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Continue" xml:space="preserve">
    <value>続行</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.DisableBreakpoint" xml:space="preserve">
    <value>ブレークポイントを無効</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.EditCondition" xml:space="preserve">
    <value>条件を編集...</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.EnableBreakpoint" xml:space="preserve">
    <value>ブレークポイントを有効</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.ScriptingWindow.CheckSyntax" xml:space="preserve">
    <value>シンタックスをチェック</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.ScriptingWindow.ScriptingLanguage" xml:space="preserve">
    <value>スクリプト言語</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.ScriptingWindow.Title" xml:space="preserve">
    <value>デバッガスクリプトの編集</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Terminate" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Trace" xml:space="preserve">
    <value>トレース</value>
  </data>
  <data name="MainWindow.Windows.Debug.Console" xml:space="preserve">
    <value>コンソール</value>
  </data>
  <data name="MainWindow.Windows.Debug.DebugExecutable" xml:space="preserve">
    <value>実行ファイルのデバッグ</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Break" xml:space="preserve">
    <value>ブレーク</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Continue" xml:space="preserve">
    <value>続行</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Error.CannotInterceptException" xml:space="preserve">
    <value>例外をインターセプトできません。デバッグプログラムは継続できず、プロパティを評価できません</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Error.CannotInterceptHandledException" xml:space="preserve">
    <value>ハンドル例外をインターセプトできません。デバッグシンボルが利用できない可能性があります</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.HideExceptionDetails" xml:space="preserve">
    <value>例外の詳細を隠す</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.LineFormat.EndOfInnerException" xml:space="preserve">
    <value>--- 内部例外スタックトレースの終わり ---</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.LineFormat.NoSymbols" xml:space="preserve">
    <value>at {0}</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.LineFormat.Symbols" xml:space="preserve">
    <value>at {0} in {1}：行 {2}</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Message" xml:space="preserve">
    <value>デバッガにて例外 {0} がスローされました</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.ShowExceptionDetails" xml:space="preserve">
    <value>例外の詳細を表示</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Terminate" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Title" xml:space="preserve">
    <value>例外</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Title.Handled" xml:space="preserve">
    <value>ハンドルされた例外</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Title.Unhandled" xml:space="preserve">
    <value>ハンドルされていない例外</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionHistory" xml:space="preserve">
    <value>例外の履歴</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionHistory.Exception" xml:space="preserve">
    <value>例外</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionHistory.Time" xml:space="preserve">
    <value>時刻</value>
  </data>
  <data name="MainWindow.Windows.Debug.HideZoomControl" xml:space="preserve">
    <value>表示/非表示 ズームコントロール</value>
  </data>
  <data name="MainWindow.Windows.Debug.Local" xml:space="preserve">
    <value>ローカル</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables" xml:space="preserve">
    <value>ローカル変数</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.BaseClass" xml:space="preserve">
    <value>基本クラス</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CannotExploreVariablesWhileRunning" xml:space="preserve">
    <value>デバッガの実行中は変数を探索できません</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CannotSetValue.BadFormat" xml:space="preserve">
    <value>{0} を {1} に変換できません</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CannotSetValue.Title" xml:space="preserve">
    <value>値を設定できません</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CannotSetValue.UnknownError" xml:space="preserve">
    <value>値を設定できません</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CopyToClipboard" xml:space="preserve">
    <value>値をクリップボードにコピー</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.NameColumn" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.NonPublicMembers" xml:space="preserve">
    <value>パブリックでないメンバ</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.NonPublicStaticMembers" xml:space="preserve">
    <value>パブリックでないスタティックメンバ</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.PrivateMembers" xml:space="preserve">
    <value>プライベートメンバ</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.PrivateStaticMembers" xml:space="preserve">
    <value>プライベートなスタティックメンバ</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.ShowFullError" xml:space="preserve">
    <value>エラーをすべて表示...</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.ShowInHexadecimal" xml:space="preserve">
    <value>16進数で値を表示</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.StaticMembers" xml:space="preserve">
    <value>スタティックメンバ</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.TypeColumn" xml:space="preserve">
    <value>型</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.ValueColumn" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad" xml:space="preserve">
    <value>メモリー</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.AddressNotFound" xml:space="preserve">
    <value>アドレス {0} は見つかりませんでした！</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.ByteSize" xml:space="preserve">
    <value>バイトサイズ表示：</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.JumpTo" xml:space="preserve">
    <value>アドレスに移動：</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.NextAddress" xml:space="preserve">
    <value>次の仮想アドレス</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.NoMappings" xml:space="preserve">
    <value>メモリーアドレスのマッピングがありません！</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.NotDebuggingOrProcessRunning" xml:space="preserve">
    <value>デバッグする実行プロセスが存在しません！</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.PreviousAddress" xml:space="preserve">
    <value>前の仮想アドレス</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.ReadingFromFormat" xml:space="preserve">
    <value>{0} から {1} を読み込み中 - サイズ {2}。</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.Refresh" xml:space="preserve">
    <value>現在のアドレスをリフレッシュ</value>
  </data>
  <data name="MainWindow.Windows.Debug.MemoryPad.UnableToReadFormat" xml:space="preserve">
    <value>{1} サイズのアドレス {0}を読み込めません。</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules" xml:space="preserve">
    <value>ロードされたモジュール</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.AddressColumn" xml:space="preserve">
    <value>アドレス</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.DynamicModule" xml:space="preserve">
    <value>(ダイナミック)</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.HasNoSymbols" xml:space="preserve">
    <value>ロードされていないシンボル</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.HasSymbols" xml:space="preserve">
    <value>ロードされたシンボル</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.InMemoryModule" xml:space="preserve">
    <value>(インメモリ)</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.OrderColumn" xml:space="preserve">
    <value>順番</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.ProgramColumn" xml:space="preserve">
    <value>プログラム</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.SymbolsColumn" xml:space="preserve">
    <value>シンボル</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.TimestampColumn" xml:space="preserve">
    <value>タイムスタンプ</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.VersionColumn" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="MainWindow.Windows.Debug.ObjectGraph" xml:space="preserve">
    <value>オブジェクトグラフ</value>
  </data>
  <data name="MainWindow.Windows.Debug.ParallelStack" xml:space="preserve">
    <value>並列スタック</value>
  </data>
  <data name="MainWindow.Windows.Debug.RunToCursor" xml:space="preserve">
    <value>カーソルまで実行</value>
  </data>
  <data name="MainWindow.Windows.Debug.SetCurrentStatement" xml:space="preserve">
    <value>現在のステートメントを設定</value>
  </data>
  <data name="MainWindow.Windows.Debug.StopDebugging.Message" xml:space="preserve">
    <value>デバッグを中断しますか？</value>
  </data>
  <data name="MainWindow.Windows.Debug.StopProcessDialog.Message" xml:space="preserve">
    <value>プロセスからデタッチして終了しますか？</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads" xml:space="preserve">
    <value>スレッド</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.CannotFreezeWhileRunning" xml:space="preserve">
    <value>デバッグ中はスレッドの凍結および解凍できません</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.CannotStepNoActiveFunction" xml:space="preserve">
    <value>選択されたアクティブな機能がないためステップ実行できません</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.CannotSwitchOnNAFrame" xml:space="preserve">
    <value>利用可能なフレームにスレッドに切り替えられません。</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.CannotSwitchWhileRunning" xml:space="preserve">
    <value>デバッガが実行している間はスレッドを切り替えることができません</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.CannotSwitchWithoutDecompiledCodeOptions" xml:space="preserve">
    <value>デコンパイルコードオプションを有効にしなければ、デコンパイルしたコード中のスレッドに切り替えられません。</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Freeze" xml:space="preserve">
    <value>凍結</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Frozen" xml:space="preserve">
    <value>凍結</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority" xml:space="preserve">
    <value>優先</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.AboveNormal" xml:space="preserve">
    <value>標準以上</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.BelowNormal" xml:space="preserve">
    <value>標準以下</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.Highest" xml:space="preserve">
    <value>最高</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.Lowest" xml:space="preserve">
    <value>最低</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.Normal" xml:space="preserve">
    <value>標準</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.ThreadSwitch" xml:space="preserve">
    <value>スレッド切り替え</value>
  </data>
  <data name="MainWindow.Windows.Debug.ToggleMethodView" xml:space="preserve">
    <value>メソッドビューを切り替える</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch" xml:space="preserve">
    <value>ウォッチ</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.AddWatch" xml:space="preserve">
    <value>ウォッチ追加</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.EnterExpression" xml:space="preserve">
    <value>ウォッチ式を入力：</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.InvalidExpression" xml:space="preserve">
    <value>不正な式： {0}</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.Refresh" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.RemoveAll" xml:space="preserve">
    <value>すべて削除</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.RemoveWatch" xml:space="preserve">
    <value>すべてウォッチ</value>
  </data>
  <data name="MainWindow.Windows.DefinitionViewLabel" xml:space="preserve">
    <value>ビューの定義</value>
  </data>
  <data name="MainWindow.Windows.ErrorList" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.ErrorButton.Label" xml:space="preserve">
    <value>${TaskService.Errors} エラー</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.ErrorButton.ToolTip" xml:space="preserve">
    <value>一覧にエラーを表示させるかを選択</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.MessageButton.Label" xml:space="preserve">
    <value>${TaskService.Messages} メッセージ</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.MessageButton.ToolTip" xml:space="preserve">
    <value>一覧にメッセージを表示させるかを選択</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.WarningButton.Label" xml:space="preserve">
    <value>${TaskService.Warnings} 警告</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.WarningButton.ToolTip" xml:space="preserve">
    <value>一覧に警告を表示させるかを選択</value>
  </data>
  <data name="MainWindow.Windows.FileScout.DriveType.CD" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="MainWindow.Windows.FileScout.DriveType.Fixed" xml:space="preserve">
    <value>固定</value>
  </data>
  <data name="MainWindow.Windows.FileScout.DriveType.Remote" xml:space="preserve">
    <value>リモート</value>
  </data>
  <data name="MainWindow.Windows.FileScout.DriveType.Removeable" xml:space="preserve">
    <value>リムーバブル</value>
  </data>
  <data name="MainWindow.Windows.FileScout.LastModified" xml:space="preserve">
    <value>最終更新</value>
  </data>
  <data name="MainWindow.Windows.FileScout.MyComputer" xml:space="preserve">
    <value>マイコンピュータ</value>
  </data>
  <data name="MainWindow.Windows.FileScout.MyDocuments" xml:space="preserve">
    <value>マイドキュメント</value>
  </data>
  <data name="MainWindow.Windows.FileScout.Size" xml:space="preserve">
    <value>サイズ</value>
  </data>
  <data name="MainWindow.Windows.FileScoutLabel" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="MainWindow.Windows.HelpScoutLabel" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="MainWindow.Windows.OutlinePad" xml:space="preserve">
    <value>アウトライン</value>
  </data>
  <data name="MainWindow.Windows.OutlinePad.NoContentAvailable" xml:space="preserve">
    <value>ドキュメントにて利用可能なアウトラインコンテンツがありません</value>
  </data>
  <data name="MainWindow.Windows.OutputWindow" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="MainWindow.Windows.OutputWindow.BuildCategory" xml:space="preserve">
    <value>ビルド</value>
  </data>
  <data name="MainWindow.Windows.OutputWindow.DebugCategory" xml:space="preserve">
    <value>デバッグ</value>
  </data>
  <data name="MainWindow.Windows.ProjectScoutLabel" xml:space="preserve">
    <value>プロジェクト</value>
  </data>
  <data name="MainWindow.Windows.PropertiesScoutLabel" xml:space="preserve">
    <value>プロパティ</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.BackToNormalView.ToolTip" xml:space="preserve">
    <value>通常検索結果に戻る</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.ClearHistory" xml:space="preserve">
    <value>&lt;履歴の削除&gt;</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.CollapseAll.ToolTip" xml:space="preserve">
    <value>すべて折りたたむ</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.ExpandAll.ToolTip" xml:space="preserve">
    <value>すべて展開する</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.FileCount" xml:space="preserve">
    <value>${Count} ファイル</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.Flat" xml:space="preserve">
    <value>フラット</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.In" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.NoProject" xml:space="preserve">
    <value>&lt;プロジェクトなし&gt;</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.OccurrencesCount" xml:space="preserve">
    <value>${Count}  回発生</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.OccurrencesOf" xml:space="preserve">
    <value>${Pattern}' の発生回数</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.OneFile" xml:space="preserve">
    <value>1 ファイル</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.OneOccurrence" xml:space="preserve">
    <value>1 回</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.PerFile" xml:space="preserve">
    <value>ファイルごと</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.PerProject" xml:space="preserve">
    <value>プロジェクトごと</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.PerProjectAndFile" xml:space="preserve">
    <value>プロジェクトおよびファイルごと</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.SelectViewMode.ToolTip" xml:space="preserve">
    <value>検索リストモードを選択</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.ShowLast.ToolTip" xml:space="preserve">
    <value>最後の検索を表示</value>
  </data>
  <data name="MainWindow.Windows.SearchResultsLabel" xml:space="preserve">
    <value>検索結果</value>
  </data>
  <data name="MainWindow.Windows.TaskList" xml:space="preserve">
    <value>タスクリスト</value>
  </data>
  <data name="MainWindow.Windows.ToolbarLabel" xml:space="preserve">
    <value>ツール</value>
  </data>
  <data name="MainWindow.Windows.TreeView.CollapseCurrent" xml:space="preserve">
    <value>今を折りたたむ</value>
  </data>
  <data name="MainWindow.Windows.TreeView.ExpandCurrent" xml:space="preserve">
    <value>今を展開する</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ClearResults" xml:space="preserve">
    <value>結果をクリア</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ExpandAllFailures" xml:space="preserve">
    <value>失敗をすべて展開する</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ExpandAllIgnoredTests" xml:space="preserve">
    <value>無視をすべて展開する</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ExpandCurrentFailures" xml:space="preserve">
    <value>今の失敗をすべて展開する</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ExpandCurrentIgnoredTests" xml:space="preserve">
    <value>今の無視をすべて展開する</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.TreeMenu" xml:space="preserve">
    <value>ツリー</value>
  </data>
  <data name="MainWindow.XmlValidationMessages.ValidationFailed" xml:space="preserve">
    <value>バリデーション： 失敗</value>
  </data>
  <data name="MainWindow.XmlValidationMessages.ValidationStarted" xml:space="preserve">
    <value>------ XML妥当性 ------</value>
  </data>
  <data name="MainWindow.XmlValidationMessages.ValidationSuccess" xml:space="preserve">
    <value>妥当性： 成功</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.CancelItem" xml:space="preserve">
    <value>テストアセンブリをアンロード、自動ロードをキャンセル</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.GotoDefinitionContextMenuLabel" xml:space="preserve">
    <value>定義へ移動(&amp;G)</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.ReferenceItem" xml:space="preserve">
    <value>選択中のプロジェクトにNUnitの参照を追加</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.RefreshItem" xml:space="preserve">
    <value>テストアセンブリをリロード</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.RunAllTests" xml:space="preserve">
    <value>すべてのテストを実行</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.RunItem" xml:space="preserve">
    <value>テストを実行</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.RunTestsContextMenuLabel" xml:space="preserve">
    <value>テストを実行</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.StopTests" xml:space="preserve">
    <value>テストを中止</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.TestTreeView.ClickOnRunInformationNode" xml:space="preserve">
    <value>テスト実行をクリックするかテストをアクティブ化するためリフレッシュ</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.TestTreeView.LoadingErrorNode" xml:space="preserve">
    <value>ロードエラー</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.TestTreeView.TestFailedMessage" xml:space="preserve">
    <value>テストケース '${TestCase}' 失敗</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.TestTreeView.TestNotExecutedMessage" xml:space="preserve">
    <value>テストケース '${TestCase}' は実行されませんでした</value>
  </data>
  <data name="ObjectBrowser.Menu.LoadAssembly" xml:space="preserve">
    <value>アセンブリをロード...</value>
  </data>
  <data name="ObjectBrowser.Menu.LoadRef" xml:space="preserve">
    <value>参照されたアセンブリをロード</value>
  </data>
  <data name="ObjectBrowser.Menu.LoadStd" xml:space="preserve">
    <value>標準アセンブリをロード</value>
  </data>
  <data name="OpenFileTabEventHandler.ContextMenu.Close" xml:space="preserve">
    <value>閉じる(&amp;C)</value>
  </data>
  <data name="OpenFileTabEventHandler.ContextMenu.CloseAllButThis" xml:space="preserve">
    <value>これを除いてすべて閉じる(&amp;B)</value>
  </data>
  <data name="OpenFileTabEventHandler.ContextMenu.Save" xml:space="preserve">
    <value>保存(&amp;A)</value>
  </data>
  <data name="OpenFileTabEventHandler.ContextMenu.SaveAs" xml:space="preserve">
    <value>名前を付けて保存(&amp;A)...</value>
  </data>
  <data name="OpenFileTabEventHandler.CopyPathName" xml:space="preserve">
    <value>ファイル名をコピー</value>
  </data>
  <data name="OpenFileTabEventHandler.FileContainingFolderInExplorer" xml:space="preserve">
    <value>エクスプローラに含まれているフォルダを開く</value>
  </data>
  <data name="OpenFileTabEventHandler.OpenCommandPromptHere" xml:space="preserve">
    <value>コマンドプロンプトを開く</value>
  </data>
  <data name="PortableLibrary.ChooseTargetFrameworks" xml:space="preserve">
    <value>ターゲットフレームワークを選択</value>
  </data>
  <data name="PortableLibrary.CouldNotFindTools" xml:space="preserve">
    <value>ドキュメントにダイアログID '{0}' が見つかりませんでした</value>
  </data>
  <data name="PortableLibrary.PortableSubset" xml:space="preserve">
    <value>.NETポータブルサブセット</value>
  </data>
  <data name="PortableLibrary.SelectAtLeastTwoFrameworks" xml:space="preserve">
    <value>2つ以上のフレームワークが選択される必要があります。</value>
  </data>
  <data name="PortableLibrary.SelectedProfile" xml:space="preserve">
    <value>選択されたプロファイル：</value>
  </data>
  <data name="PortableLibrary.SelectProfileDialog.Title" xml:space="preserve">
    <value>ポータブルライブラリプロファイルを選択</value>
  </data>
  <data name="PortableLibrary.ToolsInstallationHelp" xml:space="preserve">
    <value>Visual Studioをインストールせずにポータブルクラスライブラリツールをインストールするには、 ダウンロードファイル (PortableLibraryTools.exe) をコンピューターに保存して、コマンドプロンプトから/buildmachineオプションを含めてインストーラーを実行してください。</value>
  </data>
  <data name="ProjectBrowser.Toolbar.CollapseAll" xml:space="preserve">
    <value>全ノードを折りたたむ</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles" xml:space="preserve">
    <value>存在するファイルに追加</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.Copy" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.Link" xml:space="preserve">
    <value>リンク</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.Question" xml:space="preserve">
    <value>ファイルを対象ディレクトリにコピーしますか、それとも現在の場所にリンクを作りますか？</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.ReplaceExistingFile" xml:space="preserve">
    <value>${FileName}' という名前のファイルは既に存在します。置換しますか？</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.ReplaceExistingFile.Title" xml:space="preserve">
    <value>存在するファイルを置換</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddItem" xml:space="preserve">
    <value>項目を追加...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddMenu" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddReference" xml:space="preserve">
    <value>参照を追加</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddServiceReference" xml:space="preserve">
    <value>サービス参照を追加</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddWebReference" xml:space="preserve">
    <value>Web参照の追加</value>
  </data>
  <data name="ProjectComponent.ContextMenu.Build" xml:space="preserve">
    <value>ビルド(&amp;B)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.Clean" xml:space="preserve">
    <value>クリーン(&amp;N)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.CollapseAll" xml:space="preserve">
    <value>すべて折りたたむ</value>
  </data>
  <data name="ProjectComponent.ContextMenu.Delete.Question" xml:space="preserve">
    <value>${FileName}'を完全に削除しますか</value>
  </data>
  <data name="ProjectComponent.ContextMenu.DeleteWithContents.Question" xml:space="preserve">
    <value>${FileName}'と、そのすべてのコンテンツを完全に削除しますか</value>
  </data>
  <data name="ProjectComponent.ContextMenu.DeleteWithDependentFiles.Question" xml:space="preserve">
    <value>${FileName}'とその依存ファイルを完全に削除しますか</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExcludeFileFromProject" xml:space="preserve">
    <value>プロジェクトから除外</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExecuteCustomTool" xml:space="preserve">
    <value>カスタムツールの実行</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingFolder" xml:space="preserve">
    <value>既存のフォルダ...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingFolder.CopyQuestion" xml:space="preserve">
    <value>フォルダから対象ディレクトリにコピーしたいですか？</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingItem" xml:space="preserve">
    <value>既存の項目...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingItemAsDependent" xml:space="preserve">
    <value>依存項目の既存項目</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingProject" xml:space="preserve">
    <value>既存プロジェクト(&amp;E)...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation" xml:space="preserve">
    <value>ドキュメント生成</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation.NeedToEditBuildOptions" xml:space="preserve">
    <value>XMLドキュメントファイルを生成するためプロジェクトのビルドオプションを編集する必要があります</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation.ProjectNeedsToBeCompiled" xml:space="preserve">
    <value>プロジェクトをコンパイルする必要があります</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation.ProjectNeedsToBeCompiled2" xml:space="preserve">
    <value>XMLドキュメントファイルが存在しません。プロジェクトをコンパイルする必要があります</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation.SHFBNotFound" xml:space="preserve">
    <value>インストールされた'Sandcastle Help File Builder'で必要なXMLドキュメントを生成</value>
  </data>
  <data name="ProjectComponent.ContextMenu.HtmlExport" xml:space="preserve">
    <value>Htmlへエクスポート(&amp;E)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.IncludeFileInProject" xml:space="preserve">
    <value>プロジェクトに含む</value>
  </data>
  <data name="ProjectComponent.ContextMenu.IncludeMenu.InCompile" xml:space="preserve">
    <value>コンパイル</value>
  </data>
  <data name="ProjectComponent.ContextMenu.IncludeMenu.InDeploy" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewDependentItem" xml:space="preserve">
    <value>新しい依存項目...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewFolder" xml:space="preserve">
    <value>新しいフォルダ(&amp;E)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewItem" xml:space="preserve">
    <value>新しい項目(&amp;N)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewProject" xml:space="preserve">
    <value>新しいプロジェクト(&amp;N)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewSolutionFolder" xml:space="preserve">
    <value>新しいソリューションフォルダ(&amp;F)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NotAWebProject" xml:space="preserve">
    <value>プロジェクトはWebプロジェクトではありません。</value>
  </data>
  <data name="ProjectComponent.ContextMenu.Open" xml:space="preserve">
    <value>開く(&amp;P)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.OpenProjectOutputFolder" xml:space="preserve">
    <value>出力フォルダを開く</value>
  </data>
  <data name="ProjectComponent.ContextMenu.Rebuild" xml:space="preserve">
    <value>リビルド(&amp;E)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.RefreshWebReference" xml:space="preserve">
    <value>Web参照を更新</value>
  </data>
  <data name="ProjectComponent.ContextMenu.Rename" xml:space="preserve">
    <value>名前の変更(&amp;N)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.RunProject" xml:space="preserve">
    <value>プロジェクトを実行(&amp;R)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.RunProjectWithoutDebugger" xml:space="preserve">
    <value>デバッガーなしでプロジェクトを実行</value>
  </data>
  <data name="ProjectComponent.ContextMenu.SetAsStartupProject" xml:space="preserve">
    <value>スタートアッププロジェクトに設定(&amp;A)</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ViewInBrowser" xml:space="preserve">
    <value>ブラウザで見る</value>
  </data>
  <data name="ProjectComponent.NewFolderString" xml:space="preserve">
    <value>新しいフォルダ</value>
  </data>
  <data name="ProjectComponent.ProjectComponent.RemoveAllWebReferences.RemoveAllWebReferencesQuestion" xml:space="preserve">
    <value>プロジェクト{0}から、すべてのWeb参照を削除しますか？</value>
  </data>
  <data name="ProjectComponent.RemoveAllWebReferences.Title" xml:space="preserve">
    <value>すべてのWeb参照を削除</value>
  </data>
  <data name="RegExpTk.MainDialog.Assemblies" xml:space="preserve">
    <value>アセンブリ (*.dll)|*.dll</value>
  </data>
  <data name="RegExpTk.MainDialog.Assembly" xml:space="preserve">
    <value>アセンブリ</value>
  </data>
  <data name="RegExpTk.MainDialog.Classname" xml:space="preserve">
    <value>クラス名</value>
  </data>
  <data name="RegExpTk.MainDialog.CompileTab" xml:space="preserve">
    <value>コンパイル</value>
  </data>
  <data name="RegExpTk.MainDialog.CreateAssembly" xml:space="preserve">
    <value>アセンブリの生成</value>
  </data>
  <data name="RegExpTk.MainDialog.ECMA" xml:space="preserve">
    <value>ECMA script 互換</value>
  </data>
  <data name="RegExpTk.MainDialog.EndColumn" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="RegExpTk.MainDialog.ExplicitCapture" xml:space="preserve">
    <value>明示的キャプチャ</value>
  </data>
  <data name="RegExpTk.MainDialog.GroupsColumn" xml:space="preserve">
    <value>グループ</value>
  </data>
  <data name="RegExpTk.MainDialog.IgnoreCase" xml:space="preserve">
    <value>大文字小文字を区別</value>
  </data>
  <data name="RegExpTk.MainDialog.IgnoreWhitespace" xml:space="preserve">
    <value>エスケープされない空白パターン除外</value>
  </data>
  <data name="RegExpTk.MainDialog.Input" xml:space="preserve">
    <value>入力</value>
  </data>
  <data name="RegExpTk.MainDialog.LengthColumn" xml:space="preserve">
    <value>長さ</value>
  </data>
  <data name="RegExpTk.MainDialog.Multiline" xml:space="preserve">
    <value>マルチライン</value>
  </data>
  <data name="RegExpTk.MainDialog.Namespace" xml:space="preserve">
    <value>名前空間</value>
  </data>
  <data name="RegExpTk.MainDialog.PublicVisible" xml:space="preserve">
    <value>publicを可視</value>
  </data>
  <data name="RegExpTk.MainDialog.Regex" xml:space="preserve">
    <value>正規表現</value>
  </data>
  <data name="RegExpTk.MainDialog.Replace" xml:space="preserve">
    <value>置換</value>
  </data>
  <data name="RegExpTk.MainDialog.Replacement" xml:space="preserve">
    <value>置換後の文字列</value>
  </data>
  <data name="RegExpTk.MainDialog.ReplaceResult" xml:space="preserve">
    <value>置換結果</value>
  </data>
  <data name="RegExpTk.MainDialog.RightToLeft" xml:space="preserve">
    <value>右から左へ</value>
  </data>
  <data name="RegExpTk.MainDialog.ShowGroups" xml:space="preserve">
    <value>グループを表示</value>
  </data>
  <data name="RegExpTk.MainDialog.Singleline" xml:space="preserve">
    <value>単一行</value>
  </data>
  <data name="RegExpTk.MainDialog.StartColumn" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="RegExpTk.MainDialog.StringColumn" xml:space="preserve">
    <value>文字列</value>
  </data>
  <data name="RegExpTk.MainDialog.TestTab" xml:space="preserve">
    <value>テスト</value>
  </data>
  <data name="RegExpTk.Messages.ClassNameMissing" xml:space="preserve">
    <value>クラス名は空にすることができません</value>
  </data>
  <data name="RegExpTk.Messages.CompilationError" xml:space="preserve">
    <value>補完に失敗しました。理由：</value>
  </data>
  <data name="RegExpTk.Messages.CreationError" xml:space="preserve">
    <value>生成に失敗しました：理由</value>
  </data>
  <data name="RegExpTk.Messages.FileCreated" xml:space="preserve">
    <value>ファイルの生成に成功しました。</value>
  </data>
  <data name="RegExpTk.Messages.FilenameInvalid" xml:space="preserve">
    <value>有効なファイル名を入力してください。</value>
  </data>
  <data name="RegExpTk.Messages.FilenameMissing" xml:space="preserve">
    <value>ファイル名を入力してください。</value>
  </data>
  <data name="RegExpTk.Messages.Match" xml:space="preserve">
    <value>一致</value>
  </data>
  <data name="RegExpTk.Messages.Matches" xml:space="preserve">
    <value>一致</value>
  </data>
  <data name="RegExpTk.Messages.RegexMissing" xml:space="preserve">
    <value>正規表現を入力してください</value>
  </data>
  <data name="RegExpTk.RegExpMenu.DigitCharacter" xml:space="preserve">
    <value>数値</value>
  </data>
  <data name="RegExpTk.RegExpMenu.NonDigitCharacter" xml:space="preserve">
    <value>数値以外</value>
  </data>
  <data name="RegExpTk.RegExpMenu.NonWhitespaceCharacter" xml:space="preserve">
    <value>空白以外</value>
  </data>
  <data name="RegExpTk.RegExpMenu.NonWordCharacter" xml:space="preserve">
    <value>単語以外の文字</value>
  </data>
  <data name="RegExpTk.RegExpMenu.UngreedyStar" xml:space="preserve">
    <value>最短一致(Ungreedy)</value>
  </data>
  <data name="RegExpTk.RegExpMenu.WhitespaceCharacter" xml:space="preserve">
    <value>空白</value>
  </data>
  <data name="RegExpTk.RegExpMenu.WordBorder" xml:space="preserve">
    <value>単語の境界線</value>
  </data>
  <data name="RegExpTk.RegExpMenu.WordCharacter" xml:space="preserve">
    <value>単語文字</value>
  </data>
  <data name="ResourceEditor.BitmapView.UpdateBitmap" xml:space="preserve">
    <value>ビットマップを更新...</value>
  </data>
  <data name="ResourceEditor.DeleteEntry.Confirm" xml:space="preserve">
    <value>選択したリソースを本当に削除しますか？</value>
  </data>
  <data name="ResourceEditor.DeleteEntry.Title" xml:space="preserve">
    <value>リソースを削除</value>
  </data>
  <data name="ResourceEditor.Messages.CantLoadResource" xml:space="preserve">
    <value>リソースをロードできません</value>
  </data>
  <data name="ResourceEditor.ResourceCodeGeneratorTool.ClassConflict" xml:space="preserve">
    <value>エラー：リソースコードジェネレータがリソースファイル"{0}"をスキップしています。理由は生成されたクラスが既存クラス"{1}"と重複しているためです</value>
  </data>
  <data name="ResourceEditor.ResourceCodeGeneratorTool.CouldNotGenerateResourceProperty" xml:space="preserve">
    <value>リソースコードジェネレータ：リソースプロパティはリソース '{0}' を生成できません</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.CommentColumn" xml:space="preserve">
    <value>コメント</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContentColumn" xml:space="preserve">
    <value>内容</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.AddFiles" xml:space="preserve">
    <value>ファイルの追加(&amp;F)</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.AddStringEntry" xml:space="preserve">
    <value>文字列の追加(&amp;N)...</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.CopyResourceName" xml:space="preserve">
    <value>リソース名をコピー</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.EditComment" xml:space="preserve">
    <value>コメントの編集</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.EditCommentText" xml:space="preserve">
    <value>リソースコメントの新しいテキストを入力：</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.Rename" xml:space="preserve">
    <value>名前の変更(&amp;R)</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ShowAsHexDump" xml:space="preserve">
    <value>16進数ダンプとして表示</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.TypeColumn" xml:space="preserve">
    <value>型</value>
  </data>
  <data name="ResourceEditor.ResourceList.KeyAlreadyDefinedWarning" xml:space="preserve">
    <value>このキーは既に定義されています！別の名前を選択してください</value>
  </data>
  <data name="SharpDevelop.FileFilter.AllFiles" xml:space="preserve">
    <value>全てのファイル (*.*)</value>
  </data>
  <data name="SharpDevelop.FileFilter.AllKnownFiles" xml:space="preserve">
    <value>既知のファイル拡張子</value>
  </data>
  <data name="SharpDevelop.FileFilter.AssemblyFiles" xml:space="preserve">
    <value>アセンブリファイル (*.exe;*.dll)</value>
  </data>
  <data name="SharpDevelop.FileFilter.BinaryFiles" xml:space="preserve">
    <value>バイナリファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.Boo" xml:space="preserve">
    <value>Booファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.BooPrjFiles" xml:space="preserve">
    <value>Booプロジェクトファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.CombineFiles" xml:space="preserve">
    <value>コンバインファイル (*.cmbx)</value>
  </data>
  <data name="SharpDevelop.FileFilter.CPPFiles" xml:space="preserve">
    <value>C++ファイル (*.cpp;*.c;*.hpp;*.h)</value>
  </data>
  <data name="SharpDevelop.FileFilter.CSharpFiles" xml:space="preserve">
    <value>C#ファイル (*.cs)</value>
  </data>
  <data name="SharpDevelop.FileFilter.CSharpPrjFiles" xml:space="preserve">
    <value>C#プロジェクトファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.CursorFiles" xml:space="preserve">
    <value>カーソルファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.ExecutableFiles" xml:space="preserve">
    <value>実行可能ファイル (*.exe;*.com;*.pif;*.bat;*.cmd)</value>
  </data>
  <data name="SharpDevelop.FileFilter.Icons" xml:space="preserve">
    <value>アイコンファイル (*.ico)</value>
  </data>
  <data name="SharpDevelop.FileFilter.ILAsm" xml:space="preserve">
    <value>ILファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.ILAsmPrjFiles" xml:space="preserve">
    <value>ILAsmプロジェクトファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.ImageFiles" xml:space="preserve">
    <value>イメージファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.KeyFiles" xml:space="preserve">
    <value>キーファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.NAnt" xml:space="preserve">
    <value>NAntビルドファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.PrjxFiles" xml:space="preserve">
    <value>SharpDevelop 1.1 プロジェクトファイル (*.prjx)</value>
  </data>
  <data name="SharpDevelop.FileFilter.ResourceFiles" xml:space="preserve">
    <value>リソースファイル (*.resources;*.resx)</value>
  </data>
  <data name="SharpDevelop.FileFilter.SolutionFiles" xml:space="preserve">
    <value>ソリューション (*.sln)</value>
  </data>
  <data name="SharpDevelop.FileFilter.VBNetFiles" xml:space="preserve">
    <value>VBファイル (*.vb)</value>
  </data>
  <data name="SharpDevelop.FileFilter.VBNetPrjFiles" xml:space="preserve">
    <value>Visual Basicプロジェクトファイル</value>
  </data>
  <data name="SharpDevelop.FileFilter.XmlFiles" xml:space="preserve">
    <value>XMLファイル (*.xml)</value>
  </data>
  <data name="SharpDevelop.FileFilter.XmlSchemaFiles" xml:space="preserve">
    <value>XMLスキーマファイル (*.xsd)</value>
  </data>
  <data name="SharpDevelop.FileFilter.XslFiles" xml:space="preserve">
    <value>XSLファイル</value>
  </data>
  <data name="SharpDevelop.FormsDesigner.ContextMenus.SelectionMenu.AlignToGrid" xml:space="preserve">
    <value>グリッドに合わせる(&amp;G)</value>
  </data>
  <data name="SharpDevelop.FormsDesigner.ContextMenus.ViewCodeCommand" xml:space="preserve">
    <value>コードの表示(&amp;C)</value>
  </data>
  <data name="SharpDevelop.Gui.Dialogs.WizardDialog.StepsLabel" xml:space="preserve">
    <value>ステップ</value>
  </data>
  <data name="SharpDevelop.HexEditor.StreamAdded" xml:space="preserve">
    <value>ストリームを追加しました！</value>
  </data>
  <data name="SharpDevelop.Refactoring.BaseClassesOf" xml:space="preserve">
    <value>${Name}の基本クラス</value>
  </data>
  <data name="SharpDevelop.Refactoring.BaseMembersOf" xml:space="preserve">
    <value>${Name}の基本クラスのメンバー</value>
  </data>
  <data name="SharpDevelop.Refactoring.CannotPerformOperationBecauseOfSyntaxErrors" xml:space="preserve">
    <value>ソースコードにエラーが含まれているため操作は実行されません</value>
  </data>
  <data name="SharpDevelop.Refactoring.CannotRenameBecauseNotUserCode" xml:space="preserve">
    <value>ユーザコードの中で定義されているため要素の名前を変更できません</value>
  </data>
  <data name="SharpDevelop.Refactoring.CannotRenameElement" xml:space="preserve">
    <value>キャレットの場所の要素の名前を変更できません</value>
  </data>
  <data name="SharpDevelop.Refactoring.ClassesDerivingFrom" xml:space="preserve">
    <value>${Name}の派生クラス</value>
  </data>
  <data name="SharpDevelop.Refactoring.ClipboardRingCommand" xml:space="preserve">
    <value>クリップボード リングから貼り付け...</value>
  </data>
  <data name="SharpDevelop.Refactoring.ClipboardRingEmpty" xml:space="preserve">
    <value>クリップボード リングが空です</value>
  </data>
  <data name="SharpDevelop.Refactoring.ConvertToAutomaticProperty" xml:space="preserve">
    <value>プロパティを自動変換</value>
  </data>
  <data name="SharpDevelop.Refactoring.CreateChangedEvent" xml:space="preserve">
    <value>Changedイベントの生成</value>
  </data>
  <data name="SharpDevelop.Refactoring.CreateGetter" xml:space="preserve">
    <value>Getterの生成(&amp;G)</value>
  </data>
  <data name="SharpDevelop.Refactoring.CreateOnEventMethod" xml:space="preserve">
    <value>OnEventメソッドの生成</value>
  </data>
  <data name="SharpDevelop.Refactoring.CreateProperty" xml:space="preserve">
    <value>プロパティの生成</value>
  </data>
  <data name="SharpDevelop.Refactoring.CurrentMethod" xml:space="preserve">
    <value>現在のメソッド</value>
  </data>
  <data name="SharpDevelop.Refactoring.DeclaringType" xml:space="preserve">
    <value>派生型</value>
  </data>
  <data name="SharpDevelop.Refactoring.ExpandAutomaticProperty" xml:space="preserve">
    <value>プロパティを自動拡張</value>
  </data>
  <data name="SharpDevelop.Refactoring.ExtractInterfaceCommand" xml:space="preserve">
    <value>インターフェイスの抽出</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindBaseClassesCommand" xml:space="preserve">
    <value>基本クラスを探す</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindBaseClassesOrMembersCommand" xml:space="preserve">
    <value>基本クラスのシンボルを探す</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindDerivedClassesCommand" xml:space="preserve">
    <value>派生クラスの検索(&amp;D)</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindDerivedClassesOrOverridesCommand" xml:space="preserve">
    <value>派生クラスを探す</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindingReferences" xml:space="preserve">
    <value>参照を探しています...</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindOverridesCommand" xml:space="preserve">
    <value>オーバライドを探す(&amp;O)</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindReferences" xml:space="preserve">
    <value>参照を探す</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindReferencesCommand" xml:space="preserve">
    <value>参照を探す(&amp;F)</value>
  </data>
  <data name="SharpDevelop.Refactoring.GoToBaseClassCommand" xml:space="preserve">
    <value>基本クラスに移動(&amp;B)</value>
  </data>
  <data name="SharpDevelop.Refactoring.GoToBaseCommand" xml:space="preserve">
    <value>ベースに移動(&amp;B)</value>
  </data>
  <data name="SharpDevelop.Refactoring.GoToProperty" xml:space="preserve">
    <value>プロパティに移動(&amp;P)</value>
  </data>
  <data name="SharpDevelop.Refactoring.ImplementAbstractClass" xml:space="preserve">
    <value>抽象クラスの実装</value>
  </data>
  <data name="SharpDevelop.Refactoring.ImplementInterface" xml:space="preserve">
    <value>インターフェイスの実装</value>
  </data>
  <data name="SharpDevelop.Refactoring.ImplementInterfaceExplicit" xml:space="preserve">
    <value>インターフェイスの実装(明示的)</value>
  </data>
  <data name="SharpDevelop.Refactoring.ImplementInterfaceImplicit" xml:space="preserve">
    <value>インターフェイスの実装(暗黙的)</value>
  </data>
  <data name="SharpDevelop.Refactoring.InvalidName" xml:space="preserve">
    <value>名前は文字、数字、アンダースコアのみ許可されています</value>
  </data>
  <data name="SharpDevelop.Refactoring.InvalidNameStart" xml:space="preserve">
    <value>名前は文字、アンダースコアで始まらなければいけません</value>
  </data>
  <data name="SharpDevelop.Refactoring.LoadSolutionProjectsThreadRunning" xml:space="preserve">
    <value>「参照を探す」は全てのファイルがパースされるまで実行できません</value>
  </data>
  <data name="SharpDevelop.Refactoring.MoveClassToFile" xml:space="preserve">
    <value>クラスを'${FileName}'ファイルに移動</value>
  </data>
  <data name="SharpDevelop.Refactoring.OverridesOf" xml:space="preserve">
    <value>${Name}のオーバライド</value>
  </data>
  <data name="SharpDevelop.Refactoring.PartsOfClass" xml:space="preserve">
    <value>${Name}の一部</value>
  </data>
  <data name="SharpDevelop.Refactoring.ReferencesTo" xml:space="preserve">
    <value>${Name}の参照</value>
  </data>
  <data name="SharpDevelop.Refactoring.RemoveUnusedImports" xml:space="preserve">
    <value>使用されていないusing(import)ステートメントの除去(&amp;U)</value>
  </data>
  <data name="SharpDevelop.Refactoring.Rename" xml:space="preserve">
    <value>名前の変更</value>
  </data>
  <data name="SharpDevelop.Refactoring.RenameClassText" xml:space="preserve">
    <value>クラスの新しい名前を入力</value>
  </data>
  <data name="SharpDevelop.Refactoring.RenameCommand" xml:space="preserve">
    <value>名前の変更(&amp;R)</value>
  </data>
  <data name="SharpDevelop.Refactoring.RenameFieldAndProperty" xml:space="preserve">
    <value>SharpDevelopはプロパティの名前 '{0}' を '{1}' に変更すべきですか？</value>
  </data>
  <data name="SharpDevelop.Refactoring.RenameFileTo" xml:space="preserve">
    <value>${FileName}'に名前を変更</value>
  </data>
  <data name="SharpDevelop.Refactoring.RenameMemberText" xml:space="preserve">
    <value>メンバの新しい名前を入力</value>
  </data>
  <data name="SharpDevelop.SideBar.AsciiTable" xml:space="preserve">
    <value>ASCIIコード表</value>
  </data>
  <data name="SharpDevelop.SideBar.ClipboardRing" xml:space="preserve">
    <value>クリップボードリング</value>
  </data>
  <data name="SharpDevelop.SideBar.CSharpDocumentationTags" xml:space="preserve">
    <value>C#ドキュメントタグ</value>
  </data>
  <data name="SharpDevelop.SideBar.GeneralCategory" xml:space="preserve">
    <value>全般</value>
  </data>
  <data name="SharpDevelop.SideBar.LicensesTags" xml:space="preserve">
    <value>ライセンス</value>
  </data>
  <data name="SharpDevelop.SideBar.NoToolsAvailableForCurrentDocument" xml:space="preserve">
    <value>現在のドキュメントで利用可能なツールがありません</value>
  </data>
  <data name="SharpDevelop.SideBar.XSLTTags" xml:space="preserve">
    <value>XSLT</value>
  </data>
  <data name="SharpDevelop.Solution.AllKnownProjectFormats" xml:space="preserve">
    <value>すべての判明しているプロジェクト形式</value>
  </data>
  <data name="SharpDevelop.Solution.CannotLoadOldSolution" xml:space="preserve">
    <value>このSharpDevelopのバージョンではVisual Studio .NET 2003（以前）で作成されたプロジェクトを読み込むことはできません。
変換のためにSharpDevelop 3.2を使用するか、新しいプロジェクトを作成して既存ソースを追加してください。</value>
  </data>
  <data name="SharpDevelop.Solution.CannotSave.IOException" xml:space="preserve">
    <value>{0}を保存できません：\n{1}</value>
  </data>
  <data name="SharpDevelop.Solution.CannotSave.ReadOnly" xml:space="preserve">
    <value>ソリューションファイル {0} を保存できません。読み取り専用にマークされています</value>
  </data>
  <data name="SharpDevelop.Solution.CannotSave.UnauthorizedAccessException" xml:space="preserve">
    <value>{0}を保存できません：\n{1}\n\n確実に書き込み可能にしてください</value>
  </data>
  <data name="SharpDevelop.Solution.ImportResourceWarning" xml:space="preserve">
    <value>プロジェクト内にリソースファイルがありました。
SharpDevelop 2はリソースを異なってコンパイルします：リソース名はファイル名ではありませんが、ルート名前空間とディレクトリのプレフィックスです。

そのためリソースファイルはリネーム/移動されます。</value>
  </data>
  <data name="SharpDevelop.Solution.ImportResourceWarningErrorText" xml:space="preserve">
    <value>以下のファイルは自動的にリネーム/移動できませんでした</value>
  </data>
  <data name="SharpDevelop.Solution.InvalidSolutionFile" xml:space="preserve">
    <value>{0}'は正しいソリューションファイルではなりません</value>
  </data>
  <data name="SharpDevelop.Solution.UnknownSolutionVersion" xml:space="preserve">
    <value>Microsoftソリューションファイル形式 {0} を読むことができません</value>
  </data>
  <data name="SharpQuery.Label.SharpQuery" xml:space="preserve">
    <value>データベース</value>
  </data>
  <data name="SharpReport.AddinName" xml:space="preserve">
    <value>SharpDevelopレポート</value>
  </data>
  <data name="SharpReport.ContextMenu.Cut" xml:space="preserve">
    <value>フィールドの切り取り</value>
  </data>
  <data name="SharpReport.ContextMenu.FieldsList" xml:space="preserve">
    <value>フィールド</value>
  </data>
  <data name="SharpReport.ContextMenu.Functions" xml:space="preserve">
    <value>ファンクションの追加</value>
  </data>
  <data name="SharpReport.ContextMenu.Grouping" xml:space="preserve">
    <value>グループ化/ソート</value>
  </data>
  <data name="SharpReport.ContextMenu.Paste" xml:space="preserve">
    <value>フィールドの貼り付け</value>
  </data>
  <data name="SharpReport.ContextMenu.Preview" xml:space="preserve">
    <value>プレビューを表示</value>
  </data>
  <data name="SharpReport.ContextMenu.SectionVisible" xml:space="preserve">
    <value>セクションの表示</value>
  </data>
  <data name="SharpReport.ContextMenu.Settings" xml:space="preserve">
    <value>基本設定</value>
  </data>
  <data name="SharpReport.Design" xml:space="preserve">
    <value>デザイン</value>
  </data>
  <data name="SharpReport.Designer.DetailSection" xml:space="preserve">
    <value>詳細セクション</value>
  </data>
  <data name="SharpReport.Designer.PageFooter" xml:space="preserve">
    <value>ページフッター</value>
  </data>
  <data name="SharpReport.Designer.PageHeader" xml:space="preserve">
    <value>ページヘッダー</value>
  </data>
  <data name="SharpReport.Designer.ReportFooter" xml:space="preserve">
    <value>レポートフッター</value>
  </data>
  <data name="SharpReport.Designer.ReportHeader" xml:space="preserve">
    <value>レポットヘッダー</value>
  </data>
  <data name="SharpReport.DesignView.Toolbar.Printer" xml:space="preserve">
    <value>レポートをプリンタに送信</value>
  </data>
  <data name="Sharpreport.Error.NoPrinter" xml:space="preserve">
    <value>SharpDevelopレポートを実行するために、少なくとも1つのプリンタをインストールする必要があります</value>
  </data>
  <data name="SharpReport.Error.NoReport" xml:space="preserve">
    <value>これは'SharpReport'を作成するのに適切なレポートではありません</value>
  </data>
  <data name="SharpReport.Error.WrongFileFormat" xml:space="preserve">
    <value>ファイルが壊れていて読み込めません(SharpReportファイルは不正なフォーマットです)</value>
  </data>
  <data name="SharpReport.FieldsExplorer.AvailableFields" xml:space="preserve">
    <value>利用可能なフィールド</value>
  </data>
  <data name="SharpReport.FieldsExplorer.ContextMenu.Columns.Remove" xml:space="preserve">
    <value>ノードの削除</value>
  </data>
  <data name="SharpReport.FieldsExplorer.ContextMenu.Columns.ToggleSort" xml:space="preserve">
    <value>並び順を切り替える</value>
  </data>
  <data name="SharpReport.FieldsExplorer.ContextMenu.Section.Clear" xml:space="preserve">
    <value>複数ノードを削除</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Functions" xml:space="preserve">
    <value>機能</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Grouping" xml:space="preserve">
    <value>グループ化</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Parameters" xml:space="preserve">
    <value>引数</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Sorting" xml:space="preserve">
    <value>並び順</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Title" xml:space="preserve">
    <value>レポートエクスプローラ</value>
  </data>
  <data name="SharpReport.Preview" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="SharpReport.ReportGenerator" xml:space="preserve">
    <value>レポートジェネレータ</value>
  </data>
  <data name="SharpReport.ReportViewer" xml:space="preserve">
    <value>レポートビューア</value>
  </data>
  <data name="SharpReport.ReportViewer.FirstPageMessage" xml:space="preserve">
    <value>最初のページ</value>
  </data>
  <data name="SharpReport.ReportViewer.LastPageMessage" xml:space="preserve">
    <value>最後のページ</value>
  </data>
  <data name="SharpReport.ReportViewer.NextPage" xml:space="preserve">
    <value>次へ</value>
  </data>
  <data name="SharpReport.ReportViewer.PagesCreatedMessage" xml:space="preserve">
    <value>ページが生成されました</value>
  </data>
  <data name="SharpReport.ReportViewer.PdfFileMessage" xml:space="preserve">
    <value>PDFファイルを生成</value>
  </data>
  <data name="SharpReport.ReportViewer.PreviousPage" xml:space="preserve">
    <value>前へ</value>
  </data>
  <data name="SharpReport.ReportViewer.ZoomMessage" xml:space="preserve">
    <value>ズーム</value>
  </data>
  <data name="SharpReport.Toolbar.Circle" xml:space="preserve">
    <value>円</value>
  </data>
  <data name="SharpReport.Toolbar.Controls" xml:space="preserve">
    <value>SharpReport - コントロール</value>
  </data>
  <data name="SharpReport.Toolbar.DataField" xml:space="preserve">
    <value>データフィールド</value>
  </data>
  <data name="SharpReport.Toolbar.DataRow" xml:space="preserve">
    <value>データ行</value>
  </data>
  <data name="SharpReport.Toolbar.Functions" xml:space="preserve">
    <value>SharpReport - 機能</value>
  </data>
  <data name="SharpReport.Toolbar.Functions.PageNumber" xml:space="preserve">
    <value>ページ番号</value>
  </data>
  <data name="SharpReport.Toolbar.Functions.PageNumberofNumbers" xml:space="preserve">
    <value>ページ番号の数</value>
  </data>
  <data name="SharpReport.Toolbar.Functions.TodaysDate" xml:space="preserve">
    <value>今日</value>
  </data>
  <data name="SharpReport.Toolbar.GroupFooter" xml:space="preserve">
    <value>グループフッター</value>
  </data>
  <data name="SharpReport.Toolbar.GroupHeader" xml:space="preserve">
    <value>グループヘッター</value>
  </data>
  <data name="SharpReport.Toolbar.Image" xml:space="preserve">
    <value>イメージ</value>
  </data>
  <data name="SharpReport.Toolbar.Line" xml:space="preserve">
    <value>行</value>
  </data>
  <data name="SharpReport.Toolbar.Pointer" xml:space="preserve">
    <value>ポインタ</value>
  </data>
  <data name="SharpReport.Toolbar.Rectangle" xml:space="preserve">
    <value>矩形</value>
  </data>
  <data name="SharpReport.Toolbar.Table" xml:space="preserve">
    <value>表</value>
  </data>
  <data name="SharpReport.Toolbar.TextBox" xml:space="preserve">
    <value>ラベル</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings" xml:space="preserve">
    <value>基本設定</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings,ReportType" xml:space="preserve">
    <value>レポートタイプ</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.FileName" xml:space="preserve">
    <value>ファイル名</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.GraphicsUnit" xml:space="preserve">
    <value>グラフィック単位</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportModel" xml:space="preserve">
    <value>レポートモデル</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportModel.FormSheet" xml:space="preserve">
    <value>フォームシート</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportModel.Pull" xml:space="preserve">
    <value>データを取得</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportModel.Push" xml:space="preserve">
    <value>データを発行</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportName" xml:space="preserve">
    <value>レポート名</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportType" xml:space="preserve">
    <value>レポートタイプ</value>
  </data>
  <data name="SharpReport.Wizard.Layout.Column" xml:space="preserve">
    <value>グループの列を選択</value>
  </data>
  <data name="SharpReport.Wizard.Layout.Grouping" xml:space="preserve">
    <value>グルーピング</value>
  </data>
  <data name="SharpReport.Wizard.Layout.ListLayout" xml:space="preserve">
    <value>リスト レイアウト</value>
  </data>
  <data name="SharpReport.Wizard.Layout.ReportLayout" xml:space="preserve">
    <value>レポート レイアウト</value>
  </data>
  <data name="SharpReport.Wizard.Layout.TableLayout" xml:space="preserve">
    <value>表レイアウト</value>
  </data>
  <data name="SharpReport.Wizard.PullModel" xml:space="preserve">
    <value>データモデルを取得</value>
  </data>
  <data name="SharpReport.Wizard.PullModel.CommandText" xml:space="preserve">
    <value>コマンドタイプ</value>
  </data>
  <data name="SharpReport.Wizard.PullModel.CommandText.ToolTip" xml:space="preserve">
    <value>[このテキストを削除し正しいSQL文字列を入力]</value>
  </data>
  <data name="SharpReport.Wizard.PushModel" xml:space="preserve">
    <value>データモデルを発行</value>
  </data>
  <data name="SharpReport.Wizard.PushModel.AvailableFields" xml:space="preserve">
    <value>利用可能なフィールド</value>
  </data>
  <data name="SharpReport.Wizard.ShowQueryResult" xml:space="preserve">
    <value>クエリ結果を表示</value>
  </data>
  <data name="SideBarComponent.ContextMenu.AddTab" xml:space="preserve">
    <value>タブを追加(&amp;A)</value>
  </data>
  <data name="SideBarComponent.ContextMenu.DeleteTab" xml:space="preserve">
    <value>タブを削除(&amp;D)</value>
  </data>
  <data name="SideBarComponent.ContextMenu.DeleteTabHeaderQuestion" xml:space="preserve">
    <value>タブ"${TabHeader}"を削除しますか？(タブに含まれるすべての項目も削除されます)</value>
  </data>
  <data name="SideBarComponent.ContextMenu.DeleteTabItem" xml:space="preserve">
    <value>項目の削除(&amp;D)</value>
  </data>
  <data name="SideBarComponent.ContextMenu.DeleteTabItemQuestion" xml:space="preserve">
    <value>項目 "${TabItem}"を削除しますか？</value>
  </data>
  <data name="SideBarComponent.ContextMenu.RenameTab" xml:space="preserve">
    <value>タブの名前を変更(&amp;R)</value>
  </data>
  <data name="SideBarComponent.ContextMenu.RenameTabItem" xml:space="preserve">
    <value>項目の名前を変更(&amp;R)</value>
  </data>
  <data name="StartPage.AuthorsMenu.BarNameName" xml:space="preserve">
    <value>作者を表示</value>
  </data>
  <data name="StartPage.AuthorsMenu.Name" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="StartPage.ChangeLogMenu.BarNameName" xml:space="preserve">
    <value>変更履歴を表示</value>
  </data>
  <data name="StartPage.ChangeLogMenu.Name" xml:space="preserve">
    <value>変更履歴</value>
  </data>
  <data name="StartPage.ContactUs" xml:space="preserve">
    <value>お問い合わせ</value>
  </data>
  <data name="StartPage.HelpWantedMenu.BarNameName" xml:space="preserve">
    <value>協力者募集</value>
  </data>
  <data name="StartPage.HelpWantedMenu.Name" xml:space="preserve">
    <value>協力者募集</value>
  </data>
  <data name="StartPage.StartMenu.BarNameName" xml:space="preserve">
    <value>プロジェクト選択</value>
  </data>
  <data name="StartPage.StartMenu.LocationTable" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="StartPage.StartMenu.ModifiedTable" xml:space="preserve">
    <value>更新日時</value>
  </data>
  <data name="StartPage.StartMenu.Name" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="StartPage.StartMenu.NewCombineButton" xml:space="preserve">
    <value>新しいソリューション</value>
  </data>
  <data name="StartPage.StartMenu.OpenCombineButton" xml:space="preserve">
    <value>ソリューションを開く</value>
  </data>
  <data name="StartPage.StartMenu.RemoveRecentProject" xml:space="preserve">
    <value>最近使ったプロジェクトリストから削除</value>
  </data>
  <data name="StartPage.StartPageContentName" xml:space="preserve">
    <value>スタートページ</value>
  </data>
  <data name="StatusBarService.CaretModes.Insert" xml:space="preserve">
    <value>挿入</value>
  </data>
  <data name="StatusBarService.CaretModes.Overwrite" xml:space="preserve">
    <value>上書</value>
  </data>
  <data name="StatusBarService.CursorStatusBarPanelText" xml:space="preserve">
    <value>${Line}行 ${Column}列 ${Character}文字目</value>
  </data>
  <data name="StatusBarService.SelectionStatusBarPanelTextMulti" xml:space="preserve">
    <value>長さ ${Rows} * ${Cols} (${Total})</value>
  </data>
  <data name="StatusBarService.SelectionStatusBarPanelTextSingle" xml:space="preserve">
    <value>長さ ${Length}</value>
  </data>
  <data name="Templates.File.Categories.Misc" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="Templates.File.Categories.Setup" xml:space="preserve">
    <value>セットアップ</value>
  </data>
  <data name="Templates.File.Categories.WindowsApplications" xml:space="preserve">
    <value>Windowsアプリケーション</value>
  </data>
  <data name="Templates.File.ConfigurationElement.Description" xml:space="preserve">
    <value>構成要素を実装するクラス</value>
  </data>
  <data name="Templates.File.ConfigurationElement.Name" xml:space="preserve">
    <value>構成要素</value>
  </data>
  <data name="Templates.File.ConfigurationElementCollection.Description" xml:space="preserve">
    <value>構成要素コレクションを継承するクラス</value>
  </data>
  <data name="Templates.File.ConfigurationElementCollection.Name" xml:space="preserve">
    <value>構成要素コレクション</value>
  </data>
  <data name="Templates.File.ConfigurationSection.Description" xml:space="preserve">
    <value>構成セクションを実装するクラス</value>
  </data>
  <data name="Templates.File.ConfigurationSection.Name" xml:space="preserve">
    <value>構成セクション</value>
  </data>
  <data name="Templates.File.EmptyClass.Description" xml:space="preserve">
    <value>空のクラス宣言</value>
  </data>
  <data name="Templates.File.EmptyClass.Name" xml:space="preserve">
    <value>クラス</value>
  </data>
  <data name="Templates.File.EmptyFile.Description" xml:space="preserve">
    <value>空のファイルを作成</value>
  </data>
  <data name="Templates.File.EmptyFile.Name" xml:space="preserve">
    <value>空のファイル</value>
  </data>
  <data name="Templates.File.Exception.Description" xml:space="preserve">
    <value>新しい例外クラスを作成する。</value>
  </data>
  <data name="Templates.File.Exception.Name" xml:space="preserve">
    <value>例外</value>
  </data>
  <data name="Templates.File.GtkSharpWindow.Description" xml:space="preserve">
    <value>Gtk#アプリケーションのウィンドウ</value>
  </data>
  <data name="Templates.File.GtkSharpWindow.Name" xml:space="preserve">
    <value>Gtk#ウィンドウ</value>
  </data>
  <data name="Templates.File.HeaderFile.Description" xml:space="preserve">
    <value>空のヘッダーファイルの作成</value>
  </data>
  <data name="Templates.File.HeaderFile.Name" xml:space="preserve">
    <value>ヘッダーファイル</value>
  </data>
  <data name="Templates.File.Html.EmptyHtml.Name" xml:space="preserve">
    <value>空のHTMLファイル</value>
  </data>
  <data name="Templates.File.Html.EmptyHtmlFile.Description" xml:space="preserve">
    <value>空のHTMLファイルを作成</value>
  </data>
  <data name="Templates.File.Interface.Description" xml:space="preserve">
    <value>空のインターフェイス宣言</value>
  </data>
  <data name="Templates.File.Interface.Name" xml:space="preserve">
    <value>インターフェイス</value>
  </data>
  <data name="Templates.File.Module.Description" xml:space="preserve">
    <value>空のモジュール定義</value>
  </data>
  <data name="Templates.File.Module.Name" xml:space="preserve">
    <value>モジュール</value>
  </data>
  <data name="Templates.File.MsBuild.Description" xml:space="preserve">
    <value>Buildターゲットが空のMSBuildファイルを作成</value>
  </data>
  <data name="Templates.File.MsBuild.Name" xml:space="preserve">
    <value>MSBuildファイル</value>
  </data>
  <data name="Templates.File.MyExtensionClass.Description" xml:space="preserve">
    <value>"My"名前空間のクラス拡張テンプレート</value>
  </data>
  <data name="Templates.File.MyExtensionClass.Name" xml:space="preserve">
    <value>"My"拡張</value>
  </data>
  <data name="Templates.File.NAnt.NAntBuildFile.Description" xml:space="preserve">
    <value>新しいNAntビルドファイルの作成</value>
  </data>
  <data name="Templates.File.NAnt.NAntBuildFile.Name" xml:space="preserve">
    <value>NAntビルドファイル</value>
  </data>
  <data name="Templates.File.PRISMViewAndViewModelUnity.Description" xml:space="preserve">
    <value>PRISMモジュールのViewと属するViewModelを作成</value>
  </data>
  <data name="Templates.File.PRISMViewAndViewModelUnity.Name" xml:space="preserve">
    <value>PRISM ViewとViewModel (Unity)</value>
  </data>
  <data name="Templates.File.PRISMViewModelUnity.Description" xml:space="preserve">
    <value>PRISMモジュールのViewModelを作成</value>
  </data>
  <data name="Templates.File.PRISMViewModelUnity.Name" xml:space="preserve">
    <value>PRISM ViewModel (Unity)</value>
  </data>
  <data name="Templates.File.PRISMViewUnity.Description" xml:space="preserve">
    <value>PRISMモジュールのViewを作成</value>
  </data>
  <data name="Templates.File.PRISMViewUnity.Name" xml:space="preserve">
    <value>PRISM View (Unity)</value>
  </data>
  <data name="Templates.File.Properties.AddIFDEFTest" xml:space="preserve">
    <value>#if TEST ... #endif'を追加</value>
  </data>
  <data name="Templates.File.Properties.AddIFDEFTest.Description" xml:space="preserve">
    <value>真であれば、クラスはTESTシンボルが定義されている時のみコンパイルされる</value>
  </data>
  <data name="Templates.File.Properties.AddSetupCode" xml:space="preserve">
    <value>SetUpを追加</value>
  </data>
  <data name="Templates.File.Properties.AddSetupCode.Description" xml:space="preserve">
    <value>TrueであればSetUpを生成</value>
  </data>
  <data name="Templates.File.Properties.AddTearDownCode" xml:space="preserve">
    <value>TearDownを追加</value>
  </data>
  <data name="Templates.File.Properties.AddTearDownCode.Description" xml:space="preserve">
    <value>TrueであればTearDownを生成</value>
  </data>
  <data name="Templates.File.Properties.ContextCategory" xml:space="preserve">
    <value>コンテンツ</value>
  </data>
  <data name="Templates.File.Properties.OptionCategory" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="Templates.File.RecentFilesCollection.Description" xml:space="preserve">
    <value>アプリケーションで最近開かれたファイルを保存するための構成コレクションを実装</value>
  </data>
  <data name="Templates.File.RecentFilesCollection.Name" xml:space="preserve">
    <value>最近開けれたファイルのコレクション</value>
  </data>
  <data name="Templates.File.Resource.EmptyResourceFile.Description" xml:space="preserve">
    <value>空のリソースファイルを作成</value>
  </data>
  <data name="Templates.File.Resource.EmptyResourceFile.Name" xml:space="preserve">
    <value>空のリソースファイル</value>
  </data>
  <data name="Templates.File.SharpDevelop.AddInOptions.Description" xml:space="preserve">
    <value>このクラスは永続プロパティへの簡単なアクセスを提供します。</value>
  </data>
  <data name="Templates.File.SharpDevelop.AddInOptions.Name" xml:space="preserve">
    <value>アドインオプション</value>
  </data>
  <data name="Templates.File.SharpDevelop.MenuCommand.Description" xml:space="preserve">
    <value>空の#Dのメニューコマンド</value>
  </data>
  <data name="Templates.File.SharpDevelop.MenuCommand.Name" xml:space="preserve">
    <value>メニューコマンド</value>
  </data>
  <data name="Templates.File.SharpDevelop.OptionPanel.Description" xml:space="preserve">
    <value>#D オプションパネル</value>
  </data>
  <data name="Templates.File.SharpDevelop.OptionPanel.Name" xml:space="preserve">
    <value>オプションパネル</value>
  </data>
  <data name="Templates.File.SharpDevelop.SimpleCommand.Description" xml:space="preserve">
    <value>さまざまな特別なことに使われうるコマンド</value>
  </data>
  <data name="Templates.File.SharpDevelop.SimpleCommand.Name" xml:space="preserve">
    <value>シンプルコマンド</value>
  </data>
  <data name="Templates.File.SharpDevelop.SimplePad.Description" xml:space="preserve">
    <value>#D パッド コンテント (例 #D 周辺)</value>
  </data>
  <data name="Templates.File.SharpDevelop.SimplePad.Name" xml:space="preserve">
    <value>空のパッド</value>
  </data>
  <data name="Templates.File.SharpDevelop.View.Description" xml:space="preserve">
    <value>#D ビュー コンテント (例 テキストエディタ、リソースエディタ)</value>
  </data>
  <data name="Templates.File.SharpDevelop.View.Name" xml:space="preserve">
    <value>空のビュー</value>
  </data>
  <data name="Templates.File.SingletonClass.Description" xml:space="preserve">
    <value>シングルトンパターンに従うクラス</value>
  </data>
  <data name="Templates.File.SingletonClass.Name" xml:space="preserve">
    <value>シングルトンクラス</value>
  </data>
  <data name="Templates.File.Struct.Description" xml:space="preserve">
    <value>Equals()とGetHashCode()の実装を含む構造体宣言</value>
  </data>
  <data name="Templates.File.Struct.Name" xml:space="preserve">
    <value>構造体</value>
  </data>
  <data name="Templates.File.Structure.Description" xml:space="preserve">
    <value>構造体の宣言はEquals()とGetHashCode()の実装を含みます。</value>
  </data>
  <data name="Templates.File.Structure.Name" xml:space="preserve">
    <value>構造体</value>
  </data>
  <data name="Templates.File.Text.EmptyText.Name" xml:space="preserve">
    <value>空のテキストファイル</value>
  </data>
  <data name="Templates.File.Text.EmptyTextFile.Description" xml:space="preserve">
    <value>新しいテキストファイルを作成</value>
  </data>
  <data name="Templates.File.UnitTest.Description" xml:space="preserve">
    <value>基本的なユニットテストを作成</value>
  </data>
  <data name="Templates.File.UnitTest.Name" xml:space="preserve">
    <value>ユニットテスト</value>
  </data>
  <data name="Templates.File.WebControl.Description" xml:space="preserve">
    <value>カスタムWebコントロール</value>
  </data>
  <data name="Templates.File.WebControl.Name" xml:space="preserve">
    <value>ASP.NET Webコントロール</value>
  </data>
  <data name="Templates.File.WebForm.Description" xml:space="preserve">
    <value>Webフォーム：コードビハインドの.aspxページ</value>
  </data>
  <data name="Templates.File.WebForm.Name" xml:space="preserve">
    <value>ASP.NET Webフォーム</value>
  </data>
  <data name="Templates.File.WebHandler.Description" xml:space="preserve">
    <value>コードビハインドにてASP.NETののWebハンドラーを作成する。</value>
  </data>
  <data name="Templates.File.WebHandler.Name" xml:space="preserve">
    <value>ASP.NET Webハンドラ</value>
  </data>
  <data name="Templates.File.WebService.Description" xml:space="preserve">
    <value>ASMX Webサービスのコンポーネントフレーム</value>
  </data>
  <data name="Templates.File.WebService.Name" xml:space="preserve">
    <value>ASP.NET Webサービス</value>
  </data>
  <data name="Templates.File.WindowsForm.Description" xml:space="preserve">
    <value>Windowsアプリケーションのフォーム</value>
  </data>
  <data name="Templates.File.WindowsForm.Name" xml:space="preserve">
    <value>フォーム</value>
  </data>
  <data name="Templates.File.WindowsUserControl.Description" xml:space="preserve">
    <value>Windowsアプリケーションのユーザコントロール</value>
  </data>
  <data name="Templates.File.WindowsUserControl.Name" xml:space="preserve">
    <value>ユーザコントロール</value>
  </data>
  <data name="Templates.File.WinFXFlowDocument.Name" xml:space="preserve">
    <value>WPFフロードキュメント</value>
  </data>
  <data name="Templates.File.WinFXPage.Name" xml:space="preserve">
    <value>WPFページ</value>
  </data>
  <data name="Templates.File.WinFXPageFunction.Name" xml:space="preserve">
    <value>WPFページファンクション</value>
  </data>
  <data name="Templates.File.WinFXResourceDictionary.Name" xml:space="preserve">
    <value>WPFリソースディクショナリ</value>
  </data>
  <data name="Templates.File.WinFXUserControl.Description" xml:space="preserve">
    <value>WPFカスタムコントロール</value>
  </data>
  <data name="Templates.File.WinFXUserControl.Name" xml:space="preserve">
    <value>WPFユーザコントロール</value>
  </data>
  <data name="Templates.File.WinFXWindow.Description" xml:space="preserve">
    <value>WPFウィンドウ</value>
  </data>
  <data name="Templates.File.WinFXWindow.Name" xml:space="preserve">
    <value>WPFウィンドウ</value>
  </data>
  <data name="Templates.File.WiX.EmptyWiX.Description" xml:space="preserve">
    <value>WiX用の空のフラグメント</value>
  </data>
  <data name="Templates.File.WiX.EmptyWiX.Name" xml:space="preserve">
    <value>WiX用のフラグメント</value>
  </data>
  <data name="Templates.File.Wix.EmptyWixDialog.Description" xml:space="preserve">
    <value>空のセットアップダイアログを作成</value>
  </data>
  <data name="Templates.File.Wix.EmptyWixDialog.Name" xml:space="preserve">
    <value>空のセットアップダイアログ</value>
  </data>
  <data name="Templates.File.Wix.WixDialog.Description" xml:space="preserve">
    <value>デフォルトコントロールのセットアップダイアログの作成</value>
  </data>
  <data name="Templates.File.Wix.WixDialog.Name" xml:space="preserve">
    <value>セットアップダイアログ</value>
  </data>
  <data name="Templates.File.Wix.WixFile.Description" xml:space="preserve">
    <value>空のセットアップドキュメントを作成</value>
  </data>
  <data name="Templates.File.Wix.WixFile.Name" xml:space="preserve">
    <value>空のセットアップドキュメント</value>
  </data>
  <data name="Templates.File.Wix.WixProject.Description" xml:space="preserve">
    <value>空のセットアッププロジェクトを作成</value>
  </data>
  <data name="Templates.File.Wix.WixProject.Name" xml:space="preserve">
    <value>空のセットアッププロジェクト</value>
  </data>
  <data name="Templates.File.Xml.AppConfig.Description" xml:space="preserve">
    <value>アプリケーションのapp.configファイルを作成。実行ファイルの場合、MSBuildはこれをappname.exe.configという名前に変更します</value>
  </data>
  <data name="Templates.File.Xml.AppConfig.Name" xml:space="preserve">
    <value>App.Configファイル</value>
  </data>
  <data name="Templates.File.Xml.EmptyXml.Name" xml:space="preserve">
    <value>空のXMLファイル</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlFile.Description" xml:space="preserve">
    <value>空のXMLファイルを作成</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlForm.Description" xml:space="preserve">
    <value>空のXMLフォームを作成</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlForm.Name" xml:space="preserve">
    <value>XMLフォーム</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlUserControl.Description" xml:space="preserve">
    <value>空のXMLユーザコントロールを作成</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlUserControl.Name" xml:space="preserve">
    <value>XMLユーザコントロール</value>
  </data>
  <data name="Templates.Project.BlankCombine.Description" xml:space="preserve">
    <value>プロジェクトが無い空のソリューションを作成</value>
  </data>
  <data name="Templates.Project.BlankCombine.Name" xml:space="preserve">
    <value>空のソリューション</value>
  </data>
  <data name="Templates.Project.ClassLibrary.Description" xml:space="preserve">
    <value>他のアプリケーションで使われるクラス作成用プロジェクト</value>
  </data>
  <data name="Templates.Project.ClassLibrary.Name" xml:space="preserve">
    <value>クラスライブラリ</value>
  </data>
  <data name="Templates.Project.ConsoleProject.Description" xml:space="preserve">
    <value>コマンドラインアプリケーションを生成するプロジェクトです。</value>
  </data>
  <data name="Templates.Project.ConsoleProject.Name" xml:space="preserve">
    <value>コンソールアプリケーション</value>
  </data>
  <data name="Templates.Project.ConsoleProject.Unmanaged.Description" xml:space="preserve">
    <value>アンマネージ（ネイティブ）コードによるコマンドラインアプリケーションを作るアプリケーション作成するプロジェクト</value>
  </data>
  <data name="Templates.Project.ConsoleProject.Unmanaged.Name" xml:space="preserve">
    <value>アンマネージコンソールプロジェクト</value>
  </data>
  <data name="Templates.Project.Direct3DApplication.Description" xml:space="preserve">
    <value>Direct3Dインターフェイスを持つアプリケーションを作成するプロジェクト</value>
  </data>
  <data name="Templates.Project.Direct3DApplication.Name" xml:space="preserve">
    <value>Direct3Dアプリケーション</value>
  </data>
  <data name="Templates.Project.EmptyProject.Description" xml:space="preserve">
    <value>空のプロジェクト</value>
  </data>
  <data name="Templates.Project.EmptyProject.Name" xml:space="preserve">
    <value>空のプロジェクト</value>
  </data>
  <data name="Templates.Project.GladeSharpProject.Description" xml:space="preserve">
    <value>Glade# アプリケーションを作るプロジェクト</value>
  </data>
  <data name="Templates.Project.GladeSharpProject.Name" xml:space="preserve">
    <value>Glade# アプリケーション</value>
  </data>
  <data name="Templates.Project.GtkSharpProject.Description" xml:space="preserve">
    <value>Gtk# アプリケーションを作るプロジェクト</value>
  </data>
  <data name="Templates.Project.GtkSharpProject.Name" xml:space="preserve">
    <value>Gtk# アプリケーション</value>
  </data>
  <data name="Templates.Project.PortableLibrary.Description" xml:space="preserve">
    <value>Windows、Silverlight、Windows Phone、Xboxで使用されるライブラリ</value>
  </data>
  <data name="Templates.Project.PortableLibrary.Name" xml:space="preserve">
    <value>ポータブルクラスライブラリ</value>
  </data>
  <data name="Templates.Project.PRISMApplicationSmallUnity.Description" xml:space="preserve">
    <value>ブートストラップとインフラストラクチャの小さいPRISMアプリケーションを作成</value>
  </data>
  <data name="Templates.Project.PRISMApplicationSmallUnity.Name" xml:space="preserve">
    <value>PRISMアプリケーション-小 (Unity)</value>
  </data>
  <data name="Templates.Project.PRISMApplicationUnity.Description" xml:space="preserve">
    <value>ブートストラップとインフラストラクチャのPRISMアプリケーションを作成</value>
  </data>
  <data name="Templates.Project.PRISMApplicationUnity.Name" xml:space="preserve">
    <value>PRISMアプリケーション (Unity)</value>
  </data>
  <data name="Templates.Project.PRISMModuleUnity.Description" xml:space="preserve">
    <value>Viewと属するViewModelのPRISMモジュールを作成</value>
  </data>
  <data name="Templates.Project.PRISMModuleUnity.Name" xml:space="preserve">
    <value>PRISMモジュール(Unity)</value>
  </data>
  <data name="Templates.Project.SetupProject.Description" xml:space="preserve">
    <value>MSIインストーラを作成するインストーラプロジェクト</value>
  </data>
  <data name="Templates.Project.SetupProject.Name" xml:space="preserve">
    <value>セットアッププロジェクト</value>
  </data>
  <data name="Templates.Project.SharedAddin.Description" xml:space="preserve">
    <value>COMアプリケーション用の共有アドインを作成</value>
  </data>
  <data name="Templates.Project.SharedAddin.Name" xml:space="preserve">
    <value>共有アドイン</value>
  </data>
  <data name="Templates.Project.SharpDevelopAddin.Description" xml:space="preserve">
    <value>SharpDevelopアドインをすぐに作成できるテンプレートプロジェクト</value>
  </data>
  <data name="Templates.Project.SharpDevelopAddin.Name" xml:space="preserve">
    <value>SharpDevelopアドイン</value>
  </data>
  <data name="Templates.Project.SharpDevelopMacro.Description" xml:space="preserve">
    <value>アクティブなテキストエディタと選択テキストを編集できる"ツール"メニューに登録できるアドインテンプレート</value>
  </data>
  <data name="Templates.Project.SharpDevelopMacro.Name" xml:space="preserve">
    <value>ツールメニューエントリー</value>
  </data>
  <data name="Templates.Project.SilverlightApplication.Description" xml:space="preserve">
    <value>Silverlightアプリケーションのプロジェクトを作成する。</value>
  </data>
  <data name="Templates.Project.SilverlightApplication.Name" xml:space="preserve">
    <value>Silverlightアプリケーションのプロジェクトを作成する。</value>
  </data>
  <data name="Templates.Project.SysTrayIcon.Description" xml:space="preserve">
    <value>タスクバーの領域に通知アイコンを表示するアプリケーション作成するプロジェクト</value>
  </data>
  <data name="Templates.Project.SysTrayIcon.Name" xml:space="preserve">
    <value>通知アイコンアプリケーション</value>
  </data>
  <data name="Templates.Project.UserControlLibrary.Description" xml:space="preserve">
    <value>Windowsアプリケーションに使われるユーザコントロールを作成するプロジェクト</value>
  </data>
  <data name="Templates.Project.UserControlLibrary.Name" xml:space="preserve">
    <value>Windowsユーザコントロールライブラリ</value>
  </data>
  <data name="Templates.Project.WebPage.Description" xml:space="preserve">
    <value>ASP.NET Webアプリケーション</value>
  </data>
  <data name="Templates.Project.WebPage.Name" xml:space="preserve">
    <value>ASP.NET Webページプロジェクト</value>
  </data>
  <data name="Templates.Project.WebService.Description" xml:space="preserve">
    <value>ASP.NET Webサービスを作成するプロジェクト</value>
  </data>
  <data name="Templates.Project.WebService.Name" xml:space="preserve">
    <value>ASP.NET Webサービス</value>
  </data>
  <data name="Templates.Project.WindowsApplication.Description" xml:space="preserve">
    <value>Windowsインターフェイスを持つアプリケーションを作成するプロジェクト</value>
  </data>
  <data name="Templates.Project.WindowsApplication.Name" xml:space="preserve">
    <value>Windowsアプリケーション</value>
  </data>
  <data name="Templates.Project.WindowsService.Description" xml:space="preserve">
    <value>Windowsサービスを作成するプロジェクト</value>
  </data>
  <data name="Templates.Project.WindowsService.Name" xml:space="preserve">
    <value>Windowsサービス</value>
  </data>
  <data name="Templates.Project.WinFXApplication.Description" xml:space="preserve">
    <value>シンプルなWPFアプリケーションを作成</value>
  </data>
  <data name="Templates.Project.WinFXApplication.Name" xml:space="preserve">
    <value>WPFアプリケーション</value>
  </data>
  <data name="Templates.Project.WinFXNavigationApplication.Description" xml:space="preserve">
    <value>1つのナビゲーションを持つシンプルなWPFアプリケーションを作成</value>
  </data>
  <data name="Templates.Project.WinFXNavigationApplication.Name" xml:space="preserve">
    <value>WPFナビゲーションアプリケーション</value>
  </data>
  <data name="Templates.SharpReport.NewReport" xml:space="preserve">
    <value>レポートウィザードを使って新しいレポートを生成</value>
  </data>
  <data name="XML.FormsDesigner.SideBar.CustomizeSidebar" xml:space="preserve">
    <value>サイドバーの構成...</value>
  </data>
  <data name="XML.MainMenu.Analysis" xml:space="preserve">
    <value>分析(&amp;A)</value>
  </data>
  <data name="XML.MainMenu.BuildMenu" xml:space="preserve">
    <value>ビルド(&amp;B)</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.AbortBuild" xml:space="preserve">
    <value>ビルドを中断</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.BreakKey" xml:space="preserve">
    <value>ブレーク</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.BuildProject" xml:space="preserve">
    <value>${CurrentProjectName} をビルド(&amp;U)</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.BuildSolution" xml:space="preserve">
    <value>ソリューションをビルド(&amp;B)</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.CleanProject" xml:space="preserve">
    <value>${CurrentProjectName} をクリーン</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.CleanSolution" xml:space="preserve">
    <value>ソリューションをクリーン(&amp;C)</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.EditConfigurationsPlatforms" xml:space="preserve">
    <value>構成/プラットフォームを設定</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.PublishProject" xml:space="preserve">
    <value>${CurrentProjectName} を発行</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.PublishSolution" xml:space="preserve">
    <value>ソリューションを発行(&amp;P)</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.RebuildProject" xml:space="preserve">
    <value>${CurrentProjectName} をリビルド(&amp;E)</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.RebuildSolution" xml:space="preserve">
    <value>ソリューションをリビルド(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.SetConfiguration" xml:space="preserve">
    <value>構成を設定</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.SetPlatform" xml:space="preserve">
    <value>プラットフォームを設定</value>
  </data>
  <data name="XML.MainMenu.DebugMenu" xml:space="preserve">
    <value>デバッグ(&amp;D)</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Attach" xml:space="preserve">
    <value>プロセスをアタッチ...</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Break" xml:space="preserve">
    <value>中断(&amp;B)</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Break.Description" xml:space="preserve">
    <value>デバッグプロセスを中断</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Continue" xml:space="preserve">
    <value>デバッグの継続(&amp;C)</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Continue.Description" xml:space="preserve">
    <value>プロセス実行の継続</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Detach" xml:space="preserve">
    <value>デタッチ</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.BadAssembly" xml:space="preserve">
    <value>プログラムの.NET Frameworkのバージョンを取得できません。プログラムがマネージアセンブリかチェックしてください</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.CannotAttachToProcess" xml:space="preserve">
    <value>プロセスにアタッチ不可</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.CannotStartProcess" xml:space="preserve">
    <value>プロセスを開始不可</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.Debugging" xml:space="preserve">
    <value>プロセスが実行中のためアクションを実行できません</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.KernelDebuggerEnabled" xml:space="preserve">
    <value>カーネルデバッガが有効なためSharpDevelopデバッガーをスタートできません。カーネルデバッガを無効にして、Boot.iniファイルの"/debug"スイッチを削除し再起動してください</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.Net10NotSupported" xml:space="preserve">
    <value>.NET Framework 1.0プログラムのデバッグはサポートされていません</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.NotDebugging" xml:space="preserve">
    <value>デバッグしているプロセスが無いためアクションを実行できません</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.ProcessPaused" xml:space="preserve">
    <value>プロセスが一時中断しているためアクションを実行できません</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.ProcessRunning" xml:space="preserve">
    <value>プロセスが実行しているためアクションを実行できません</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.RemoveAllBreakpoints" xml:space="preserve">
    <value>全てのブレークポイントを削除</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.RunLastBuild" xml:space="preserve">
    <value>最後のビルドを実行</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.RunWithoutDebug" xml:space="preserve">
    <value>デバッグなしで開始</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.RunWithoutDebug.Description" xml:space="preserve">
    <value>デバッガにアタッチせずにプログラムを実行</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepInto" xml:space="preserve">
    <value>ステップイン</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepInto.Description" xml:space="preserve">
    <value>ステップイン</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepOut" xml:space="preserve">
    <value>ステップアウト</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepOut.Description" xml:space="preserve">
    <value>ステップアウト</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepOver" xml:space="preserve">
    <value>ステップオーバー</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepOver.Description" xml:space="preserve">
    <value>ステップオーバー</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Stop" xml:space="preserve">
    <value>プロセスを停止</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Stop.Description" xml:space="preserve">
    <value>現在のプロセスを停止させ、デバッガを終了します。</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.ToggleBreakpoint" xml:space="preserve">
    <value>ブレークポイントを切り替え</value>
  </data>
  <data name="XML.MainMenu.EditMenu" xml:space="preserve">
    <value>編集(&amp;E)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Copy" xml:space="preserve">
    <value>コピー(&amp;C)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Copy.Description" xml:space="preserve">
    <value>選択範囲をクリップボードにコピーします</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Cut" xml:space="preserve">
    <value>切り取り(&amp;T)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Cut.Description" xml:space="preserve">
    <value>選択範囲を切り取ってクリップボードに移動します</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Delete" xml:space="preserve">
    <value>削除(&amp;D)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Delete.Description" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FoldingMenu" xml:space="preserve">
    <value>折りたたむ(&amp;O)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FoldingMenu.ShowDefinitions" xml:space="preserve">
    <value>定義だけ表示(&amp;D)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FoldingMenu.ToggleAllFoldings" xml:space="preserve">
    <value>全ての折りたたみを切り替える(&amp;A)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FoldingMenu.ToggleFolding" xml:space="preserve">
    <value>折りたたみを切り替える(&amp;T)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu" xml:space="preserve">
    <value>フォーマット(&amp;F)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.Capitalize" xml:space="preserve">
    <value>最初の文字を大文字へ変換</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.InvertCase" xml:space="preserve">
    <value>大文字と小文字を反転</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab" xml:space="preserve">
    <value>行頭の空白をタブに変換</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.LdTab2Space" xml:space="preserve">
    <value>行頭のタブをスペースに変換</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.LowerCase" xml:space="preserve">
    <value>小文字に変換します</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.RlWs" xml:space="preserve">
    <value>行頭のスペースを削除</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.RtWs" xml:space="preserve">
    <value>行末のスペースを削除</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.SortLines" xml:space="preserve">
    <value>行を並べ替え...</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.Space2Tab" xml:space="preserve">
    <value>スペースをタブに置換</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.Tab2Space" xml:space="preserve">
    <value>タブをスペースに置換</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.UpperCase" xml:space="preserve">
    <value>大文字に変換</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Insert" xml:space="preserve">
    <value>挿入(&amp;I)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Paste" xml:space="preserve">
    <value>貼り付け(&amp;P)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Paste.AsComment" xml:space="preserve">
    <value>コメントとして貼り付け</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Paste.AsString" xml:space="preserve">
    <value>文字列として貼り付け</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Paste.Description" xml:space="preserve">
    <value>クリップボードの文字列を挿入します</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Redo" xml:space="preserve">
    <value>やり直し(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Redo.Description" xml:space="preserve">
    <value>前の未完了操作を繰り返します</value>
  </data>
  <data name="XML.MainMenu.EditMenu.SelectAll" xml:space="preserve">
    <value>すべて選択(&amp;A)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Undo" xml:space="preserve">
    <value>元に戻す(&amp;U)</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Undo.Description" xml:space="preserve">
    <value>直前に行った操作を取り消します</value>
  </data>
  <data name="XML.MainMenu.EditMenu.WordCount" xml:space="preserve">
    <value>文字数カウント(&amp;W)...</value>
  </data>
  <data name="XML.MainMenu.FileMenu" xml:space="preserve">
    <value>ファイル(&amp;F)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.ClearRecentFiles" xml:space="preserve">
    <value>最近使ったファイルリストをクリア</value>
  </data>
  <data name="XML.MainMenu.FileMenu.ClearRecentProjects" xml:space="preserve">
    <value>最近使ったプロジェクトリストをクリア</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Close" xml:space="preserve">
    <value>閉じる(&amp;C)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Close.File" xml:space="preserve">
    <value>ファイル(&amp;F)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Close.Project" xml:space="preserve">
    <value>ソリューション(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.CloseAll" xml:space="preserve">
    <value>すべてのバッファを閉じる(&amp;L)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Exit" xml:space="preserve">
    <value>アプリケーションの終了(&amp;E)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New" xml:space="preserve">
    <value>新規作成(&amp;N)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New.File" xml:space="preserve">
    <value>ファイル(&amp;F)...</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New.File.Description" xml:space="preserve">
    <value>新しいバッファをオープンします</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New.Project" xml:space="preserve">
    <value>プロジェクト(&amp;P)...</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New.Solution" xml:space="preserve">
    <value>ソリューション(&amp;S)...</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open" xml:space="preserve">
    <value>開く(&amp;O)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open.File" xml:space="preserve">
    <value>ファイル(&amp;F)...</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open.File.Description" xml:space="preserve">
    <value>既存のファイルを開きます</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open.Project" xml:space="preserve">
    <value>プロジェクト/ソリューション(&amp;P)...</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open.Project.Description" xml:space="preserve">
    <value>既存のプロジェクト/ソリューションを開きます</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Print" xml:space="preserve">
    <value>印刷(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.PrintPreview" xml:space="preserve">
    <value>印刷プレビュー(&amp;P)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.RecentFiles" xml:space="preserve">
    <value>最近使ったファイル(&amp;F)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.RecentProjects" xml:space="preserve">
    <value>最近使ったプロジェクト(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Reload" xml:space="preserve">
    <value>ファイルを再読み込み(&amp;E)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Save" xml:space="preserve">
    <value>上書き保存(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Save.Description" xml:space="preserve">
    <value>現在のバッファを上書き保存します</value>
  </data>
  <data name="XML.MainMenu.FileMenu.SaveAll" xml:space="preserve">
    <value>すべて保存(&amp;L)</value>
  </data>
  <data name="XML.MainMenu.FileMenu.SaveAll.Description" xml:space="preserve">
    <value>現在オープンしているバッファをすべて保存します</value>
  </data>
  <data name="XML.MainMenu.FileMenu.SaveAs" xml:space="preserve">
    <value>名前を付けて保存(&amp;A)...</value>
  </data>
  <data name="XML.MainMenu.FileMenu.SaveWithEncoding" xml:space="preserve">
    <value>エンコーディングを指定して保存(&amp;E)…</value>
  </data>
  <data name="XML.MainMenu.FormatMenu" xml:space="preserve">
    <value>フォーマット(&amp;O)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu" xml:space="preserve">
    <value>整列(&amp;A)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignBottom" xml:space="preserve">
    <value>下(&amp;B)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignHorizontalCenters" xml:space="preserve">
    <value>左右中央(&amp;C)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignHorizontalLeft" xml:space="preserve">
    <value>左(&amp;L)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignHorizontalRight" xml:space="preserve">
    <value>右(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignToGrid" xml:space="preserve">
    <value>グリッドに合わせる(&amp;G)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignTop" xml:space="preserve">
    <value>上(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignVerticalCenters" xml:space="preserve">
    <value>上下中央(&amp;M)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.CenterMenu" xml:space="preserve">
    <value>フォームの中央に配置(&amp;C)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.CenterMenu.CenterHorizontally" xml:space="preserve">
    <value>左右(&amp;H)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.CenterMenu.CenterVertically" xml:space="preserve">
    <value>上下(&amp;V)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu" xml:space="preserve">
    <value>左右の間隔(&amp;H)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.BringToFront" xml:space="preserve">
    <value>最前面へ移動(&amp;B)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.HorizSpaceConcatenate" xml:space="preserve">
    <value>削除(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.HorizSpaceDecrease" xml:space="preserve">
    <value>間隔を狭くする(&amp;D)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.HorizSpaceIncrease" xml:space="preserve">
    <value>間隔を広くする(&amp;I)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.HorizSpaceMakeEqual" xml:space="preserve">
    <value>間隔を均等にする(&amp;E)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.SendToBack" xml:space="preserve">
    <value>最背面へ移動(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.LineUpIcons" xml:space="preserve">
    <value>アイコンの整列(&amp;L)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.Lock" xml:space="preserve">
    <value>コントロールのロック(&amp;L)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.OrderMenu" xml:space="preserve">
    <value>順序(&amp;O)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.OrderMenu.BringToFront" xml:space="preserve">
    <value>最前面へ移動(&amp;B)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.OrderMenu.SendToBack" xml:space="preserve">
    <value>最背面へ移動(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu" xml:space="preserve">
    <value>同じサイズに揃える(&amp;M)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu.SizeToControl" xml:space="preserve">
    <value>両方(&amp;B)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu.SizeToControlHeight" xml:space="preserve">
    <value>高さ(&amp;H)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu.SizeToControlWidth" xml:space="preserve">
    <value>幅(&amp;W)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu.SizeToGrid" xml:space="preserve">
    <value>グリッドのサイズに揃える(&amp;D)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.ShowLargeIcons" xml:space="preserve">
    <value>大きいアイコンで表示(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.ShowProperties" xml:space="preserve">
    <value>プロパティ(&amp;P)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.ShowTabOrder" xml:space="preserve">
    <value>タブオーダを表示(&amp;T)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu" xml:space="preserve">
    <value>上下の間隔(&amp;V)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu.VertSpaceConcatenate" xml:space="preserve">
    <value>削除(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu.VertSpaceDecrease" xml:space="preserve">
    <value>間隔を狭くする(&amp;D)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu.VertSpaceIncrease" xml:space="preserve">
    <value>間隔を広くする(&amp;I)</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu.VertSpaceMakeEqual" xml:space="preserve">
    <value>間隔を均等にする(&amp;E)</value>
  </data>
  <data name="XML.MainMenu.HelpMenu" xml:space="preserve">
    <value>ヘルプ(&amp;H)</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.About" xml:space="preserve">
    <value>バージョン情報(&amp;A)...</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.ContextHelp" xml:space="preserve">
    <value>コンテキストヘルプ</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.DynamicHelp" xml:space="preserve">
    <value>ダイナミックヘルプ(&amp;D)</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.GPL" xml:space="preserve">
    <value>GPLを表示(&amp;G)...</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.ReadMe" xml:space="preserve">
    <value>&amp;ReadMe...</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.StyleGuide" xml:space="preserve">
    <value>コーディングスタイルガイド</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.Tips" xml:space="preserve">
    <value>今日のTip(&amp;T)...</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.Topics" xml:space="preserve">
    <value>目次(&amp;H)</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.WebMenu" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="XML.MainMenu.Navigation.Back" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="XML.MainMenu.Navigation.ClearHistory" xml:space="preserve">
    <value>履歴をクリア</value>
  </data>
  <data name="XML.MainMenu.Navigation.Forward" xml:space="preserve">
    <value>進む</value>
  </data>
  <data name="XML.MainMenu.ProjectMenu" xml:space="preserve">
    <value>プロジェクト(&amp;P)</value>
  </data>
  <data name="XML.MainMenu.ProjectMenu.Options" xml:space="preserve">
    <value>プロジェクト設定(&amp;O)...</value>
  </data>
  <data name="XML.MainMenu.RefactorMenu" xml:space="preserve">
    <value>リファクタ(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.RunMenu.BuildProject.Description" xml:space="preserve">
    <value>現在のプロジェクトをビルド</value>
  </data>
  <data name="XML.MainMenu.RunMenu.BuildSolution.Description" xml:space="preserve">
    <value>現在のソリューションの全プロジェクトをビルド</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Compile.Description" xml:space="preserve">
    <value>アクティブなプロジェクトもしくはバッファをビルドします(自動保存します)</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Compile.StopDebuggingQuestion" xml:space="preserve">
    <value>プロジェクトをビルドするためデバッガーを停止する必要があります
デバッグを中断しますか？</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Compile.StopDebuggingTitle" xml:space="preserve">
    <value>デバッグの中断</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Run" xml:space="preserve">
    <value>実行(&amp;R)</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Run.Description" xml:space="preserve">
    <value>コンパイルされた実行ファイルを実行します(リコンパイルします)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu" xml:space="preserve">
    <value>検索(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ClrBookmark" xml:space="preserve">
    <value>すべてのブックマークを削除(&amp;C)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ClrBookmark.Description" xml:space="preserve">
    <value>現在のバッファのすべてのブックマークを削除します</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.Find" xml:space="preserve">
    <value>検索(&amp;F)...</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.FindNext" xml:space="preserve">
    <value>次を検索(&amp;N)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.FindNextSelected" xml:space="preserve">
    <value>選択された次を検索(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.Goto" xml:space="preserve">
    <value>移動(&amp;G)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.GotoBrace" xml:space="preserve">
    <value>一致する中括弧に移動(&amp;M)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.IncrementalSearch" xml:space="preserve">
    <value>インクリメントサーチ</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.NextBookmark" xml:space="preserve">
    <value>次のブックマーク(&amp;X)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.NextBookmark.Description" xml:space="preserve">
    <value>次のブックマークへ移動します</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.PrevBookmark" xml:space="preserve">
    <value>前のブックマーク(&amp;P)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.PrevBookmark.Description" xml:space="preserve">
    <value>前のブックマークに移動します</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.Replace" xml:space="preserve">
    <value>置換(&amp;R)...</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ReverseIncrementalSearch" xml:space="preserve">
    <value>逆インクリメントサーチ</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ToggleBookmark" xml:space="preserve">
    <value>ブックマークの挿入/削除(&amp;T)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ToggleBookmark.Description" xml:space="preserve">
    <value>現在編集中の行へブックマークを挿入または削除します</value>
  </data>
  <data name="XML.MainMenu.ToolMenu" xml:space="preserve">
    <value>ツール(&amp;T)</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.ConvertCodeTo" xml:space="preserve">
    <value>コードを変換(&amp;C)</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.ExternalTools.EnterArguments" xml:space="preserve">
    <value>ツールの引数を入力：</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.ExternalTools.ExecutionFailed" xml:space="preserve">
    <value>外部プログラムの実行に失敗しました
開始時のエラー：
</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.ExternalTools.ExitedWithCode" xml:space="preserve">
    <value>終了済みコード：</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.GenerateCode" xml:space="preserve">
    <value>自動的にコードを生成</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.InsColor" xml:space="preserve">
    <value>色の挿入...</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.InsGUID" xml:space="preserve">
    <value>新しいGUIDを挿入(&amp;G)</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.Options" xml:space="preserve">
    <value>オプション(&amp;P)...</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.QuickXmlDoc" xml:space="preserve">
    <value>Quick XMLドキュメント</value>
  </data>
  <data name="XML.MainMenu.ToolsMenu.RegularExpressionToolkit" xml:space="preserve">
    <value>正規表現ツールキット</value>
  </data>
  <data name="XML.MainMenu.ViewMenu" xml:space="preserve">
    <value>表示(&amp;V)</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.DebugMenu" xml:space="preserve">
    <value>デバッグ(&amp;D)</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.FullScreen" xml:space="preserve">
    <value>フルスクリーン(&amp;F)</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.SetupMenu" xml:space="preserve">
    <value>セットアップ</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.SetupMenu.DialogsMenu" xml:space="preserve">
    <value>ダイアログ</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.SetupMenu.FilesMenu" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.ShowStartPage" xml:space="preserve">
    <value>スタートページを表示(&amp;S)</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.ToolsMenu" xml:space="preserve">
    <value>ツール(&amp;T)</value>
  </data>
  <data name="XML.MainMenu.WindowMenu" xml:space="preserve">
    <value>ウィンドウ(&amp;W)</value>
  </data>
  <data name="XML.MainMenu.WindowMenu.NxtWindow" xml:space="preserve">
    <value>次(&amp;N)</value>
  </data>
  <data name="XML.MainMenu.WindowMenu.PrvWindow" xml:space="preserve">
    <value>前(&amp;P)</value>
  </data>
  <data name="XML.MainMenu.WindowMenu.Split" xml:space="preserve">
    <value>分割(&amp;S)</value>
  </data>
  <data name="XML.StandardHeader.CreatedBySharpDevelop" xml:space="preserve">
    <value>SharpDevelopによって生成</value>
  </data>
  <data name="XML.StandardHeader.Date" xml:space="preserve">
    <value>日付：</value>
  </data>
  <data name="XML.StandardHeader.HowToChangeTemplateInformation" xml:space="preserve">
    <value>このテンプレートを変更する場合「ツール→オプション→コーディング→標準ヘッダの編集」</value>
  </data>
  <data name="XML.StandardHeader.Time" xml:space="preserve">
    <value>時刻：</value>
  </data>
  <data name="XML.StandardHeader.User" xml:space="preserve">
    <value>ユーザ：</value>
  </data>
  <data name="XML.TextAreaContextMenu.BufferOptions" xml:space="preserve">
    <value>バッファの設定</value>
  </data>
  <data name="XML.TextAreaContextMenu.CommentUncommentSelection" xml:space="preserve">
    <value>選択範囲をコメント化</value>
  </data>
  <data name="XML.TextAreaContextMenu.Copy" xml:space="preserve">
    <value>コピー(&amp;C)</value>
  </data>
  <data name="XML.TextAreaContextMenu.Cut" xml:space="preserve">
    <value>切り取り(&amp;T)</value>
  </data>
  <data name="XML.TextAreaContextMenu.FileMode" xml:space="preserve">
    <value>ファイルモード</value>
  </data>
  <data name="XML.TextAreaContextMenu.Indent" xml:space="preserve">
    <value>インデント</value>
  </data>
  <data name="XML.TextAreaContextMenu.Paste" xml:space="preserve">
    <value>貼り付け(&amp;P)</value>
  </data>
  <data name="XML.TextAreaContextMenu.Refactoring" xml:space="preserve">
    <value>リファクタ</value>
  </data>
  <data name="XML.TextAreaContextMenu.UncommentSelection" xml:space="preserve">
    <value>選択範囲を非コメント化</value>
  </data>
  <data name="_Internal.Bogus.Translation.Test1" xml:space="preserve">
    <value>このリソースは使われません。改行
のテスト目的です。（この日本語翻訳について要望などありましたらSharpDevelop-jpまでお願いします）</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.TooltipLabel" xml:space="preserve">
    <value>ツールチップの設定</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.CommitOnCharacters" xml:space="preserve">
    <value>次の文字を入力時に選択されたコード補完候補を挿入：</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.CommitOnTabEnterOnly" xml:space="preserve">
    <value>&lt;Tab&gt; または &lt;Enter&gt; の入力時のみ選択されたコード補完候補を挿入</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.ExceptionFilterTitle" xml:space="preserve">
    <value>デバッガをブレークする例外を選択</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.ExceptionFilter.ColumnIsActive" xml:space="preserve">
    <value>ブレークする例外</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.ExceptionFilter.ColumnExpression" xml:space="preserve">
    <value>例外の完全修飾名</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.ChooseExceptions" xml:space="preserve">
    <value>例外を選択</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.BreakOnHandled" xml:space="preserve">
    <value>${ExceptionName}のハンドル時にブレーク</value>
  </data>
  <data name="MainWindow.Windows.TaskList.Solution" xml:space="preserve">
    <value>ソリューション</value>
  </data>
  <data name="MainWindow.Windows.TaskList.Project" xml:space="preserve">
    <value>プロジェクト</value>
  </data>
  <data name="MainWindow.Windows.TaskList.AllOpenedFiles" xml:space="preserve">
    <value>全ての開かれたファイル</value>
  </data>
  <data name="MainWindow.Windows.TaskList.CurrentFile" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="MainWindow.Windows.TaskList.Namespace" xml:space="preserve">
    <value>名前空間</value>
  </data>
  <data name="MainWindow.Windows.TaskList.CurrentClass" xml:space="preserve">
    <value>クラス/モジュール</value>
  </data>
  <data name="ResourceEditor.BitmapView.UpdateIcon" xml:space="preserve">
    <value>アイコンの更新...</value>
  </data>
  <data name="ResourceEditor.Messages.CantLoadResourceFromFile" xml:space="preserve">
    <value>ファイル： {0} からリソースをロードできません</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.AddBooleanEntry" xml:space="preserve">
    <value>ブール値の登録(&amp;B)</value>
  </data>
  <data name="ResourceEditor.Filter" xml:space="preserve">
    <value>フィルタ：</value>
  </data>
  <data name="ResourceEditor.BitmapView.UpdateCursor" xml:space="preserve">
    <value>カーソルの更新...</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.SearchForIssues" xml:space="preserve">
    <value>問題の検索...</value>
  </data>
  <data name="Dialog.SearchForIssues.AutoFix" xml:space="preserve">
    <value>修正可能な問題を自動的に修正</value>
  </data>
  <data name="Dialog.Options.ServicesReferencesText" xml:space="preserve">
    <value>サービス参照</value>
  </data>
  <data name="XML.TextAreaContextMenu.Reformat" xml:space="preserve">
    <value>再フォーマット</value>
  </data>
  <data name="Global.Reset" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="Dialog.ProjectOptions.CustomTool.RunOnBuild" xml:space="preserve">
    <value>ビルド時に実行</value>
  </data>
  <data name="Dialog.ProjectOptions.CustomTool.Filenames" xml:space="preserve">
    <value>ファイル名：</value>
  </data>
  <data name="Debugger.Visualizers.ColumnPickerLabel" xml:space="preserve">
    <value>カラム：</value>
  </data>
  <data name="Global.Shortcuts.Ctrl" xml:space="preserve">
    <value>Ctrlキー</value>
  </data>
  <data name="Global.Shortcuts.Shift" xml:space="preserve">
    <value>Shiftキー</value>
  </data>
  <data name="Global.Shortcuts.Alt" xml:space="preserve">
    <value>Altキー</value>
  </data>
  <data name="Global.Shortcuts.Win" xml:space="preserve">
    <value>Winキー</value>
  </data>
  <data name="AddIns.Debugger.Console.ClearConsole" xml:space="preserve">
    <value>コンソールをクリア</value>
  </data>
  <data name="AddIns.Debugger.Console.DeleteHistory" xml:space="preserve">
    <value>履歴を削除</value>
  </data>
  <data name="MainWindow.Windows.OutputWindow.TextTooLong" xml:space="preserve">
    <value>&lt;テキストが長すぎるため省略されました&gt;</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildingProjectIsNotSupported" xml:space="preserve">
    <value>プロジェクト ${Name} のビルドはサポートされていません。</value>
  </data>
  <data name="Dialog.AddServiceReference.ServicesLabel" xml:space="preserve">
    <value>サービス：</value>
  </data>
  <data name="Dialog.AddServiceReference.OperationsLabel" xml:space="preserve">
    <value>操作：</value>
  </data>
  <data name="AddIns.PackageManagement.Menu.ManagePackages" xml:space="preserve">
    <value>パッケージの管理...</value>
  </data>
  <data name="AddIns.PackageManagement.Menu.RestorePackages" xml:space="preserve">
    <value>パッケージの復元</value>
  </data>
  <data name="AddIns.PackageManagement.Options.Title" xml:space="preserve">
    <value>パッケージ管理</value>
  </data>
  <data name="AddIns.PackageManagement.Options.PackageSources" xml:space="preserve">
    <value>パッケージ ソース</value>
  </data>
  <data name="AddIns.PackageManagement.ConsolePad.Title" xml:space="preserve">
    <value>パッケージ管理コンソール</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodingOptions.CodeIssues.Title" xml:space="preserve">
    <value>コードインスペクション</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodingOptions.CodeFormatting.Title" xml:space="preserve">
    <value>フォーマット</value>
  </data>
  <data name="CSharpBinding.Refactoring.InsertWithCursor.Description" xml:space="preserve">
    <value>上下キーで移動できます。
位置を決定するにはEnterキーを押してください。
Escキーを押すと取り消します。</value>
  </data>
  <data name="Dialog.AdvancedService.ClientHeader" xml:space="preserve">
    <value>クライアント</value>
  </data>
  <data name="Dialog.AdvancedService.Client.GenerateAsyncOperations" xml:space="preserve">
    <value>非同期操作を生成する</value>
  </data>
  <data name="Dialog.AdvancedService.Client.AccessLevel.Public" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="Dialog.AdvancedService.Client.AccessLevel.Internal" xml:space="preserve">
    <value>Internal</value>
  </data>
  <data name="Dialog.AdvancedService.Client.AccessLevelLabel" xml:space="preserve">
    <value>生成するクラスのアクセスレベル：</value>
  </data>
  <data name="SharpReport.Wizard.Welcome" xml:space="preserve">
    <value>SharpReport ウィザードの開始</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.Description" xml:space="preserve">
    <value>報告の基本設定</value>
  </data>
  <data name="SharpReport.Wizard.PushModel.SelectProject" xml:space="preserve">
    <value>選択されたプロジェクトに含まれるクラス</value>
  </data>
  <data name="SharpReport.Wizard.PageLayout" xml:space="preserve">
    <value>ページレイアウト </value>
  </data>
  <data name="SharpReport.Wizard.PushModel.NoProject" xml:space="preserve">
    <value>プロジェクトが選択されていません。フィールド名を入力してください。</value>
  </data>
  <data name="CSharpBinding.Refactoring.EventCreation.EventHandlerText" xml:space="preserve">
    <value>&lt;${HandlerName} の作成&gt;</value>
  </data>
  <data name="AddIns.Git.Options.Title" xml:space="preserve">
    <value>Git オプション</value>
  </data>
  <data name="AddIns.Git.NoPathFoundStatus" xml:space="preserve">
    <value>インストールされたGitが見つかりません。</value>
  </data>
  <data name="AddIns.Git.PathAutoDetectStatus" xml:space="preserve">
    <value>(自動検出)</value>
  </data>
  <data name="AddIns.Git.DirectoryDoesNotContainGit" xml:space="preserve">
    <value>選択されたディレクトリに 'git.exe' が見つかりませんでした！</value>
  </data>
  <data name="AddIns.Git.Options.FindGitPath" xml:space="preserve">
    <value>Git パスの選択</value>
  </data>
  <data name="AddIns.Git.Options.ResetGitPath" xml:space="preserve">
    <value>Git パスのリセット</value>
  </data>
  <data name="AddIns.Git.Options.GitPath" xml:space="preserve">
    <value>Git パス</value>
  </data>
  <data name="ICSharpCode.WpfDesign.AddIn.PressAltText" xml:space="preserve">
    <value>"Alt" を押してコンテナに移動</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo" xml:space="preserve">
    <value>アセンブリ情報</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.AssemblyVersion" xml:space="preserve">
    <value>アセンブリ バージョン：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.Company" xml:space="preserve">
    <value>会社名：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.Copyright" xml:space="preserve">
    <value>著作権：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.Description" xml:space="preserve">
    <value>コメント：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.FileVersion" xml:space="preserve">
    <value>ファイル バージョン：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.GUID" xml:space="preserve">
    <value>GUID：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.MakeAssemblyCOMVisible" xml:space="preserve">
    <value>アセンブリをCOM参照可能にする</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.NeutralLanguage" xml:space="preserve">
    <value>ニュートラル言語：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.Product" xml:space="preserve">
    <value>製品名：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.Title" xml:space="preserve">
    <value>説明：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.Trademark" xml:space="preserve">
    <value>商標：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.AssemblyInfoNotFound" xml:space="preserve">
    <value>アセンブリ情報ファイルが見つかりません。プロジェクトにアセンブリ情報ファイルを含めてください。</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.ClsCompliant" xml:space="preserve">
    <value>CLS準拠</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.DefaultAlias" xml:space="preserve">
    <value>既定のエイリアス：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.InformationalVersion" xml:space="preserve">
    <value>追加のバージョン情報：</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.JitOptimization" xml:space="preserve">
    <value>JIT最適化</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.JitTracking" xml:space="preserve">
    <value>JIT追跡情報</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.NewGUID" xml:space="preserve">
    <value>新しいGUID</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.IncorrectValue" xml:space="preserve">
    <value>アセンブリ情報の一部の値が正しくありません。</value>
  </data>
  <data name="Dialog.ProjectOptions.AssemblyInfo.None" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="ICSharpCode.WpfDesign.AddIn.Options.Title" xml:space="preserve">
    <value>WPFエディタ</value>
  </data>
  <data name="ICSharpCode.WpfDesign.AddIn.Options.EnableAppXamlParsing" xml:space="preserve">
    <value>App.xamlのパースを有効にする</value>
  </data>
</root>